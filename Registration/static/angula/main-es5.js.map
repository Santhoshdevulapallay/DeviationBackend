{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_bigmodal/bigmodal.component.ts","webpack:///src/app/_bigmodal/bigmodal.component.html","webpack:///src/app/_bigmodal/bigmodal.module.ts","webpack:///src/app/_bigmodal/bigmodal.service.ts","webpack:///src/app/_bigmodal/index.ts","webpack:///src/app/_modal/index.ts","webpack:///src/app/_modal/modal.component.ts","webpack:///src/app/_modal/modal.component.html","webpack:///src/app/_modal/modal.module.ts","webpack:///src/app/_modal/modal.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/configure/configure.component.ts","webpack:///src/app/configure/configure.component.html","webpack:///src/app/configure/date-list.service.ts","webpack:///src/app/configure/modify-bills/modify-bills.component.ts","webpack:///src/app/configure/modify-bills/modify-bills.component.html","webpack:///src/app/configure/view-bills/view-bills.component.ts","webpack:///src/app/configure/view-bills/view-bills.component.html","webpack:///src/app/edit-bankdetails/edit-bankdetails.component.ts","webpack:///src/app/edit-bankdetails/edit-bankdetails.component.html","webpack:///src/app/edit-bankdetails/pending-bank/pending-bank.component.ts","webpack:///src/app/edit-bankdetails/pending-bank/pending-bank.component.html","webpack:///src/app/edit-contact/edit-contact.component.ts","webpack:///src/app/edit-contact/edit-contact.component.html","webpack:///src/app/edit-contact/pending-contact/pending-contact.component.ts","webpack:///src/app/edit-contact/pending-contact/pending-contact.component.html","webpack:///src/app/file-upload/file-upload.component.ts","webpack:///src/app/file-upload/file-upload.component.html","webpack:///src/app/form-submitted/form-submitted.component.ts","webpack:///src/app/form-submitted/form-submitted.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/header/home-notification/home-notification.component.ts","webpack:///src/app/header/home-notification/home-notification.component.html","webpack:///src/app/new-chat/new-chat.component.ts","webpack:///src/app/new-chat/new-chat.component.html","webpack:///src/app/payment-details/payment-details.component.ts","webpack:///src/app/payment-details/payment-details.component.html","webpack:///src/app/payment-details/dialog.html","webpack:///src/app/payment-details/payment-details.service.ts","webpack:///src/app/payment-details/pending-payments/pending-payments.component.ts","webpack:///src/app/payment-details/pending-payments/pending-payments.component.html","webpack:///src/app/payment-details/weekly-disbursements/weekly-disbursements.component.ts","webpack:///src/app/payment-details/weekly-disbursements/weekly-disbursements.component.html","webpack:///src/app/payment-details/weekly-disbursements/disburse-withoutprorata.html","webpack:///src/app/registration/notification.service.ts","webpack:///src/app/registration/register-popup/register-popup.component.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/registration/form-data.html","webpack:///src/app/registration/registration.service.ts","webpack:///src/app/services/chat-service.service.ts","webpack:///src/app/shared/file-upload.service.ts","webpack:///src/app/shared/material.module.ts","webpack:///src/app/shared/popup-data.service.ts","webpack:///src/app/shared/validator.ts","webpack:///src/app/super-user/all-users/all-users.component.ts","webpack:///src/app/super-user/all-users/all-users.component.html","webpack:///src/app/super-user/super-user.component.ts","webpack:///src/app/super-user/super-user.component.html","webpack:///src/app/usercreation/mo-bankdetails/mo-bankdetails.component.ts","webpack:///src/app/usercreation/mo-bankdetails/mo-bankdetails.component.html","webpack:///src/app/usercreation/usercreation.component.ts","webpack:///src/app/usercreation/usercreation.component.html","webpack:///src/app/usercreation/usercreation.service.ts","webpack:///src/app/usercreation/userdetails/userdetails.component.ts","webpack:///src/app/usercreation/userdetails/userdetails.component.html","webpack:///src/app/usercreation/userdetails/userdetails.validator.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","BigModalComponent","modalService","el","element","nativeElement","console","error","document","body","appendChild","addEventListener","target","className","close","add","remove","style","display","classList","selector","templateUrl","styleUrls","encapsulation","None","BigModalModule","imports","declarations","BigModalService","modals","modal","push","filter","x","find","open","providedIn","ModalComponent","ModalModule","ModalService","routes","path","loadChildren","m","AuthRouting","HeaderRouting","NewChatRouting","UserCreation","SuperUserRouting","RegistrationRouting","ConfigRouting","PaymentRouting","component","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","AppModule","provide","useValue","siteKey","providers","bootstrap","entryComponents","AuthComponent","http","router","auth","fb","isShow","anyCaptcha","captcha","log","loginForm","subscribe","res","navigate","is_error","login","reset","onSubmit","resolved","AuthService","user","group","required","signup","post","value","pipe","resData","sessionStorage","setItem","JSON","stringify","token","user_id","isSuperUser","shortName","userName","registration_id","fullname","usercategory","usertype","currentUser","parse","getItem","ConfigureComponent","configure","date","notificationService","sanitizer","added","years","weeks","Revisions","loadedPosts","showFooter","choosenFile","validateButton","submitButton","show","imageURLList","displayedColumns","uploader","hasBaseDropZoneOver","weekConfig","srpcFormatFile","event","startDate","date_list","endDate","payDueDate","disburseDueDate","lcDueDate","interestDueDate","files","fileUploadEl","file","reader","FileReader","loaded","contents","result","onload","readAsText","showFile","responsedData","warn","validateFile","non_users_list","openModal","queue","map","fileItem","filename","getFiles","extension","name","formData","FormData","rawFile","append","key","imageDBId","clearQueue","myInputVariable","configurationData","response","success","listData","listdataReceive","sort","paginator","receivableSort","receivablePaginator","weekChange","issuedDate","fileChange","showChoosenFile","upload","closeModal","DateListService","Date","ModifyBillsComponent","notification","weeknos","status","payorreceive","revisions","allbills","viewbills","popupbill","Letter_refno","Revision_no","Entity","DevFinal","PayableorReceivable","remarks","valid","Bills","bill","patchValue","onUpdate","ViewBillsComponent","payorrecieve","CheckBoxType","EditBankdetailsComponent","check_box_type","targetType","checked","SelectedAccount","accountName","accountNumber","bankName","branchName","ifscCode","choosenAccount","checkedOne","acc","type","currentlyChecked","NONE","accName","accNum","ifsc","requests","onSelectDSM","onSelectRRAS","onSelectAGC","onSelectREACTIVE","onSelectSCED","onSelectCONGESTION","onEdit","PendingBankComponent","pendingBank","anypendingDetails","emptyList","onFetch","bank","selected","register_id","register_id_id","get","length","onApprove","closeModal1","onReject","EditContactComponent","editContact","pattern","formcontent","PendingContactComponent","pendingContact","editPopup","contact","FileUploadComponent","fileUploadService","fileToUpload","item","handleFileInput","FormSubmittedComponent","postService","HeaderComponent","posts","authService","route","isAuthenticated","isFinance","userSub","fileText","fileName","saveTextAsFile","data","blob","Blob","createEvent","a","createElement","window","navigator","msSaveOrOpenBlob","download","href","URL","createObjectURL","dataset","downloadurl","join","initEvent","dispatchEvent","signupForm","removeItem","clear","loggingoff","HomeNotificationComponent","formdata","approved","rejected","generated","pending","bank_pending","pendingUsers","financeApproved","financeRejected","pendingContacts","isUpdatedContact","isUpdatedBank","conApprovedDate","bankApprovedDate","applicationNumber","applicationNumber1","approvedDate","applicationNumber2","rejectedReason","gen_billYear","gen_billStartDate","gen_billEndDate","gen_billRevision","NewChatComponent","chat","users","feed","getUsers","scrollToBottom","myScroller","scrollTop","scrollHeight","receiver","sender","message","short_name","ngOnChanges","keyCode","onSendMessage","allmsg","selection","PaymentDetailsComponent","weekBills","dialog","generatedBills","paytype","splitvalues","showsplitcomp","paymentButton","paymentForm","paymenttype","paymentref","populateForm","selectedCheckbox","dialogRef","DialogExampleComponent","width","check","afterClosed","fetchConfigDetails","splitPayments","paymentDetails","payamount","actalamount","selectedRow","changeStatus","next","first","openDialog","d","month","getMonth","day","getDate","year","getFullYear","newdate","onSaveChanges","PaymentDetailsService","selectedViewPayment","payment","username","row","paymentdate","paymentamount","bottomrow","viewData","billdata","paydate","disburseWeek","PendingPaymentsComponent","vs","checked1","modalService1","previousPayments","viewpayments","viewPayments","viewres","index","populateViewForm","filteredData","approvePayment","onViewPayments","rejectPayment","WeeklyDisbursementsComponent","disburse","displayedColumns1","istableexists","Disbursements","listData1","sort1","paginator1","val","prevdueinpool","to_pool","reduce","accm","curr","Outstandings","from_pool","accum","alert","DialogContentExampleDialog","height","paiddetails","receivedetails","totaldisbursed","total_paidamount","total_tobereceived","paid_amount","entity_disburse","entity_amt","cumulative_amt","today","dd","String","padStart","mm","yyyy","ws","table_to_sheet","distable","wb","book_new","book_append_sheet","dialogRef1","ConfirmationDialog","CreateExcel","openConfirmationDialog","ProceedDisbursement","template","NotificationService","snackBar","config","duration","horizontalPosition","verticalPosition","msg","RegisterPopupComponent","popupUser","popupForm","RegistrationComponent","service","jwmodalpopup","regions","userCategory","accountName2","bankName2","branchName2","ifscCode2","accountName3","bankName3","branchName3","ifscCode3","accountName4","bankName4","branchName4","ifscCode4","accountName5","bankName5","branchName5","ifscCode5","accountName6","bankName6","branchName6","ifscCode6","fetchedResults","fetchedRejected","selectedFile","eventChecked","RRASselected","AGCselected","REACTIVEselected","SCEDselected","CONGESTIONselected","status1","status2","status3","status4","status5","status6","status7","status8","status9","readOnlyStatus","show2","show3","show4","show5","show6","show7","show8","show9","imageURLList2","imageURLList3","imageURLList4","imageURLList5","imageURLList6","imageURLList7","imageURLList8","imageURLList9","errorSub","errorMessage","fetchPosts","fd","postData","onSendPosts","responseData","image","onFetchPosts","dsm","err","reactive","imageDBId2","congestion","imageDBId3","rras","imageDBId4","agc","imageDBId5","sced","imageDBId6","PAN","imageDBId7","TAN","imageDBId8","GSTIN","imageDBId9","banktype","myInputVariable2","myInputVariable3","myInputVariable4","myInputVariable5","myInputVariable6","myInputVariable7","myInputVariable8","myInputVariable9","FormDialog","autoFocus","maxHeight","unsubscribe","controls","showError","upload1","upload7","upload8","upload9","openFormDialog","PostsService","validator","reg_id","randomNumber","Math","floor","random","regid","headers","postsArray","hasOwnProperty","errorRes","viewContent","Rowid","adminremarks","rowId","remarks_column","fileContents","fileData","configuredData","jsonData","configuredData1","non_users","ChatServiceService","FileUploadService","MaterialModule","PopupDataService","entityDetails","contactDetails","bankDetails","entityName","contactName","taxDetails","taxName","validityName","validityDetails","ConfirmedValidator","controlName","matchingControlName","controlName2","matchingControlName2","controlName3","matchingControlName3","formGroup","control","matchingControl","control2","matchingControl2","control3","matchingControl3","errors","confirmedValidator","setErrors","ConfirmedValidator1","AllUsersComponent","allUsersList","ref","SuperUserComponent","crudData","allowHeader","isreadOnly","approvaldocs","searchKey","applyFilter","trim","toLowerCase","rowid","approveForm","deleteUser","url","link","setAttribute","click","MoBankdetailsComponent","fb1","userservice","bankdetails","addBankDetails","bankcheque","onAddDetails","UsercreationComponent","newuser","userPrivileges","userCreation","createUser","UsercreationService","UserdetailsComponent","usernamelist","matselected","changePassword","usernames","errormessage","selecteduser","environment","production","bootstrapModule","destroy"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { BigModalService } from './bigmodal.service';\r\n\r\n@Component({ \r\n    selector: 'jp-modal', \r\n    templateUrl: 'bigmodal.component.html', \r\n    styleUrls: ['bigmodal.component.less'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class BigModalComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private modalService: BigModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', el => {\r\n            if (el.target.className === 'jp-modal') {\r\n                this.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('jp-modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('jp-modal-open');\r\n    }\r\n}","<div class=\"jp-modal\">\r\n    <div class=\"jp-modal-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"jp-modal-background\"></div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BigModalComponent } from './bigmodal.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [BigModalComponent],\r\n    exports: [BigModalComponent]\r\n})\r\nexport class BigModalModule { }","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BigModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.close();\r\n    }\r\n}","export * from './bigmodal.module';\r\nexport * from './bigmodal.service';","export * from './modal.module';\r\nexport * from './modal.service';","import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { ModalService } from './modal.service';\r\n\r\n@Component({ \r\n    selector: 'jw-modal', \r\n    templateUrl: 'modal.component.html', \r\n    styleUrls: ['modal.component.less'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', el => {\r\n            if (el.target.className === 'jw-modal') {\r\n                this.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('jw-modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('jw-modal-open');\r\n    }\r\n}","<div class=\"jw-modal\">\r\n    <div class=\"jw-modal-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"jw-modal-background\"></div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ModalComponent } from './modal.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ModalComponent],\r\n    exports: [ModalComponent]\r\n})\r\nexport class ModalModule { }","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.close();\r\n    }\r\n}","import { NgModule, Component} from '@angular/core';\nimport { Routes, RouterModule, ActivatedRoute } from '@angular/router';\nimport { HeaderComponent } from './header/header.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { FormSubmittedComponent } from './form-submitted/form-submitted.component';\nimport { SuperUserComponent } from './super-user/super-user.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { ConfigureComponent } from './configure/configure.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { HomeNotificationComponent } from './header/home-notification/home-notification.component';\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\nimport { PendingPaymentsComponent } from './payment-details/pending-payments/pending-payments.component';\nimport { UsercreationComponent } from './usercreation/usercreation.component';\n\nimport { MoBankdetailsComponent } from './usercreation/mo-bankdetails/mo-bankdetails.component';\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\nimport { componentFactoryName } from '@angular/compiler';\nimport { PendingContactComponent } from './edit-contact/pending-contact/pending-contact.component';\nimport { AllUsersComponent } from './super-user/all-users/all-users.component';\nimport { EditBankdetailsComponent } from './edit-bankdetails/edit-bankdetails.component';\nimport { PendingBankComponent } from './edit-bankdetails/pending-bank/pending-bank.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { ViewBillsComponent } from './configure/view-bills/view-bills.component';\nimport { ModifyBillsComponent } from './configure/modify-bills/modify-bills.component';\nimport { UserdetailsComponent } from './usercreation/userdetails/userdetails.component';\n\n\nconst routes: Routes = [\n \n  {\n    path: \"\",\n    loadChildren: () =>\n      import(\"./auth/auth-routing.module\").then(m => m.AuthRouting)\n  },\n  {\n    path: \"home\",\n    loadChildren: () =>\n      import(\"./header/header-routing.module\").then(m => m.HeaderRouting)\n  },\n  {\n    path: \"new-chat\",\n    loadChildren: () =>\n      import(\"./new-chat/new-chat-routing.module\").then(m => m.NewChatRouting)\n  },\n  {\n    path: \"user\",\n    loadChildren: () =>\n      import(\"./usercreation/usercreation-routing.module\").then(m => m.UserCreation)\n  },\n\n  {\n    path: \"admin\",\n    loadChildren: () =>\n      import(\"./super-user/supuser-routing.module\").then(m => m.SuperUserRouting)\n  },\n  {\n    path: \"registration\",\n    loadChildren: () =>\n      import(\"./registration/registration-routing.module\").then(m => m.RegistrationRouting)\n  },\n  {\n    path: \"config\",\n    loadChildren: () =>\n      import(\"./configure/config-routing.module\").then(m => m.ConfigRouting)\n  },\n  {\n    path: \"payment\",\n    loadChildren: () =>\n      import(\"./payment-details/payment-routing.module\").then(m => m.PaymentRouting)\n  },\n\n  {path:'fileUpload',component: FileUploadComponent},\n  {path:'**',redirectTo:'home',pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n  constructor(){}\n\n  \n }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  \n  ngOnInit() {}\n  \n\n\n}\n","<div class=\"row\" >\n    <div class=\"col\">\n        \n       <router-outlet></router-outlet>\n    </div>    \n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { RegistrationComponent, FormDialog, } from './registration/registration.component';\nimport {MaterialModule} from './shared/material.module';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { FormSubmittedComponent } from './form-submitted/form-submitted.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SuperUserComponent } from './super-user/super-user.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PostsService } from './registration/registration.service';\nimport { RegisterPopupComponent } from './registration/register-popup/register-popup.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { ConfigureComponent } from './configure/configure.component';\n\nimport { BigModalModule } from './_bigmodal/bigmodal.module';\nimport { AuthComponent } from './auth/auth.component';\nimport { HomeNotificationComponent } from './header/home-notification/home-notification.component';\nimport { PaymentDetailsComponent, DialogExampleComponent } from './payment-details/payment-details.component';\nimport {  RxReactiveFormsModule } from \"@rxweb/reactive-form-validators\";\nimport { PendingPaymentsComponent } from './payment-details/pending-payments/pending-payments.component'\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { UsercreationComponent } from './usercreation/usercreation.component';\nimport { MoBankdetailsComponent } from './usercreation/mo-bankdetails/mo-bankdetails.component';\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\nimport { PendingContactComponent } from './edit-contact/pending-contact/pending-contact.component';\nimport { AllUsersComponent } from './super-user/all-users/all-users.component';\nimport {RecaptchaModule, RecaptchaSettings, RECAPTCHA_SETTINGS} from 'ng-recaptcha';\nimport { EditBankdetailsComponent } from './edit-bankdetails/edit-bankdetails.component';\nimport { PendingBankComponent } from './edit-bankdetails/pending-bank/pending-bank.component';\nimport { ViewBillsComponent } from './configure/view-bills/view-bills.component';\nimport { ModifyBillsComponent } from './configure/modify-bills/modify-bills.component';\nimport { UserdetailsComponent } from './usercreation/userdetails/userdetails.component';\nimport { ModalModule } from './_modal';\nimport { WeeklyDisbursementsComponent, DialogContentExampleDialog, ConfirmationDialog } from './payment-details/weekly-disbursements/weekly-disbursements.component';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n\nimport { NewChatComponent } from './new-chat/new-chat.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RegistrationComponent,\n    FormSubmittedComponent,\n    SuperUserComponent,\n    RegisterPopupComponent,\n    FileUploadComponent,\n    ConfigureComponent,\n    AuthComponent,\n    HomeNotificationComponent,\n    PaymentDetailsComponent,\n    PendingPaymentsComponent,\n    UsercreationComponent,\n    UserdetailsComponent,\n    MoBankdetailsComponent,\n    EditContactComponent,\n    PendingContactComponent,\n    AllUsersComponent,\n    EditBankdetailsComponent,\n    PendingBankComponent,\n    ViewBillsComponent,\n    ModifyBillsComponent,\n    WeeklyDisbursementsComponent,\n    DialogExampleComponent,\n    DialogContentExampleDialog,\n    ConfirmationDialog,\n    FormDialog,\n    NewChatComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    RxReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    ModalModule,\n    BigModalModule,\n    FlexLayoutModule,\n    FileUploadModule,\n    RecaptchaModule\n  \n\n  ],\n \n  providers: [PostsService,\n    {\n      provide: RECAPTCHA_SETTINGS,\n      useValue: { siteKey: '6LdcPLIZAAAAABLp692-Hwpxmbu-2asPdvbj32xc' } as RecaptchaSettings,\n    }],\n  bootstrap: [AppComponent],\n  entryComponents:[RegisterPopupComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { NgForm, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  isShow=false;\n  anyCaptcha:boolean=false;\n  is_error:string;\n  constructor(private http:HttpClient,private router:Router,public auth:AuthService,\n              private fb:FormBuilder) { }\n\n  \n  ngOnInit(): void {\n  }\n  SignUp(){\n    this.isShow=!this.isShow;\n  }\n  resolved(captcha:any[]){\n    console.log(captcha);\n    this.anyCaptcha=!this.anyCaptcha;\n\n    // if(captcha){\n    //   this.http.post('https://www.google.com/recaptcha/api/siteverify',{ headers: {\n    //     'Accept': 'application/json,text/plain',\n    //     'Content-Type': 'application/jsonp;application/x-www-form-urlencoded;charset=utf-8;',\n    //     'Access-Control-Allow-Origin': 'http://localhost:4200'\n    //   },secret:\"6LdcPLIZAAAAAJ3kjrs6Vr4aoG2vXfqS0OdRzXwT\",response:captcha,remoteip:'localhost:4200'}).subscribe(res=>\n    //   {\n    //     console.log(res);\n    //   },err=>{\n    //     console.log(err);\n    //   })\n\n    // }\n  }\n  onSubmit(){\n  \n  this.auth.loginForm().subscribe(res=>{\n    \n            this.router.navigate(['home/notification']);\n          },error=>{\n              this.is_error=error.error['non_field_errors'][0];\n              this.auth.login.reset();\n              \n          });\n    \n  }\n\n}\n","<br>\n<br>\n\n<!-- Sample Form \n<div class=\"login-form\" *ngIf=\"!isShow\">\n    <form [formGroup]=\"auth.login\" (ngSubmit)=\"onSubmit()\">\n        <h4 *ngIf=\"is_error\"><strong>Enter correct username and passowrd</strong></h4>\n        <h2 class=\"text-center\">Log in</h2>       \n        <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"username\" placeholder=\"Username\">\n        </div>\n        <div class=\"form-group\">\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Password\">\n        </div>\n        <div class=\"form-group\">\n            <re-captcha (resolved)=\"resolved($event)\" data-sitekey=\"6LfrJLIZAAAAAKPkBoe9uBlD6ADwv8kpWNvHpQz7\"></re-captcha>\n        </div>\n        <div class=\"form-group\">\n            <button class=\"btn btn-primary btn-block\" [disabled]=\"!auth.login.valid || !anyCaptcha\" type=\"submit\" >Log in</button>\n        </div>\n        <div class=\"clearfix\">\n            <label class=\"pull-left checkbox-inline\"><input type=\"checkbox\"> Remember me</label>\n            <a href=\"#\" class=\"pull-right\">Forgot Password?</a>\n        </div>        \n    </form>\n    <img src=\"assets/img/POSOCO.jpg\" alt=\"Trulli\" width=\"70\" height=\"32\"><br>\n</div> -->\n\n<div class=\"container\">\n    \n    <form [formGroup]=\"auth.login\" (ngSubmit)=\"onSubmit()\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n                <mat-card-title>Sign in</mat-card-title>\n            </mat-card-header>\n            <br>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>username</mat-label>\n                        <input type=\"text\" matInput formControlName=\"username\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <mat-form-field appearance=\"outline\">\n                        <mat-label>Password</mat-label>\n                        <input type=\"password\"  matInput formControlName=\"password\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                    <div class=\"col-sm-4 adjust\">\n                        <div class=\"form-group\">\n                            <re-captcha (resolved)=\"resolved($event)\" data-sitekey=\"6LfrJLIZAAAAAKPkBoe9uBlD6ADwv8kpWNvHpQz7\"></re-captcha>\n                        </div>\n                    </div>\n            </div>\n            <h4 *ngIf=\"is_error\">Invalid credentials</h4>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" [disabled]=\"!auth.login.valid || !anyCaptcha\" type=\"submit\">Next</button>\n            </mat-card-actions>\n        </mat-card>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { catchError, mapTo, tap } from 'rxjs/operators';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { User } from './user.model';\r\nimport { StringDecoder } from 'string_decoder';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface AuthResponseData {\r\n  token: string;\r\n  user_id: string;\r\n  email: string;\r\n  isSuperUser: boolean;\r\n  shortName:string;\r\n  userName:string;\r\n  fullname:string;\r\n  usercategory:string;\r\n  usertype:string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  \r\n  public user=new Subject<User>();\r\n  constructor(private http: HttpClient,private fb:FormBuilder,private router:Router) {}\r\n  \r\n  login=this.fb.group({\r\n    'username':[null,Validators.required],\r\n    'password':[null,Validators.required]\r\n  })\r\n\r\n  signup=this.fb.group({\r\n    'username':[null,Validators.required],\r\n    'password':[null,Validators.required],\r\n    'entityName':[null,Validators.required]\r\n  })\r\n\r\n  loginForm():Observable<any>{\r\n    return this.http.post<AuthResponseData>('http://127.0.0.1:8000/api-token-login/',this.login.value).pipe(tap(resData => {\r\n      console.log(\"after logs in \",resData);\r\n      sessionStorage.setItem('currentUser', JSON.stringify({ token:resData.token, user_id: resData.user_id,\r\n                                                            isSuperUser:resData.isSuperUser,\r\n                                                            shortName:resData.shortName,\r\n                                                            userName:resData.userName ,\r\n                                                            registration_id:resData.registration_id,\r\n                                                            fullname:resData.fullname,\r\n                                                            usercategory:resData.usercategory,\r\n                                                            usertype:resData.usertype}));\r\n      \r\n    }));\r\n\r\n  }\r\n\r\n  checkUser(){\r\n    var currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\r\n    if(currentUser){\r\n      // this.http.post('http://127.0.0.1:8000/auth-token-verify/',currentUser['token']).subscribe(res=>{\r\n      //   console.log(\"authenticating user\",res);\r\n      //   return true;\r\n      // })\r\n      return true;\r\n    }\r\n    else{\r\n      return this.router.navigate(['auth']);\r\n    }\r\n  }\r\n\r\n}","import { Component, OnInit, ViewChild, ElementRef, OnChanges } from '@angular/core';\nimport { PostsService } from '../registration/registration.service';\nimport { Post, DeviationCharges } from '../shared/form-data.model';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport {MatSortModule} from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataSource } from '@angular/cdk/collections';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { DateListService } from './date-list.service';\nimport { NotificationService } from '../registration/notification.service';\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\nimport { ModalService } from '../_modal';\nimport { map, catchError } from 'rxjs/operators';\nimport { Subject, throwError } from 'rxjs';\nimport { FileUploader, FileLikeObject } from 'ng2-file-upload';\nimport { HttpClient } from '@angular/common/http';\nimport { error } from 'protractor';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport * as jexcel from \"jexcel-pro\";\n@Component({\n  selector: 'app-configure',\n  templateUrl: './configure.component.html',\n  styleUrls: ['./configure.component.css']\n})\n\n\nexport class ConfigureComponent implements OnInit {\n\n  @ViewChild('fileUpload') fileUploadEl: ElementRef;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('ReceivableTableSort') receivableSort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild('ReceivableTablePaginator') receivablePaginator: MatPaginator;\n  @ViewChild('myInput') myInputVariable: ElementRef;   \n  @ViewChild(\"spreadsheet\") spreadsheet: ElementRef;\n  file:File;\n  contents:any[];\n\n\n  added=true;\n  years=['2016-17','2017-18','2018-19','2019-20','2020-21']\n  weeks=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\n  Revisions=['Revision 0','Revision 1','Revision 2','Revision 3']\n  // After Fetching Data From Databse\n  loadedPosts:DeviationCharges[]=[];\n \n  listData: MatTableDataSource<DeviationCharges>;\n  listdataReceive: MatTableDataSource<DeviationCharges>;\n  startDate;\n  endDate;\n  payDueDate;\n  disburseDueDate;\n  lcDueDate;\n  interestDueDate;\n  responsedData:any;\n  non_users_list:any;\n  dueDate;\n  error=new Subject<string>();\n  showFooter='off';\n  choosenFile:boolean=true;\n  validateButton:boolean=true;\n  submitButton:boolean=true;\n  imageDBId:string;\n  show:boolean=false;\n  imageURLList:Array<string>[]=[];\n  displayedColumns: string[] = ['Entity','DevAddtional','DevAddtionalSignChange','DevPostfacto',\n            'DevNormal','DevFinal','PayableOrReceviable'];\n            \n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  public uploader: FileUploader = new FileUploader({});\n  public hasBaseDropZoneOver: boolean = false;\n   \n  // displayedColumns: string[] = [\"Entity\"];\n  constructor(private configure:PostsService,private fb:FormBuilder,\n              private date:DateListService,\n              private notificationService:NotificationService,\n              private modalService: ModalService,\n              private http:HttpClient,\n              private sanitizer:DomSanitizer) { }\n\n    weekConfig=this.fb.group({\n    'year':[null,[Validators.required]],\n    'weekNo':[null,[Validators.required]],\n    'weekStartDate':[null,[Validators.required]],\n    'weekEndDate':[null,[Validators.required]],\n    'revisionNo':[null,[Validators.required]],\n    'srpcRefNo':[null,[Validators.required]],\n    'srpcLetterDate':[null,[Validators.required]],\n    'payDueDate':[null,[Validators.required]],\n    'disburseDueDate':[null,[Validators.required]],\n    'lcDueDate':[null,[Validators.required]],\n    'levyDueDate':[null,[Validators.required]]\n    // 'srpcFile':[null,[ \n    //       RxwebValidators.file({minFiles:1,maxFiles:1 }),\n    //       RxwebValidators.extension({extensions:[\"json\"]}),\n    //       ] ]\n  });\n  srpcFormatFile=this.fb.group({\n    'statename':[null],\n    'devfinal':[null]\n  })\n  ngOnInit(){\n  \n  }\n  weekChange(event){\n   \n    this.startDate=this.date.date_list[0][0]\n    this.endDate=this.date.date_list[0][1]\n    \n  }\n  issuedDate(event){\n    console.log(\"you are in issued date\");\n    this.payDueDate=this.date.date_list[0][0]\n    this.disburseDueDate=this.date.date_list[0][1]\n    this.lcDueDate=this.date.date_list[0][0]\n    this.interestDueDate=this.date.date_list[0][1]\n    \n  }\n  public fileChange(event): void \n  {\n    const files: FileList = this.fileUploadEl.nativeElement.files;\n    this.file = files[0];\n    const reader = new FileReader();\n    \n    const loaded = (el) =>\n    {\n    const contents = el.target.result;\n    this.contents = contents;\n    \n    }\n    reader.onload = loaded;\n    reader.readAsText(this.file, 'UTF-8');\n  }\n\n\n  showChoosenFile()\n  {\n    \n    this.configure.showFile(this.contents).subscribe(res=>{\n      this.choosenFile=false;\n      this.responsedData=res;\n    })\n  }\n  validateFile()\n  {\n    if(!this.contents){\n      this.notificationService.warn(\"Please choose the file\");\n    }\n    else{\n      \n      this.configure.validateFile(this.contents).subscribe(res=>{\n        console.log(\"Response from validate file\",res);\n        this.non_users_list=res;\n        this.openModal('validate');\n        // this.choosenFile=false;\n        // this.responsedData=res;  \n        this.submitButton=false;\n      })\n      \n    }\n      \n  }\n  fileOverBase(event):  void {\n    this.hasBaseDropZoneOver  =  event;\n  }\n  getFiles(): FileLikeObject[] {\n    return this.uploader.queue.map((fileItem) => {\n      return fileItem.file;\n    });\n  }\n  upload(filename:string) {   \n\n    let files = this.getFiles();\n    \n  if(this.weekConfig.value['year'] && this.weekConfig.value['weekNo'] && files[0]){\n    let extension=files[0].name\n    let formData = new FormData();\n    console.log(files[0].rawFile)\n    formData.append('file' , files[0].rawFile, this.weekConfig.value['year']+'@'+this.weekConfig.value['weekNo']+'$'+extension);     \n    this.http.post('http://127.0.0.1:8000/file/srpcFile',formData).subscribe(res=>{\n        console.log(\"url res\",res);\n        this.imageURLList=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList.push(res[key][0]);\n            this.imageDBId=res[key][1];\n\n          }\n        this.show=true;\n    },\n    error=>{\n      console.log(error);\n    })\n    }\n  else{\n    this.notificationService.warn(\"Please Choose Financial Year,Week No and  File\");\n  } \n  }\n  \n  Delete()\n  {\n    this.http.post('http://127.0.0.1:8000/file/deleteFile',this.imageDBId).subscribe(res=>{\n          this.imageURLList=[];\n          this.uploader.clearQueue();\n          this.myInputVariable.nativeElement.value=\"\";\n          this.show=false;\n    })\n  }\n  onSubmit(){\n\n    if(!this.contents){\n      this.notificationService.warn(\"Please choose the file\");\n    }\n    else{\n      this.configure.configurationData(this.weekConfig.value,this.contents).subscribe(response=>{\n\n          this.imageURLList=[];\n          this.uploader.clearQueue();\n          this.myInputVariable.nativeElement.value=\"\";\n          this.show=false;\n          this.notificationService.success('! Submitted successfully');\n          this.listData = new MatTableDataSource(response[0]['payable']);\n          this.listdataReceive = new MatTableDataSource(response[1]['receivable']);\n     \n          console.log(\"list Data\",this.listData);\n          this.listData.sort=this.sort;\n          this.listData.paginator=this.paginator;\n          this.listdataReceive.sort=this.receivableSort;\n          this.listdataReceive.paginator=this.receivablePaginator;\n          this.showFooter='on';\n          this.weekConfig.reset();\n            \n    });\n    }\n    \n  }\n    openModal(id: string) {\n      this.modalService.open(id);\n    }\n  \n    \n    closeModal(id: string) {\n      this.modalService.close(id);\n    }\n\n\n}\n\n\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-sm-6 alert alert-success\" style=\"margin-left:170px;\">\n        <p>Submit Bills</p>\n    </div>\n</div>\n<div  class=\"container scroll\" style=\"border:solid 1px lightblue;border-radius:5px;overflow:auto;\"><br>\n<form [formGroup]=\"weekConfig\" (ngSubmit)=\"onSubmit()\">  \n    <h3 style=\"font-weight:bold;margin-right:15px\"> Configuration Details </h3>\n       <div class=\"row\">\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:237px;\">\n                <mat-label>Financial Year </mat-label>\n                <mat-select [(value)]=\"years[0]\" formControlName=\"year\">\n                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">\n                    {{year}}\n                    </mat-option>\n                </mat-select>\n                </mat-form-field>\n          </div>\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:237px;\">\n            <mat-label>Week No</mat-label>\n            <mat-select  (selectionChange)=\"weekChange($event)\" formControlName=\"weekNo\">\n                <mat-option *ngFor=\"let week of weeks\" [value]=\"week\">\n                    {{week}}\n                </mat-option>\n                </mat-select>\n            </mat-form-field>\n          </div>\n      </div>\n      <!-- Second Row-->\n       <div class=\"row\">\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Week Start Date</mat-label>\n                <input matInput [matDatepicker]=\"picker\"  formControlName=\"weekStartDate\" [(ngModel)]=\"startDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n          </div>\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Week End Date</mat-label>\n                <input matInput [matDatepicker]=\"picker1\" formControlName=\"weekEndDate\" [(ngModel)]=\"endDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                <mat-datepicker #picker1></mat-datepicker>\n            </mat-form-field>\n          </div>\n      </div>\n     <!-- Third Row-->\n       <div class=\"row\">\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:237px;\">\n              <mat-label>Revision No.</mat-label>\n              <mat-select formControlName=\"revisionNo\">\n                <mat-option *ngFor=\"let rev of Revisions\" [value]=\"rev\">\n                    {{rev}}\n                </mat-option>\n                </mat-select>\n            </mat-form-field>\n          </div>\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:300px;\">\n            <mat-label>SRPC Letter Ref No.</mat-label>\n            <input matInput  formControlName=\"srpcRefNo\">\n            </mat-form-field>\n          </div>\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>SRPC Letter Date</mat-label>\n                <input matInput [matDatepicker]=\"picker2\" (ngModelChange)=\"issuedDate($event)\" formControlName=\"srpcLetterDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                <mat-datepicker #picker2></mat-datepicker>\n            </mat-form-field>\n          </div>\n      </div>\n      <div id=\"spreadsheet\"></div>\n      <!-- Fourth Row-->\n      <div class=\"row\">\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Payment Due Date</mat-label>\n                <input matInput [matDatepicker]=\"picker3\" [(ngModel)]=\"payDueDate\"  formControlName=\"payDueDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n                <mat-datepicker #picker3></mat-datepicker>\n            </mat-form-field>\n          </div>\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\">\n            <mat-label>Disbursement Due Date</mat-label>\n                <input matInput [matDatepicker]=\"picker4\" [(ngModel)]=\"disburseDueDate\" formControlName=\"disburseDueDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\n                <mat-datepicker #picker4></mat-datepicker>\n            </mat-form-field>\n          </div>\n      </div>\n      <!-- Last Row-->\n      <div class=\"row\">\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>LC Due Date</mat-label>\n                <input matInput [matDatepicker]=\"picker5\" [(ngModel)]=\"lcDueDate\" formControlName=\"lcDueDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\n                <mat-datepicker #picker5></mat-datepicker>\n            </mat-form-field>\n          </div>\n          <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\">\n            <mat-label>Interest Levy Due Date</mat-label>\n                <input matInput [matDatepicker]=\"picker6\" [(ngModel)]=\"interestDueDate\" formControlName=\"levyDueDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\n                <mat-datepicker #picker6></mat-datepicker>\n            </mat-form-field>\n          </div>\n          <div class=\"col-sm-4 \">\n            <input  #fileUpload type=\"file\"  (change)=\"fileChange($event)\">\n            <button mat-button color=\"warn\" type=\"button\" (click)=\"showChoosenFile();openModal('enter-details')\">View Choosen File</button>\n          </div>    \n      </div>\n    <hr>\n    <!-- File Upload --->\n    <h4><b>Please select SRPC Weekly File </b></h4>\n    <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-4\">\n          <input type=\"file\" #myInput placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\" accept=\"application/pdf\" />\n        </div>\n        <div class=\"col-sm-4\">\n          <button (click)=\"upload('srpc')\" type=\"button\">Upload file<span class=\"givered\">*</span></button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show\">\n          <span class=\"material-icons\" (click)=\"Delete()\">delete</span>\n        </div>\n      </div><br>\n      <p><b> Note:</b>Only .pdf is allowed</p>\n    <!--End of File Upload --->\n    <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"validateFile();\" >Validate</button>|\n    <button mat-raised-button color=\"primary\" [disabled]=\"!weekConfig.valid || submitButton\">Submit</button>\n</form>\n<!-- Validate Json -->\n  <jw-modal id=\"validate\" style=\"width:200px;\">\n      <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('validate');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n        <br><hr>\n        <div style=\"height:250px;\">\n              <h3><strong> Below users are not registered </strong></h3>\n              <hr>\n              <ol *ngFor=\"let users of non_users_list;\">\n                <li  *ngFor=\"let user of users;let i=index;\" style=\"color:red;\">\n                    {{user}}\n                    \n                </li>\n              </ol>\n            <hr>\n            <h4> Note: If not creates the user then it takes <strong>\"NULL\"</strong> as default registration id for that user.\n            </h4>\n        </div>\n  </jw-modal>\n<!-- Pop Up Json -->\n  <jw-modal id=\"enter-details\">\n      <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('enter-details');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n        <br><hr>\n        <div style=\"height:350px;\">\n             \n                <table class=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">State Name</th>\n                      <th scope=\"col\">Deviation Final</th>\n                    </tr>\n                  </thead>\n                  <tbody *ngFor=\"let res of responsedData\">\n                    <tr>\n                      <td scope=\"row\">{{res['StateName']}}</td>\n                      <td>{{res['DeviationFinal']|currency:\"&#8377;\"}}</td>\n                    </tr>\n                  </tbody>\n                </table>\n        </div>\n  </jw-modal>\n\n<br><hr>\n<!-- Table Data of Deviation Charges  -->\n<div class=\"mat-elevation-z8\" [ngClass]=\"{'hide':showFooter=='off'}\">\n  <mat-table  [dataSource]=\"listData\" matSort>\n    <!-- First Column Entity Name -->\n    <ng-container matColumnDef=\"Entity\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Entity Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.Entity}}</mat-cell>\n    </ng-container>\n     <!-- Second Column DevAddtional -->\n    <ng-container matColumnDef=\"DevAddtional\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevAddtl</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"><span>{{element.DevAdditional|currency:\"&#8377;\"}}</span></mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"DevAddtionalSignChange\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevAddtlSign</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevAdditionalSignChange |currency:\"&#8377;\"}}</mat-cell>\n    </ng-container> \n\n    <ng-container matColumnDef=\"DevPostfacto\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevPostfacto</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevPostfacto|currency:\"&#8377;\"}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"DevNormal\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevNormal</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevNormal|currency:\"&#8377;\"}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"DevFinal\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevFinal</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevFinal|currency:\"&#8377;\"}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"PayableOrReceviable\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Payable</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.PayableorReceivable}}</mat-cell>\n    </ng-container>\n    \n    <!-- Initial Loading -->\n    <ng-container matColumnDef=\"loading\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        Loading data...\n      </mat-footer-cell>\n    </ng-container>\n    <!-- No data in Firebase-->\n    <ng-container matColumnDef=\"nodata\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        No data...\n      </mat-footer-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\" [ngClass]=\"{headerColor:'true'}\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    <mat-footer-row *matFooterRowDef=\"['loading']\"  [ngClass]=\"{'hide':listData!=null}\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"['nodata']\" [ngClass]=\"{'hide':!(listData!=null && listData.data.length == 0)}\"></mat-footer-row>\n    \n    </mat-table>\n   <mat-paginator [ngClass]=\"{'hide':showFooter == 'off'}\"  [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\n\n</div>\n <!-- Receviable Table -->\n<div class=\"mat-elevation-z8\" [ngClass]=\"{'hide':showFooter=='off'}\">\n  <mat-table  [dataSource]=\"listdataReceive\" #ReceivableTableSort=\"matSort\" matSort>\n    <!-- First Column Entity Name -->\n    <ng-container matColumnDef=\"Entity\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Entity Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.Entity | uppercase}}</mat-cell>\n    </ng-container>\n     <!-- Second Column DevAddtional -->\n    <ng-container matColumnDef=\"DevAddtional\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevAddtl</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevAdditional|currency:\"&#8377;\"}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"DevAddtionalSignChange\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevAddtlSign</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevAdditionalSignChange|currency:\"&#8377;\"}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"DevPostfacto\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevPostfacto</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevPostfacto|currency:\"&#8377;\"}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"DevNormal\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevNormal</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevNormal|currency:\"&#8377;\"}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"DevFinal\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>DevFinal</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.DevFinal|currency:\"&#8377;\"}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"PayableOrReceviable\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Receviable</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.PayableorReceivable}}</mat-cell>\n    </ng-container>\n    \n    <!-- Initial Loading -->\n    <ng-container matColumnDef=\"loading\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        Loading data...\n      </mat-footer-cell>\n    </ng-container>\n    <!-- No data in Firebase-->\n    <ng-container matColumnDef=\"nodata\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        No data...\n      </mat-footer-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\" [ngClass]=\"{headerColor:'true'}\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    <mat-footer-row *matFooterRowDef=\"['loading']\"  [ngClass]=\"{'hide':listdataReceive!=null}\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"['nodata']\" [ngClass]=\"{'hide':!(listdataReceive!=null && listdataReceive.data.length == 0)}\"></mat-footer-row>\n    \n    </mat-table>\n     <mat-paginator #ReceivableTablePaginator [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\n</div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateListService {\n\n  constructor(private http:HttpClient) { }\n\n  date_list=[\n    [new Date(2020,2,30),\n    new Date(2020,3,5)]\n    // new Date(2020,4,6),\n    // new Date(2020,4,12),\n    // new Date(2020,4,13),\n    // new Date(2020,4,19)\n]\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { DateListService } from '../date-list.service';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from 'src/app/registration/notification.service';\nimport { ModalService } from 'src/app/_modal';\n\n@Component({\n  selector: 'app-modify-bills',\n  templateUrl: './modify-bills.component.html',\n  styleUrls: ['./modify-bills.component.css']\n})\nexport class ModifyBillsComponent implements OnInit {\n\n  years=['2016-17','2017-18','2018-19','2019-20','2020-21']\n  weeknos=[1,2,3,4,5,6,7,9,12]\n  status=[\"Notified\",\"Partial\",\"Completely Paid\"]\n  payorreceive=[\"Payable\",\"Receivable\"]\n  revisions=[\"Revision 0\",\"Revision 1\",\"Revision 2\",\"Revision 3\"]\n  startDate:Date;\n  endDate:Date;\n  allbills=[];\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  constructor(private fb:FormBuilder,private date:DateListService,private http:HttpClient,private notification:NotificationService,private modalService:ModalService) { }\n\n  ngOnInit(): void {\n  }\n\n  viewbills=this.fb.group({\n    'year':[null,Validators.required],\n    'weekno':[null,Validators.required],\n    'weekStartDate':[null,Validators.required],\n    'weekEndDate':[null,Validators.required],\n    'status':[\"Notified\",Validators.required],\n    'payorreceive':[\"Payable\",Validators.required]\n  })\n  popupbill:FormGroup=new FormGroup({\n    Letter_refno:new FormControl(null),\n    Revision_no:new FormControl(null),\n    Entity:new FormControl(null),\n    DevFinal:new FormControl(null),\n    PayableorReceivable:new FormControl(null),\n    id:new FormControl(null),\n    remarks:new FormControl(null)\n  })\n  weekChange(event)\n  {\n    this.startDate=this.date.date_list[0][0];\n    this.endDate=this.date.date_list[0][1];\n  }\n  onSubmit()\n  { \n    this.allbills=[];\n    if(this.viewbills.valid)\n    {\n      this.http.post('http://127.0.0.1:8000/file/view-bills',{Bills:this.viewbills.value,id:this.currentUser['registration_id']}).subscribe(res=>{\n        for(const key in res)\n        {\n          \n          this.allbills.push(res[key]);\n        }\n    });\n    }\n    else\n    {\n      this.notification.warn(\"Please Select Year and Week No\");\n    }\n    \n  }\n\n  \n\n  onUpdate()\n  {\n    console.log(\"upated values\",this.popupbill.value);\n    if(this.popupbill.value['remarks'])\n    {\n      this.http.post('http://127.0.0.1:8000/file/update-bills',this.popupbill.value).subscribe(res=>{\n        this.onSubmit();\n        this.closeModal('edit-modal');\n        this.notification.success(\"Updated Successfully\");\n\n      });\n    }\n    else{\n      this.notification.warn(\"Please enter Remarks\")\n    }\n  }\n  openModal(id,bill)\n  { \n    this.popupbill.patchValue(bill);\n    this.modalService.open(id);\n  }\n\n  closeModal(id)\n  {\n    this.modalService.close(id);\n  }\n}\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-sm-6 alert alert-success\" style=\"margin-left:90px;\">\n        <p> Edit Bills </p>\n    </div>\n</div>\n\n<!-- Flex Layout -->\n<div class=\"container-fluid\" >\n    <div class=\"row\">\n        <div class=\"col-sm-3 border-setup-first\">\n            <div class=\"row \">\n                <div class=\"col\">\n                    <div class=\"alert alert-info\" role=\"alert\">\n                        <strong> Please Select</strong>\n                    </div>\n                </div>\n            </div>\n            <form [formGroup]=\"viewbills\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <mat-form-field appearance=\"outline\" >\n                            <mat-label>Year</mat-label>\n                            <mat-select formControlName=\"year\">\n                            <mat-option \n                            *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-sm-2\"></div>\n                    <div class=\"col-sm-6\">\n                        <mat-form-field appearance=\"outline\" >\n                            <mat-label>WeekNo</mat-label>\n                            <mat-select formControlName=\"weekno\" (selectionChange)=\"weekChange($event)\" >\n                            <mat-option \n                            *ngFor=\"let weekno of weeknos\" [value]=\"weekno\">{{weekno}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>  \n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Start Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker\"  formControlName=\"weekStartDate\" [(ngModel)]=\"startDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-sm-2\"></div>\n                    <div class=\"col-sm-6\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>End Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker1\"  formControlName=\"weekEndDate\" [(ngModel)]=\"endDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker1></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Status</mat-label>\n                            <mat-select formControlName=\"status\" >\n                            <mat-option \n                            *ngFor=\"let stat of status\" [value]=\"stat\">{{stat}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-sm-2\"></div>\n                    <div class=\"col-sm-6\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Pay or Receive</mat-label>\n                            <mat-select formControlName=\"payorreceive\" >\n                            <mat-option \n                            *ngFor=\"let pr of payorreceive\" [value]=\"pr\">{{pr}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <button mat-raised-button color=\"primary\" type=\"submit\">show</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n       \n        <div class=\"col-sm-8 border-setup-second\">\n            <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                <th scope=\"col\">Sl.No.</th>\n                <th scope=\"col\">Entity Name</th>\n                <th scope=\"col\">SRPC Letter Ref No</th>\n                <th scope=\"col\">Revision No</th>\n                <th scope=\"col\">Deviation Final</th>\n                <th scope=\"col\">Pay or Receive</th>\n                <th scope=\"col\">Actions</th>\n                </tr>\n            </thead>\n            <tbody *ngFor=\"let bill of allbills;let z=index;\">\n                <tr>\n                <td>{{z+1}}</td>\n                <td>{{bill.Entity}}</td>\n                <td>{{bill.Letter_refno}}</td>\n                <td>{{bill.Revision_no}}</td>\n                <td>{{bill.DevFinal|currency:\"&#8377;\"}}</td>\n                <td>{{bill.PayableorReceivable}}</td>\n                <td><span class=\"material-icons\" (click)=\"openModal('edit-modal',bill)\">edit</span></td>\n                </tr>\n            </tbody>\n        </table>\n        </div>\n\n    </div>\n</div>\n\n<jw-modal id=\"edit-modal\">\n    <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('edit-modal');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    <br><br>\n    <div style=\"height:260px;\">\n        <form [formGroup]=\"popupbill\" (ngSubmit)=\"onUpdate()\">\n            <div class=\"row\">\n                <div class=\"col-sm-2\">\n                    <label>Entity:</label>\n                </div>\n                <div class=\"col-sm-4\">\n                    <mat-form-field appearance=\"outline\" style=\"width:220px;\">\n                        <mat-label> Entity Name </mat-label>\n                        <input matInput type=\"text\"  formControlName=\"Entity\" value=\"{{popupbill.value['Entity']}}\">\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-sm-2\">\n                    <label>Letter_refno:</label>\n                </div>\n                <div class=\"col-sm-4\">\n                    <mat-form-field appearance=\"outline\" style=\"width:220px;\">\n                        <mat-label> Letter RefNo</mat-label>\n                        <input matInput type=\"text\" formControlName=\"Letter_refno\" value=\"{{popupbill.value['Letter_refno']}}\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-2\">\n                    <label>Revision No</label>\n                </div>\n                <div class=\"col-sm-4\">\n                    <select value=\"{{popupbill.value['Revision_no']}}\" formControlName=\"Revision_no\">\n                        <option *ngFor=\"let rev of revisions\" [value]=\"rev\">{{rev}}</option>\n                    </select>\n                    <!--\n                    <mat-form-field appearance=\"outline\" style=\"width:220px;\">\n                        <mat-select value=\"{{popupbill.value['Revision_no']}}\" formControlName=\"Revision_no\">\n                            <mat-option *ngFor=\"let rev of revisions\" [value]=\"rev\">{{rev}}</mat-option>\n                        </mat-select> \n                    </mat-form-field> -->\n                </div>\n                <div class=\"col-sm-2\">\n                    <label>DevFinal(*Rs):</label>\n                </div>\n                <div class=\"col-sm-4\">\n                    <mat-form-field appearance=\"outline\" style=\"width:220px;\">\n                        <input matInput type=\"text\" formControlName=\"DevFinal\" value=\"{{popupbill.value['DevFinal']}}\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-2\">\n                    <label>Pay or Receive</label>\n                </div>\n                <div class=\"col-sm-4\">\n                    <select value=\"{{popupbill.value['PayableorReceivable']}}\" formControlName=\"PayableorReceivable\">\n                        <option *ngFor=\"let pr of payorreceive\" [value]=\"pr\">{{pr}}</option>\n                    </select>\n                    <!--\n                    <mat-form-field appearance=\"outline\" style=\"width:220px;\">\n                        <mat-label>PayableorReceivable</mat-label>\n                        <mat-select value=\"{{popupbill.value['PayableorReceivable']}}\" formControlName=\"PayableorReceivable\">\n                            <mat-option *ngFor=\"let pr of payorreceive\" [value]=\"pr\">{{pr}}</mat-option>\n                        </mat-select> \n                    </mat-form-field> -->\n                </div>\n                <div class=\"col-sm-2\">\n                    <label>Any Remarks:<span>*</span> </label>\n                </div>\n                <div class=\"col-sm-4\">\n                    <mat-form-field appearance=\"outline\" style=\"width:220px;\">\n                        <input matInput type=\"text\" formControlName=\"remarks\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <button mat-raised-button class=\"pull-right\" color=\"primary\" type=\"submit\">Update</button>\n        </form>\n    </div>\n</jw-modal>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { DateListService } from '../date-list.service';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from 'src/app/registration/notification.service';\n\n@Component({\n  selector: 'app-view-bills',\n  templateUrl: './view-bills.component.html',\n  styleUrls: ['./view-bills.component.css']\n})\nexport class ViewBillsComponent implements OnInit {\n\n  years=['2016-17','2017-18','2018-19','2019-20','2020-21']\n  weeknos=[1,2,3,4,5,6,7,8,9,10,11,12,13,14]\n  status=[\"Notified\",\"Partial\",\"Completely Paid\"]\n  payorrecieve=[\"Payable\",\"Receivable\"]\n  startDate:Date;\n  endDate:Date;\n  allbills=[];\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  constructor(private fb:FormBuilder,private date:DateListService,private http:HttpClient,private notification:NotificationService) { }\n\n  ngOnInit(): void {\n  }\n\n  viewbills=this.fb.group({\n    'year':[null,Validators.required],\n    'weekno':[null,Validators.required],\n    'weekStartDate':[null,Validators.required],\n    'weekEndDate':[null,Validators.required],\n    'payorreceive':[null,Validators.required]\n  })\n\n  weekChange(event)\n  {\n    this.startDate=this.date.date_list[0][0];\n    this.endDate=this.date.date_list[0][1];\n  }\n  onSubmit()\n  { \n    this.allbills=[];\n    if(this.viewbills.valid)\n    {\n      this.http.post('http://127.0.0.1:8000/file/view-bills',{Bills:this.viewbills.value,id:this.currentUser['registration_id']}).subscribe(res=>{\n        for(const key in res)\n        {\n          console.log(res[key]);\n          this.allbills.push(res[key]);\n        }\n    });\n    }\n    else\n    {\n      this.notification.warn(\"Please Select Year and Week No\");\n    }\n    \n  }\n}\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-sm-6 alert alert-success\" style=\"margin-left:90px;\">\n        <p> Bills </p>\n    </div>\n</div>\n\n<!-- Flex Layout -->\n<div class=\"container-fluid\" >\n    <div class=\"row\">\n        <div class=\"col-sm-3 border-setup-first\">\n            <div class=\"row \">\n                <div class=\"col\">\n                    <div class=\"alert alert-info\" role=\"alert\">\n                        <strong> Please Select</strong>\n                    </div>\n                </div>\n            </div>\n            <form [formGroup]=\"viewbills\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <mat-form-field appearance=\"outline\" >\n                            <mat-label>Year</mat-label>\n                            <mat-select formControlName=\"year\">\n                            <mat-option \n                            *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-sm-2\"></div>\n                    <div class=\"col-sm-6\">\n                        <mat-form-field appearance=\"outline\" >\n                            <mat-label>WeekNo</mat-label>\n                            <mat-select formControlName=\"weekno\" (selectionChange)=\"weekChange($event)\" >\n                            <mat-option \n                            *ngFor=\"let weekno of weeknos\" [value]=\"weekno\">{{weekno}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>  \n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Start Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker\"  formControlName=\"weekStartDate\" [(ngModel)]=\"startDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-sm-2\"></div>\n                    <div class=\"col-sm-6\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>End Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker1\"  formControlName=\"weekEndDate\" [(ngModel)]=\"endDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker1></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Pay or Receive</mat-label>\n                            <mat-select formControlName=\"payorreceive\" >\n                            <mat-option \n                            *ngFor=\"let pr of payorrecieve\" [value]=\"pr\">{{pr}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-6\">\n                        <button mat-raised-button color=\"primary\" type=\"submit\">show</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n       \n        <div class=\"col-sm-8 border-setup-second\">\n            <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                <th scope=\"col\">Sl.No.</th>\n                <th scope=\"col\">Entity Name</th>\n                <th scope=\"col\">SRPC Letter Ref No</th>\n                <th scope=\"col\">Revision No.</th>\n                <th scope=\"col\">Deviation Final</th>\n                <th scope=\"col\">SRPC File</th>\n                <th scope=\"col\">Pay or Receive</th>\n                </tr>\n            </thead>\n            <tbody *ngFor=\"let bill of allbills;let z=index;\">\n                <tr>\n                <td>{{z+1}}</td>\n                <td>{{bill.Entity}}</td>\n                <td>{{bill.Letter_refno}}</td>\n                <td>{{bill.Revision_no}}</td>\n                <td>{{bill.DevFinal|currency:\"&#8377;\"}}</td>\n                <td><a [attr.href]=\"'//'+ bill.image_url\" target=\"_blank\"><span class=\"material-icons\">\n                        picture_as_pdf\n                        </span></a></td>\n                <td>{{bill.PayableorReceivable}}</td>\n                \n                </tr>\n            </tbody>\n        </table>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder } from '@angular/forms';\nimport { NotificationService } from '../registration/notification.service';\nimport { FileLikeObject, FileUploader } from 'ng2-file-upload';\nenum CheckBoxType { DSM,RRAS,AGC,REACTIVE,SCED,CONGESTION,NONE };\n@Component({\n  selector: 'app-edit-bankdetails',\n  templateUrl: './edit-bankdetails.component.html',\n  styleUrls: ['./edit-bankdetails.component.css']\n})\nexport class EditBankdetailsComponent implements OnInit {\n\n  public uploader: FileUploader = new FileUploader({});\n  public hasBaseDropZoneOver: boolean = false;\n  status:boolean=false;\n  constructor(private http:HttpClient,private fb:FormBuilder,private notification:NotificationService) { }\n\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n    \n  accountName:string;\n  accountNumber:Number;\n  bankName:string;\n  branchName:string;\n  ifscCode:string;\n  choosenAccount:string;\n  check_box_type = CheckBoxType;\n\n  currentlyChecked: CheckBoxType;\n  ngOnInit(): void {\n  }\n \n\n  onSelectDSM(event,targetType: CheckBoxType){\n    if(event.checked){\n      this.SelectedAccount('DSM').subscribe(res=>{\n       \n        for(const key in res){\n          this.accountName=res[key]['accountName'];\n          this.accountNumber=res[key]['accountNumber'];\n          this.bankName=res[key]['bankName'];\n          this.branchName=res[key]['branchName'];\n          this.ifscCode=res[key]['ifscCode'];\n          this.choosenAccount='DSM';\n          \n        }\n      });\n    }\n    this.checkedOne(targetType);\n  }\n  onSelectRRAS(event,targetType: CheckBoxType){\n    if(event.checked){\n      this.SelectedAccount('RRAS').subscribe(res=>{\n       \n        for(const key in res){\n          this.accountName=res[key]['accountName4'];\n          this.accountNumber=res[key]['accountNumber4'];\n          this.bankName=res[key]['bankName4'];\n          this.branchName=res[key]['branchName4'];\n          this.ifscCode=res[key]['ifscCode4'];\n          this.choosenAccount='RRAS';\n          \n        }\n      });\n    }\n    this.checkedOne(targetType);\n  }\n  onSelectAGC(event,targetType: CheckBoxType){\n    if(event.checked){\n     \n      this.SelectedAccount('AGC').subscribe(res=>{\n        for(const key in res){\n          this.accountName=res[key]['accountName5'];\n          this.accountNumber=res[key]['accountNumber5'];\n          this.bankName=res[key]['bankName5'];\n          this.branchName=res[key]['branchName5'];\n          this.ifscCode=res[key]['ifscCode5'];\n          this.choosenAccount='AGC';\n          \n        }\n      });\n    }\n  this.checkedOne(targetType);\n\n  }\n  onSelectREACTIVE(event,targetType: CheckBoxType){\n    if(event.checked){\n      this.SelectedAccount('REACTIVE').subscribe(res=>{\n        for(const key in res){\n          this.accountName=res[key]['accountName2'];\n          this.accountNumber=res[key]['accountNumber2'];\n          this.bankName=res[key]['bankName2'];\n          this.branchName=res[key]['branchName2'];\n          this.ifscCode=res[key]['ifscCode2'];\n          this.choosenAccount='REACTIVE';\n          \n        }\n      });\n    }\n    this.checkedOne(targetType);\n  }\n  onSelectSCED(event,targetType: CheckBoxType){\n    if(event.checked){\n      this.SelectedAccount('SCED').subscribe(res=>{\n        for(const key in res){\n          this.accountName=res[key]['accountName6'];\n          this.accountNumber=res[key]['accountNumber6'];\n          this.bankName=res[key]['bankName6'];\n          this.branchName=res[key]['branchName6'];\n          this.ifscCode=res[key]['ifscCode6'];\n          this.choosenAccount='SCED';\n          \n        }\n      });\n    }\n    this.checkedOne(targetType);\n  }\n  onSelectCONGESTION(event,targetType: CheckBoxType){\n    if(event.checked){\n      this.SelectedAccount('CONGESTION').subscribe(res=>{\n        for(const key in res){\n          this.accountName=res[key]['accountName3'];\n          this.accountNumber=res[key]['accountNumber3'];\n          this.bankName=res[key]['bankName3'];\n          this.branchName=res[key]['branchName3'];\n          this.ifscCode=res[key]['ifscCode3'];\n          this.choosenAccount='CONGESTION';\n          \n        }\n      });\n    }\n    this.checkedOne(targetType);\n  }\n\n  SelectedAccount(acc:string){\n   return this.http.post('http://127.0.0.1:8000/getaccountdetails',{id:this.currentUser['registration_id'],type:acc})\n  }\n\n  checkedOne(targetType){\n    if(this.currentlyChecked === targetType) {\n      this.currentlyChecked = CheckBoxType.NONE;\n      return;\n    }\n\n    this.currentlyChecked = targetType;\n\n  }\n  onEdit(){\n    if(this.choosenAccount){\n\n\n      this.http.post('http://127.0.0.1:8000/updatebankdetails',{type:this.choosenAccount,accName:this.accountName,accNum:this.accountNumber,bankName:this.bankName,branchName:this.branchName,ifsc:this.ifscCode,id:this.currentUser['registration_id'],fullname:this.currentUser['fullname']}).subscribe(res=>{\n        this.accountName=\"\";this.bankName=\"\";this.branchName=\"\";this.ifscCode=\"\";\n        this.notification.success('Success |Pending for approval');\n      },error=>{\n        this.notification.warn('Failed to Update');\n      })\n    }\n  else{\n    this.notification.warn(\"Please choose atleast one account\")\n  }\n    \n  }\n  fileOverBase(event):  void {\n    this.hasBaseDropZoneOver=event;\n  }\n  getFiles(): FileLikeObject[] {\n    return this.uploader.queue.map((fileItem) => {\n      return fileItem.file;\n    });\n  }\n\n  upload(){\n    let files = this.getFiles();\n    if(files[0])\n    {\n      let requests = [];\n    let extension=files[0].name\n    \n    let formData = new FormData();\n    formData.append('file' , files[0].rawFile, this.currentUser.registration_id+'@'+this.choosenAccount+extension);    \n    \n    this.http.post('http://127.0.0.1:8000/updateImage',formData).subscribe(res=>{\n      this.status=true;\n    },error=>{\n      this.notification.warn(\"Not Uploaded\");\n    }) \n    }\n    else{\n      this.notification.warn(\"Please Choose File\")\n    }\n     \n  }\n  \n}\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"container\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n                <div mat-card-avatar><span class=\"material-icons\">\n                person_add_alt_1\n                    </span>\n                </div>\n                <mat-card-title>Edit Bank Details</mat-card-title>\n            </mat-card-header>\n            <hr>\n            <div class=\"col-sm-3\">\n                <strong>Select Applicable Accounts:</strong>\n            </div>\n            <div class=\"col-sm-1\">\n                <mat-checkbox [checked]=\"currentlyChecked === check_box_type.DSM\" (change)=\"onSelectDSM($event,check_box_type.DSM)\">DSM</mat-checkbox>\n            </div>\n            <div class=\"col-sm-1\">\n                <mat-checkbox [checked]=\"currentlyChecked === check_box_type.RRAS\" (change)=\"onSelectRRAS($event,check_box_type.RRAS)\">RRAS</mat-checkbox>\n            </div>\n            <div class=\"col-sm-1\">\n                <mat-checkbox [checked]=\"currentlyChecked === check_box_type.AGC\" (change)=\"onSelectAGC($event,check_box_type.AGC)\" >AGC</mat-checkbox>\n            </div>\n            <div class=\"col-sm-2\">\n                <mat-checkbox [checked]=\"currentlyChecked === check_box_type.REACTIVE\" (change)=\"onSelectREACTIVE($event,check_box_type.REACTIVE)\">REACTIVE</mat-checkbox>\n            </div>\n            <div class=\"col-sm-1\">\n                <mat-checkbox [checked]=\"currentlyChecked === check_box_type.SCED\" (change)=\"onSelectSCED($event,check_box_type.SCED)\">SCED</mat-checkbox>\n            </div>\n            <div class=\"col-sm-1\">\n                <mat-checkbox [checked]=\"currentlyChecked === check_box_type.CONGESTION\" (change)=\"onSelectCONGESTION($event,check_box_type.CONGESTION)\">CONGESTION</mat-checkbox>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        tag_faces\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Account Name</mat-label>\n                        <input matInput [(ngModel)]=\"accountName\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        input\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Account Number </mat-label>\n                        <input matInput [(ngModel)]=\"accountNumber\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        input\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Bank Name</mat-label>\n                        <input  matInput [(ngModel)]=\"bankName\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <!-- Second Row -->\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        tag_faces\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Branch Name</mat-label>\n                        <input matInput [(ngModel)]=\"branchName\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        input\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>IFSC Code</mat-label>\n                        <input matInput [(ngModel)]=\"ifscCode\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                <input type=\"file\"  placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\"  accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n                </div>\n                <div class=\"col-sm-4\">\n                <button (click)=\"upload()\" type=\"button\">Upload file</button>\n                </div>\n                <div class=\"col-sm-4\">\n                <span *ngIf=\"status\" class=\"material-icons\">\n                    check_circle_outline\n                </span>\n                </div>\n            </div>                         \n            <p> Note: Only .jpeg  .jpg  .png .pdf are allowed</p><hr>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" (click)=\"onEdit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ModalService } from 'src/app/_modal';\nimport { BigModalService } from 'src/app/_bigmodal/bigmodal.service';\nimport { NotificationService } from 'src/app/registration/notification.service';\n\n@Component({\n  selector: 'app-pending-bank',\n  templateUrl: './pending-bank.component.html',\n  styleUrls: ['./pending-bank.component.css']\n})\nexport class PendingBankComponent implements OnInit {\n  pendingBank=[];\n  selected:any;\n  remarks:string=null;\n  anypendingDetails:boolean=true;\n  imageURLList:Array<string>[]=[];\n  emptyList:boolean=true;\n  constructor(private http:HttpClient,private modalService: BigModalService,private notification:NotificationService) { }\n\n  ngOnInit(): void {\n    // this.http.get('http://127.0.0.1:8000/editedpendingBankDetails').subscribe(response=>{\n      \n    //   for(const key in response){\n    //       this.pendingBank.push(response[key]);\n    //   }\n    // },error=>{\n    //   console.log(\"error occured\",error);\n    // })\n    this.onFetch();\n  }\n\n  onView(bank){\n    this.selected=bank;\n    \n  }\n  onApprove(){\n    \n    this.http.post('http://127.0.0.1:8000/final-bank-approval',{id:this.selected.id,register_id:this.selected.register_id_id}).subscribe(response=>{\n      this.onFetch();\n    this.modalService.close('approve-modal');\n    this.notification.success(\"Approved Successfully\")\n    },error=>{\n      console.log(error);\n    });\n  }\n\n  onReject(){\n\n  this.http.post('http://127.0.0.1:8000/final-bank-rejection',{id:this.selected.id,remarks:this.remarks}).subscribe(response=>{\n      this.onFetch();\n      this.modalService.close('reject-modal');\n      this.notification.success(\"Rejected Successfully\")\n    },error=>{\n      this.notification.warn(\"Error Occured!\");\n    });\n\n  }\n  onFetch(){\n    return this.http.get('http://127.0.0.1:8000/editedpendingBankDetails').subscribe(response=>{\n          \n          this.pendingBank=[];\n          for(const key in response){\n              \n              this.pendingBank.push(response[key]);\n          }\n          },error=>{  \n          this.notification.warn(\"Failed to Fetch Bank Details\");\n        });\n  }\n  openModal1(id: string) {\n    this.modalService.open(id);\n  }\n\n  \n  openModal(id:string){\n    \n    this.http.post('http://127.0.0.1:8000/getBankImage',this.selected).subscribe(res=>{\n\n    console.log(res);\n        this.imageURLList=[];\n          for(const key in res)\n          {\n            this.imageURLList.push(res[key]);\n\n          }\n          if(this.imageURLList.length > 1)\n          {\n            this.emptyList=false;\n          }\n        });\n\n       \n        \n    this.modalService.open(id);\n    \n  }\n\n  closeModal1(id: string) {\n    this.modalService.close(id);\n  }\n\n}\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"container\">\n    <mat-card >\n        <div class=\"alert alert-warning\" *ngIf=\"!anypendingDetails\">\n            No Pending Details\n        </div>\n        <table class=\"table\"*ngIf=\"pendingBank\">\n            <thead class=\"thead-light\">\n                <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Entity Name</th>\n                <th scope=\"col\">Acc. Type</th>\n                <th scope=\"col\">Acc. Name</th>\n                <th scope=\"col\">Acc. Number</th>\n                <th scope=\"col\">Bank Name</th>\n                <th scope=\"col\">Branch Name</th>\n                <th scope=\"col\">IFSC Code</th>\n                <th scope=\"col\">Actions</th>\n                </tr>\n            </thead>\n            <tbody *ngFor=\"let bank of pendingBank;let z=index;\">\n                <tr>\n                <th scope=\"row\">{{z+1}}</th>\n                <td>{{bank.fullname}}</td>\n                <td>{{bank.acctype}}</td>\n                <td>{{bank.accountName}}</td>\n                <td>{{bank.accountNumber}}</td>\n                <td>{{bank.bankName|uppercase}}</td>\n                <td>{{bank.branchName}}</td>\n                <td>{{bank.ifscCode|uppercase}}</td>\n                <td><button mat-raised-button color=\"primary\" (click)=\"onView(bank);openModal1('approve-modal');\">Approve</button></td>\n                <td><button mat-raised-button color=\"warn\" (click)=\"onView(bank);openModal1('reject-modal');\">Reject</button></td>\n                <td><button mat-raised-button color=\"accent\" (click)=\"onView(bank);openModal('doc-modal');\">Docs</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </mat-card>\n</div>\n<jp-modal id=\"approve-modal\" style=\"width:250px;\">\n    <h1>Are you sure want to Approve the form</h1><hr>\n    <button mat-raised-button color=\"primary\" (click)=\"onApprove()\" >Yes</button>|\n    <button mat-raised-button color=\"warn\" (click)=\"closeModal1('approve-modal');\">No</button>\n                \n</jp-modal>\n\n<jp-modal id=\"reject-modal\" >\n    <h1>Are you sure want to Reject the form</h1><hr>\n    <!--\n    <div class=\"form-row\" style=\"height:90px;\">\n        <div class=\"form-group col-md-4\">\n            <label>Remarks</label>\n        </div>\n        <div class=\"form-group col-md-8\">\n            <textarea type=\"text\" placeholder=\"If any Remarks\" [(ngModel)]=\"remarks\" class=\"form-control\"></textarea>  \n        </div>\n    </div> -->\n    <button mat-raised-button color=\"primary\" (click)=\"onReject()\">Yes</button>|\n    <button mat-raised-button color=\"warn\" (click)=\"closeModal1('reject-modal');\">No</button>\n                \n</jp-modal>\n\n<jp-modal id=\"doc-modal\" style=\"width:250px;\">\n    <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal1('doc-modal');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>      \n    <div style=\"height:200px;\">\n          <div class=\"form-row\">\n                <div class=\"form-group\">\n                  <label>Attachments </label><br>\n                    <div *ngFor=\"let url of imageURLList;let i = index\">\n                      <a [attr.href]=\"'//'+ url\" target=\"_blank\">{{url}}</a>\n                    </div>\n                </div>\n              </div>\n        </div>\n    \n</jp-modal>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from '../registration/notification.service';\n\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.css']\n})\nexport class EditContactComponent implements OnInit {\n\n  constructor(private fb:FormBuilder,private http:HttpClient,private notificationService:NotificationService) { }\n\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  \n  ngOnInit(): void {\n    \n    this.http.post(\"http://127.0.0.1:8000/edit-details\",this.currentUser.registration_id).subscribe(response=>{\n        console.log(\"edit details\",response);\n      this.editContact.patchValue(response);\n    },error=>{\n      console.log(\"error occured\",error);\n    })\n  }\n  editContact=this.fb.group({\n    'contactName':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\n    'designation':[null,Validators.required],\n    'telephone':[null,[Validators.required,Validators.pattern(\"^[0-9]*$\")]],\n    'contactName2':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\n    'designation2':[null,Validators.required],\n    'telephone2':[null,[Validators.required,Validators.pattern(\"^[0-9]*$\")]],\n    'contactName3':[null,Validators.pattern('^[a-zA-Z ]*$')],\n    'designation3':[null],\n    'telephone3':[null,Validators.pattern(\"^[0-9]*$\")]\n    \n  })\n\n  onEdit(){\n    console.log(this.editContact.value);\n    this.http.post(\"http://127.0.0.1:8000/edited-details\",{formcontent:this.editContact.value,register_id:this.currentUser.registration_id,fullname:this.currentUser.fullname}).subscribe(response=>{\n\n        this.editContact.reset();\n        this.notificationService.success(\"Successfully Submitted | pending for approval\");\n    },error=>{\n      this.notificationService.warn(\"Failed to Submit Details\");\n      console.log(error);\n    })\n  }\n}\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"container\">\n    <form [formGroup]=\"editContact\" (ngSubmit)=\"onEdit()\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n                <div mat-card-avatar><span class=\"material-icons\">\n                person_add_alt_1\n                    </span>\n                </div>\n                <mat-card-title>Edit Contact Details</mat-card-title>\n            </mat-card-header>\n            <hr>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        tag_faces\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Contact Name 1</mat-label>\n                        <input matInput formControlName=\"contactName\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        input\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Designation </mat-label>\n                        <input matInput formControlName=\"designation\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        dialer_sip\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Telephone Number </mat-label>\n                        <input type=\"number\" matInput formControlName=\"telephone\" placeholder=\"Ex:9543XXXXXX\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <!-- Second Row -->\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        tag_faces\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Contact Name 2</mat-label>\n                        <input matInput formControlName=\"contactName2\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        input\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Designation </mat-label>\n                        <input matInput formControlName=\"designation2\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        dialer_sip\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Telephone Number </mat-label>\n                        <input matInput formControlName=\"telephone2\" placeholder=\"Ex:9543XXXXXX\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <!-- 3rd Row-->\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        tag_faces\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Contact Name 3</mat-label>\n                        <input matInput formControlName=\"contactName3\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        input\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Designation </mat-label>\n                        <input matInput formControlName=\"designation3\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        dialer_sip\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Telephone Number </mat-label>\n                        <input matInput formControlName=\"telephone3\" placeholder=\"Ex:9543XXXXXX\">\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" [disabled]=\"!editContact.valid\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </form>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ContactEdit } from 'src/app/shared/form-data.model';\nimport { HttpClient } from '@angular/common/http';\nimport { ModalService } from 'src/app/_modal';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { NotificationService } from 'src/app/registration/notification.service';\n\n@Component({\n  selector: 'app-pending-contact',\n  templateUrl: './pending-contact.component.html',\n  styleUrls: ['./pending-contact.component.css']\n})\nexport class PendingContactComponent implements OnInit {\n\n  pendingContact=[];\n  selected:any;\n  anypendingDetails:boolean=true;\n  constructor(private http:HttpClient,private modalService: ModalService,private notification:NotificationService) { }\n\n  editPopup:FormGroup=new FormGroup({\n    'fullname':new FormControl(null),\n    'contactName':new FormControl(null),\n    'designation':new FormControl(null),\n    'telephone':new FormControl(null),\n    'contactName2':new FormControl(null),\n    'designation2':new FormControl(null),\n    'telephone2':new FormControl(null),\n    'contactName3':new FormControl(null),\n    'designation3':new FormControl(null),\n    'telephone3':new FormControl(null),\n\n  })\n\n  ngOnInit(): void {\n\n    this.http.get('http://127.0.0.1:8000/editedpendingContacts').subscribe(response=>{\n      \n      for(const key in response){\n          // this.anypendingDetails=true;\n          this.pendingContact.push(response[key]);\n      }\n    },error=>{\n      console.log(\"error occured\",error);\n    })\n  }\n  onView(contact){\n    this.editPopup.patchValue(contact);\n    this.selected=contact;\n    \n  }\n  onApprove(){\n    \n    this.http.post('http://127.0.0.1:8000/final-edit-approval',{id:this.selected.id,register_id:this.selected.register_id_id}).subscribe(response=>{\n      this.onFetch();\n    this.modalService.close('edit-modal');\n    },error=>{\n      console.log(error);\n      this.notification.warn(\"Failed to Update Details\");\n    });\n  }\n\n  onReject(){\n\n    this.http.post('http://127.0.0.1:8000/final-edit-rejection',{id:this.selected.id,register_id:this.selected.register_id_id}).subscribe(response=>{\n      this.onFetch();\n      this.modalService.close('edit-modal');\n    },error=>{\n      this.notification.warn(\"Error Occured!\");\n    });\n\n  }\n  onFetch(){\n    return this.http.get('http://127.0.0.1:8000/editedpendingContacts').subscribe(response=>{\n          \n          this.pendingContact=[];\n          for(const key in response){\n              \n              this.pendingContact.push(response[key]);\n\n          }\n          console.log(this.pendingContact);\n          \n          this.notification.success(\"Approved Successfully\")\n          },error=>{\n          \n          this.notification.warn(\"Failed to Reject Contact Details\");\n        });\n  }\n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n  \n  \nopenModal1(id: string) {\n  \n    this.modalService.open(id);\n}\n\ncloseModal(id: string) {\n    this.modalService.close(id);\n}\n}\n","<div>\n<app-header></app-header>\n</div>\n<br>\n\n<div class=\"container\">\n    <mat-card >\n        <div class=\"alert alert-warning\" *ngIf=\"!anypendingDetails\">\n            No Pending Details\n        </div>\n        <table class=\"table\"*ngIf=\"pendingContact\">\n            <thead class=\"thead-light\">\n                <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Full Name</th>\n                <th scope=\"col\">Register Id</th>\n                <th scope=\"col\">Actions</th>\n                </tr>\n            </thead>\n            <tbody *ngFor=\"let contact of pendingContact;let z=index;\">\n                <tr>\n                <th scope=\"row\">{{z+1}}</th>\n                <td>{{contact.fullname}}</td>\n                <td>{{contact.register_id_id}}</td>\n                <td><button mat-raised-button color=\"primary\" (click)=\"onView(contact);openModal('edit-modal')\">View</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </mat-card>\n</div>\n<!--Popup Form -->\n<jw-modal id=\"edit-modal\">\n    <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('edit-modal');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    <br>\n    <div style=\"height:450px;\">\n        <form [formGroup]=\"editPopup\" >\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-12\">\n                  <label> Full Name </label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"fullname\" readOnly>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                    <label> Contact Name</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"contactName\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Designation</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"designation\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Telephone</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"telephone\" readOnly>\n                </div>\n            </div>\n            <!--2nd Contact Details -->\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                    <label> Contact Name 2</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"contactName2\" readOnly >\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Designation 2</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"designation2\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Telephone 2</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"telephone2\" readOnly>\n                </div>\n            </div>\n            <!-- 3rd Contact Details -->\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                    <label> Contact Name 3</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"contactName3\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Designation 3</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"designation3\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Telephone  3</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"telephone3\" readOnly>\n                </div>\n            </div>\n            <br>\n            <button mat-raised-button color=\"warn\" class=\"pull-right\" (click)=\"onReject()\">Reject</button>                                                  \n            <button mat-raised-button color=\"primary\" class=\"pull-right\" (click)=\"onApprove()\">Approve</button>                                                  \n        </form>\n    </div>\n</jw-modal>       ","import { Component, OnInit } from '@angular/core';\nimport { FileUploadService } from '../shared/file-upload.service';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n\n  fileToUpload: File = null;\n\n  constructor(private fileUploadService:FileUploadService) { }\n\n  ngOnInit(): void {\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload);\n    console.log(files.item);\n}\n// uploadFileToActivity() {\n//   this.fileUploadService.postFile(this.fileToUpload).subscribe(data => {\n//     // do something, if upload success\n//     }, error => {\n//       console.log(error);\n//     });\n// }\n}\n","<div>\n<app-header></app-header>\n</div>\n<div class=\"form-group\">\n    <label for=\"file\">Choose File</label>\n    <input type=\"file\"\n           id=\"file\"\n           (change)=\"handleFileInput($event.target.files)\">\n    <br>\n    <button class=\"btn btn-success\" type=\"button\">\n    Submit</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { HttpClient } from '@angular/common/http';\nimport { PostsService } from '../registration/registration.service';\n\n\n@Component({\n  selector: 'app-form-submitted',\n  templateUrl: './form-submitted.component.html',\n  styleUrls: ['./form-submitted.component.css']\n})\nexport class FormSubmittedComponent implements OnInit {\n\n\n  constructor(public postService:PostsService) { }\n\n  ngOnInit(): void {\n  \n\n\n}\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n    <app-header></app-header>\n    </div>\n</div>\n<hr>\n<div class=\"row\">\n  <div class=\"col-sm-2\">\n  </div>\n  <div class=\"col-sm-6 alert alert-success\" role=\"alert\" style=\"height:50px;\">Form Submitted Succesfully ! Your Application Number is <strong>{{postService.randomNumber}} </strong> </div>\n</div>\n\n\n<!-- Multiple Forms -->\n","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { PostsService } from '../registration/registration.service';\nimport { FormGroup ,FormBuilder} from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit,OnDestroy {\n\n  @ViewChild('fileUpload') fileUploadEl: ElementRef;\n  contents:any[];\n  file:File;\n  isAuthenticated=true;\n  shortName:string=null;\n  selected:string=null;\n  userName:string;\n  isFinance:boolean=true;\n  private userSub:Subscription;\n  constructor(private posts:PostsService, private fb:FormBuilder,public authService:AuthService,\n              private route:Router,private http:HttpClient) { }\n\n  ngOnInit(): void {\n    \n  \n    this.userSub=this.authService.user.subscribe(user=>{\n      this.isAuthenticated= !!user;\n    });\n    var currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n    console.log(\"currenr user\",currentUser);\n    // var token = currentUser.token; // your token\n    this.isAuthenticated=currentUser.isSuperUser;\n    if(currentUser.usertype =='Finance'){\n      this.isFinance=false;\n    }\n    else{\n      this.isFinance=true;\n    }\n    \n    this.shortName=currentUser.shortName\n    this.userName=currentUser.userName\n  \n  }\n  getbankdetails(){\n    this.http.get('http://127.0.0.1:8000/srldc-bankdetails').subscribe(res=>{\n\n    console.log(res);\n      var fileText=res;\n      var fileName = \"SRLDC_MO BankDetails.txt\"\n      this.saveTextAsFile(fileText, fileName);\n    \n    },error=>{\n      console.log(\"errors occured\",error);\n    })\n  }\n  allAccountDetails(){\n\n    this.http.get('http://127.0.0.1:8000/all-mobankdetails').subscribe(res=>{\n\n    console.log(res);\n      var fileText=res;\n      var fileName = \"SRLDC_MO_ALL_BankDetails.txt\"\n      this.saveTextAsFile(fileText, fileName);\n    \n    },error=>{\n      console.log(\"errors occured\",error);\n    })\n  }\n  saveTextAsFile(data,filename){\n\n    if(!data) {\n        console.error('Console.save: No data')\n        return;\n    }\n\n    if(!filename) filename = 'console.json'\n\n    var blob = new Blob([data], {type: 'text/plain'}),\n        e    = document.createEvent('MouseEvents'),\n        a    = document.createElement('a')\n// FOR IE:\n\n    if (window.navigator && window.navigator.msSaveOrOpenBlob)\n      {\n        window.navigator.msSaveOrOpenBlob(blob, filename);\n      }\n    else\n      {\n        var e = document.createEvent('MouseEvents'),\n            a = document.createElement('a');\n\n        a.download = filename;\n        a.href = window.URL.createObjectURL(blob);\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\n        e.initEvent('click', true, false);\n        \n        a.dispatchEvent(e);\n      }\n    }\n \n  loggingoff(){\n    \n    this.posts.signupForm.reset();\n    var currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n    sessionStorage.removeItem(currentUser);\n    sessionStorage.clear();\n    this.route.navigate(['/auth']);\n  }\n\nngOnDestroy(){\n\n}\n}\n\n\n\n  \n\n","\n<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayoutAlign=\"space-between center\">\n    <div>\n        <button mat-button routerLink=\"/home/notification\">\n                 <mat-icon>home</mat-icon>\n                 <span>Home</span>\n        </button>\n\n        <button mat-button *ngIf=\"isFinance\" [matMenuTriggerFor]=\"user_details\">\n           <span> User Details </span>\n           <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n\n        <mat-menu #user_details>\n            <ng-template matMenuContent>\n                <button mat-menu-item  routerLink=\"/registration\">Registration</button>\n                <button mat-menu-item  routerLink=\"/registration/edit-contact-details\" *ngIf=\"!isAuthenticated\">Edit Contact Details</button>\n                <button mat-menu-item routerLink=\"/registration/edit-bank-details\" *ngIf=\"!isAuthenticated\">Edit Bank Details</button>\n            </ng-template>\n        </mat-menu>\n\n        <button mat-button *ngIf=\"isAuthenticated || !isFinance\" [matMenuTriggerFor]=\"admin\" >\n           <span> Admin </span>\n           <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n\n        <mat-menu #admin>\n            <ng-template matMenuContent>\n                <button mat-menu-item *ngIf=\"isAuthenticated || !isFinance\" routerLink=\"/admin/all-users\">Users List</button>\n                <button mat-menu-item routerLink=\"/admin/all-applications\">Pending Applications</button>\n                \n                <button mat-menu-item *ngIf=\"isAuthenticated\" routerLink=\"/admin/pending-contactslist\">Pending Contact Details</button>\n\n                <button mat-menu-item *ngIf=\"isAuthenticated\" routerLink=\"/admin/pending-banklist\">Pending Bank Details</button>\n            </ng-template>\n        </mat-menu>\n\n        <button mat-button [matMenuTriggerFor]=\"billing\">\n            <span>Billing</span>\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n        \n        <mat-menu #billing>\n            <button mat-menu-item *ngIf=\"isAuthenticated\"  routerLink=\"/config\">Upload Bills</button>\n            <button mat-menu-item  routerLink=\"/config/view-bills\">View Bills</button>\n            <button mat-menu-item *ngIf=\"isAuthenticated\"  routerLink=\"/config/modify-bills\">Edit Bills</button>\n        </mat-menu>\n\n        <button mat-button [matMenuTriggerFor]=\"payment\">\n            <span>Payment</span>\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n        \n        <mat-menu #payment>\n        <ng-template matMenuContent>\n            <button mat-menu-item  routerLink=\"/payment\">Enter Payment Details</button>\n            <button mat-menu-item routerLink=\"/payment/viewpayments\">View Payment</button>\n            <button mat-menu-item routerLink=\"/payment/weeklyDisbursements\">Disbursements</button>\n        </ng-template>\n        </mat-menu>\n\n        <!--<button mat-button *ngIf=\"!isAuthenticated || !isFinance\" [matMenuTriggerFor]=\"edit\">\n            <mat-icon>edit</mat-icon>\n        </button>\n        -->\n        <mat-menu #edit>\n        <ng-template matMenuContent>\n            <button mat-menu-item  routerLink=\"/edit-contact-details\">Contact Details</button>\n            <button mat-menu-item routerLink=\"/\">Bank Details</button>\n        </ng-template>\n        </mat-menu>\n\n        <button mat-button [matMenuTriggerFor]=\"user\" *ngIf=\"isAuthenticated\">\n            <span>User</span>\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n        \n        <mat-menu #user>\n        <ng-template matMenuContent>\n            <button mat-menu-item  routerLink=\"/user/user-creation\">Create User</button>\n            <button mat-menu-item routerLink=\"/user/change-password\">Change Password</button>\n        </ng-template>\n        </mat-menu>\n        <!-- SRLDC MO Bank Account Section -->\n        <button mat-button [matMenuTriggerFor]=\"bank\" *ngIf=\"isAuthenticated\">\n            <span>Bank Details</span>\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n        \n        <mat-menu #bank>\n        <ng-template matMenuContent>\n            <button mat-menu-item  routerLink=\"/user/add-account\">Add Account</button>\n        </ng-template>\n        </mat-menu>\n\n        \n    </div>\n    <div>\n        <button mat-button [matMenuTriggerFor]=\"bankAccount\" >\n            <span>SRLDC Bank Details</span>\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n\n        <mat-menu #bankAccount>\n        <ng-template matMenuContent>\n            <button mat-menu-item (click)=\"getbankdetails()\">Present Account</button>\n            <button mat-menu-item (click)=\"allAccountDetails()\">All Accounts </button>\n        </ng-template>\n        </mat-menu>\n        <button mat-button [matMenuTriggerFor]=\"logout\">\n            <span> {{userName}}</span>\n            <mat-icon>arrow_drop_down</mat-icon>\n        </button>\n\n        <mat-menu #logout>\n            <button mat-menu-item  routerLink=\"/new-chat\" >Chat Box </button>\n            <button mat-menu-item  (click)=\"loggingoff()\">Logoff</button>\n        </mat-menu>\n    </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<div class=\"row\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home-notification',\n  templateUrl: './home-notification.component.html',\n  styleUrls: ['./home-notification.component.css']\n})\nexport class HomeNotificationComponent implements OnInit {\n\n  formdata:Boolean=false;\n  approved:Boolean=false;\n  rejected:Boolean=false;generated:Boolean=false;\n  pending:Boolean=false;\n  gen_billYear:String;gen_billStartDate:Date;gen_billEndDate:Date;gen_billRevision:string;\n  bank_pending:Boolean=false;\n  rejectedReason:string;\n  pendingUsers=[];\n  financeApproved=[];\n  financeRejected=[];\n  pendingContacts=[];\n  pendingBank=[];\n  approvedDate:Date;\n  conApprovedDate:Date;\n  bankApprovedDate:Date;\n  applicationNumber:string;\n  applicationNumber1:string;\n  applicationNumber2:string;\n  contactUpdation:string;\n  \n  isSuperUser:boolean;\n  isFinance:boolean=false;\n  isUpdatedContact:boolean=false;\n  isUpdatedBank:boolean=false;\n  \n\n  constructor(private http:HttpClient) { }\n  ngOnInit(): void {\n\n    var currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  \n    this.isSuperUser=currentUser.isSuperUser;\n    if(currentUser.usertype =='Finance'){\n      this.isFinance=true;\n    }\n\n    this.http.post(\"http://127.0.0.1:8000/pendingUsers\",currentUser.registration_id).subscribe(res=>{\n          \n        \n          for(const id in res){\n            if(id=='admin_data')\n            {\n              this.pendingUsers.push(res[id]);\n            }\n            else if(id=='finance_approved'){\n              this.financeApproved.push(res[id]);\n            }\n            else if(id =='finance_rejected'){\n              this.financeRejected.push(res[id])\n            }\n          }\n          if(res['updated_contact']){\n            this.isUpdatedContact=true\n            this.conApprovedDate=res['updated_contact']['approvedDate'];\n          }\n\n          if(res['updated_bank']){\n            this.isUpdatedBank=true\n            this.bankApprovedDate=res['updated_bank']['validfrom'];\n          }\n        \n          for(const name in res){\n            if(name=='pending_contacts')\n            {\n              this.pendingContacts.push(res[name]);\n            }\n          }\n\n          for(const name in res){\n            if(name=='pending_bank')\n            {\n              this.pendingBank.push(res[name]);\n            }\n          }\n         \n          for(const key in res){\n            \n            if(key=='formdata'){\n              if(res[key].length >0 ){\n                this.applicationNumber=res[key][1];\n                this.formdata=true;\n                }\n                else{\n                  this.formdata=false;\n                }\n            }\n            else if(key=='approved'){\n              if(res[key].length >0 ){\n                this.applicationNumber1=res[key][1]\n                this.approvedDate=res[key][2];\n                this.approved=true;\n              }\n              else{\n                this.approved=false;\n              }\n            }\n            else if(key=='rejected'){\n              \n              if(res[key].length >0){\n                \n                this.applicationNumber2=res[key][1]\n                this.rejected=true;\n                this.rejectedReason=res[key][0];\n              }\n              else{\n                this.rejected=false;\n              }\n            }\n            else if(key=='bills_generated'){\n              \n              if(res[key].length >0){\n                \n                this.gen_billYear=res[key][0]\n                this.gen_billStartDate=res[key][1]\n                this.gen_billEndDate=res[key][2]\n                this.gen_billRevision=res[key][3]\n                this.generated=true;\n                this.rejectedReason=res[key][0];\n              }\n              else{\n                this.rejected=false;\n              }\n            }\n            else if(key=='pending'){\n              \n              if(res['pending']){\n                this.pending=true;\n                // this.rejectedReason=res['rejected'][0];\n              }\n              else{\n                this.pending=false;\n              }\n            }\n            else if(key=='bank_pending'){\n              \n              if(res['bank_pending']){\n                this.bank_pending=true;\n                // this.rejectedReason=res['rejected'][0];\n              }\n              else{\n                this.bank_pending=false;\n              }\n            }\n\n          }  \n    });\n//Finance Verification Status\n    \n  }\n\n \n\n}\n","<br>\n\n<div class=\"container\" *ngIf=\"isSuperUser || isFinance\">\n    <div  *ngFor=\"let pending of pendingUsers;let i=index\">\n        <div class=\"row\" *ngFor=\"let user of pending\">\n            <div class=\"col-sm-8 col-md-8 alert alert-warning\">\n                <strong> {{user[i]}}</strong> Application No.<strong> {{user[i+1]}} </strong>is pending for approval.\n            </div>\n            \n        </div>\n    </div>\n</div>\n\n<div class=\"container\" *ngIf=\"isSuperUser\">\n    <div  *ngFor=\"let approved of financeApproved;let i=index\">\n        <div class=\"row\" *ngFor=\"let user of approved\">\n            <div class=\"col-sm-8 col-md-8 alert alert-success\">\n             Application No.<strong> {{user[i]}} </strong>is approved by Finance\n            </div>\n        </div>\n    </div>\n    <div  *ngFor=\"let rejected of financeRejected;let i=index\">\n        <div class=\"row\" *ngFor=\"let user of rejected\">\n            <div class=\"col-sm-8 col-md-8 alert alert-danger\">\n                Application No.<strong> {{user[i]}} </strong>is not approved by finance because of <strong>{{user[i+1]}}</strong>\n            </div>  \n        </div>\n    </div>\n    <div  *ngFor=\"let users of pendingContacts;let i=index\">\n        <div class=\"row\" *ngFor=\"let user of users\">\n            <div class=\"col-sm-8 col-md-8 alert alert-warning\">\n            <strong> {{user.fullname}} </strong> Application No. {{user.register_id_id}} updated their <mark>contact details.</mark>\n            </div>\n        </div>\n    </div>\n    <div  *ngFor=\"let banks of pendingBank;let i=index\">\n        <div class=\"row\" *ngFor=\"let bank of banks\">\n            <div class=\"col-sm-8 col-md-8 alert alert-warning\">\n            <strong> {{bank.fullname}} </strong>  updated their <mark>Bank details.</mark>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-9 col-md-9 alert alert-success\" *ngIf=\"generated\">\n            <p>SRLC Bills are generated for the week from <strong> {{gen_billStartDate|date:'fullDate'}} to {{gen_billEndDate|date:'fullDate'}}</strong> and<strong> {{gen_billRevision}} </strong> <button mat-stroked-button color=\"primary\" routerLink=\"/payment\"> Go </button></p>\n        </div>\n        <div class=\"col-sm-9 col-md-9 alert alert-warning\"  *ngIf=\"formdata\">\n            <strong> Application No: <strong> {{applicationNumber}} </strong>is pending for approval</strong>\n        </div>\n        <div class=\"col-sm-9 col-md-9 alert alert-success\" *ngIf=\"approved\">\n            <strong > Application No: <strong> {{applicationNumber1}} </strong>is approved successfully on {{approvedDate|date:\"fullDate\"}}</strong>\n        </div>\n        <div class=\"col-sm-9 col-md-9 alert alert-danger\" *ngIf=\"rejected\">\n            <p > Application No : <strong> {{applicationNumber2}} </strong>details are incorrect beacuse of these reasons <br> <strong>{{rejectedReason}} </strong> </p>\n        </div>\n\n        \n        <div class=\"col-sm-9 col-md-9 alert alert-warning\" *ngIf=\"pending\">\n            <p > Contact Details are pending for approval </p>\n        </div>\n\n        <div class=\"col-sm-9 col-md-9 alert alert-warning\" *ngIf=\"bank_pending\">\n            <p > Bank Details are pending for approval </p>\n        </div>\n\n        <div class=\"col-sm-9 col-md-9 alert alert-success\" *ngIf=\"isUpdatedContact\">\n            <p > Contact Details are approved and updated successfully on {{conApprovedDate|date:'fullDate'}} </p>\n        </div>\n\n        <div class=\"col-sm-9 col-md-9 alert alert-success\" *ngIf=\"isUpdatedBank\">\n            <p > Bank Details are approved and updated successfully on {{bankApprovedDate|date:'fullDate'}}</p>\n        </div>\n\n    </div>\n\n        \n    \n</div>\n\n","import { Component, ElementRef, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { ChatServiceService } from '../services/chat-service.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-new-chat',\n  templateUrl: './new-chat.component.html',\n  styleUrls: ['./new-chat.component.css']\n})\nexport class NewChatComponent implements OnInit,OnChanges {\n\n  users:Array<string>=[];\n  feed:any=[];\n  receiver:string;\n  sender:string;\n  message:string;\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  @ViewChild('scroller') private myScroller: ElementRef;\n\n  constructor(private chat:ChatServiceService,private http:HttpClient) { }\n\n  ngOnInit(): void {\n    this.chat.getUsers().subscribe(users => {\n      for(const key in users)\n      {\n        this.users.push(users[key]);\n      }\n  });\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom(){\n    this.myScroller.nativeElement.scrollTop\n    = this.myScroller.nativeElement.scrollHeight;\n  }\n  onSelectUser(receiver:string){\n    this.feed=[];\n    this.sender=this.currentUser['userName'];\n    this.receiver=receiver[0];\n    this.http.post('http://127.0.0.1:8000/file/getMessages',{sender:this.currentUser['userName'],receiver:receiver[0]}).subscribe(res=>{\n        for (const key in res) \n        {\n          this.feed.push(res[key]);\n        }\n    });   \n  }\n\n  onSendMessage(){\n\n    this.http.post('http://127.0.0.1:8000/file/chatMessages',{message:this.message,\n      sender:this.currentUser['userName'],receiver:this.receiver,short_name: this.currentUser.shortName}).subscribe(res=>{\n        this.ngOnChanges(res);\n        this.message='';\n      })\n  }\n\n  handleSubmit(event) {\n    if (event.keyCode === 13) {\n      this.onSendMessage();\n    }\n  }\n\n  onCheckSenderSide(message:any){\n    if(message['sender']==this.sender && message['receiver']==this.receiver)\n    {\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  onCheckReceiverSide(message:any){\n    if(message['sender']==this.receiver && message['receiver']==this.sender)\n    {\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  ngOnChanges(allmsg:any)\n  { \n    this.feed=[];\n      for (const key in allmsg) \n        {\n          this.feed.push(allmsg[key]);\n        }\n      this.myScroller.nativeElement.scrollTop = this.myScroller.nativeElement.scrollHeight;\n  }\n}\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"height:550px;overflow:auto;\">\n            <div *ngFor=\"let user of users\">\n                <div class=\"userItem\" (click)=\"onSelectUser(user)\">\n                    <span class=\"status\" ></span>\n                    <span class=\"userName\" >\n                        {{user}}\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-8\" #scroller style=\"background-color:gray;height:550px;overflow:auto;\">\n            <div *ngFor=\"let msg of feed;\">\n                <div class=\"msgfeed_receiver\" *ngIf=\"onCheckReceiverSide(msg)\">\n                    <p>{{msg['message']}}</p>\n                    <span class=\"time-right\">{{msg['timestamp']}}</span>\n                </div>\n                <div class=\"msgfeed_sender\" *ngIf=\"onCheckSenderSide(msg)\">\n                    <p>{{msg['message']}}</p>\n                    <span class=\"time-right\">{{msg['timestamp']}}</span>\n                </div>\n            </div>\n        </div>\n    </div><br>\n    <div class=\"row\">\n        <div class=\"col-sm-4\"></div>\n        <div class=\"col-sm-8\" *ngIf=\"receiver\">\n            <input type=\"text\" Placeholder=\"Type a message\" [(ngModel)]=\"message\" (keydown)=\"handleSubmit($event)\">\n            <span style=\"margin-left:4px;\"><button mat-raised-button color=\"primary\" (click)=\"onSendMessage()\">send</button></span>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { PaymentDetailsService } from './payment-details.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { BillData } from '../shared/generated_bill.model';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ModalService } from '../_modal';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from '../registration/notification.service';\nimport { error } from 'protractor';\nimport { toInteger, isInteger } from '@ng-bootstrap/ng-bootstrap/util/util';\nimport { DateListService } from '../configure/date-list.service';\nimport { MatGridTileHeaderCssMatStyler } from '@angular/material/grid-list';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n\n@Component({\n  selector: 'app-payment-details',\n  templateUrl: './payment-details.component.html',\n  styleUrls: ['./payment-details.component.css']\n})\nexport class PaymentDetailsComponent implements OnInit {\n\n  generatedBills:Array<string>=[];\n  years=['2017-18','2018-19','2019-20','2020-21']\n  weeknos=[1,2,3,4,5,6,7,8,9]\n  status=[\"Notified\",\"Partial\",\"Complete\"]\n  paytype=[\"RTGS\",\"DD\",\"NEFT\",\"Others\"]\n  payorrecieve=[\"Payable\",\"Receivable\"]\n  startDate:Date;\n  endDate:Date\n  paidamount:Number;\n  splitvalues:any=[];\n  showsplitcomp:boolean=false;\n  elementData:any;\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n\n  paymentButton:Boolean=true;\n  constructor(private weekBills:PaymentDetailsService,private fb:FormBuilder,\n    private modalService: ModalService,public checked:PaymentDetailsService,\n    private notificationService:NotificationService,private date:DateListService,\n    public dialog: MatDialog) { }\n  paymentForm=this.fb.group({\n    'year':['2020-21',Validators.required],\n    'weekno':[null,Validators.required],\n    'weekStartDate':[null,Validators.required],\n    'weekEndDate':[null,Validators.required],\n    'status':[\"Notified\",Validators.required],\n    'payorreceive':[null,Validators.required]\n  })\n  listData: MatTableDataSource<BillData>;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns: string[] = ['select','Entity','Letter_refno','Revision_no','DevFinal','Outstandings','PayableorReceivable'];\n  showFooter='off';\n  selection = new SelectionModel<BillData>(false);\n  selectedCheckbox:BillData; \n  paymenttype:string=''; \n  paymentref:string=''; \n  paymentdate:Date; \n  paymentamount:Number; \n  error=null;\n  ngOnInit(): void {  \n  }\n\n  openDialog() {\n    this.checked.populateForm(this.selectedCheckbox);\n    const dialogRef = this.dialog.open(DialogExampleComponent,{\n      width: '950px',\n      data:{check:this.selectedCheckbox}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.onSubmit();\n    });\n  }\n\n  get init(): any {\n    return {\n      first: 0\n     \n    };\n  }\n  weekChange(event)\n  {\n    this.startDate=this.date.date_list[0][0];\n    this.endDate=this.date.date_list[0][1];\n  }\n  onSubmit(){\n    \n    this.weekBills.fetchConfigDetails(this.paymentForm.value).subscribe(response=>{\n      \n      this.listData = new MatTableDataSource(response[0]['Bills']);\n      this.listData.sort=this.sort;\n      this.listData.paginator=this.paginator;\n      this.showFooter='on'\n\n      \n    })\n  }\n\n  onSplit(element)\n  {\n    this.showsplitcomp=true;\n    this.splitvalues=[];\n    this.checked.splitPayments(element).subscribe(res=>{\n      for(const key in res)\n      { \n        this.splitvalues.push(res[key]);\n      }\n      this.splitvalues.push(element);\n    },\n    error=>{\n      console.log(\"error occured\",error);\n    })\n  }\n  \n  onSelect(element:BillData){\n    \n    this.selectedCheckbox=element;\n    \n  }\n  visibility(event:Event){\n  \n    if(this.currentUser['registration_id']=='SRADMIN')\n    {\n    this.paymentButton=!event['checked'];\n    }\n    else if(this.paymentForm.value['payorreceive']=='Receivable')\n    {\n      this.paymentButton=true;\n    }\n    else{\n      this.paymentButton=false;\n    }\n  }\n  openModal(id: string) {\n  this.modalService.open(id);\n  }\n\n  \n  closeModal(id: string) {\n  this.modalService.close(id);\n  }\n\n  onChecked(){\n\n    this.checked.populateForm(this.selectedCheckbox);\n  }\n  \n  onSaveChanges(paymentDetails)\n  {   \n    \n    \n    var payamount:number=+paymentDetails[\"payamount\"]\n    \n    var actalamount:number=this.checked.selectedRow.value['DevFinal']\n    if(payamount == actalamount)\n    {\n      var changeStatus=\"Complete\"\n    }\n    else if( payamount<actalamount)\n    {\n      var changeStatus=\"Partial\"\n    }\n\n    if(payamount>actalamount)\n    {\n      this.notificationService.warn(\"Excess amount is not acceptable\")\n    }\n    else{\n    \n    this.checked.paymentDetails(paymentDetails[\"paytype\"],paymentDetails[\"payrefno\"],paymentDetails[\"paydate\"],paymentDetails[\"payamount\"],paymentDetails[\"remarks\"],changeStatus,this.currentUser['fullname']).subscribe(res=>{\n      \n      this.notificationService.success('! Submitted successfully');\n      this.onSubmit();\n    },\n    error=>{\n      this.error.next(error.message);\n  })\n    \n  }\n}\n}\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog.html',\n})\nexport class DialogExampleComponent {\n\n  paymenttype:string=''; \n  paymentref:string=''; \n  paymentdate:String; \n  paymentamount:Number; \n  paytype=[\"RTGS\",\"DD\",\"NEFT\",\"Others\"]\n  newdate:string;\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  constructor(\n    public dialogRef: MatDialogRef<DialogExampleComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,private fb:FormBuilder,public checked:PaymentDetailsService,\n    private notificationService:NotificationService) {}\n  \n    paymentDetails=this.fb.group({\n      'paytype':[null,Validators.required],\n      'payrefno':[null,Validators.required],\n      'paydate':[null,[Validators.required]],\n      'payamount':[null,Validators.required],\n      'remarks':[null]\n    })\n\n    get init(): any {\n      return {\n        first: 0\n       \n      };\n    }\n    onSaveChanges(paymentDetails)\n  {   \n    \n    \n    var payamount:number=+paymentDetails[\"payamount\"]\n    \n    var actalamount:number=this.checked.selectedRow.value['DevFinal']\n    if(payamount == actalamount)\n    {\n      var changeStatus=\"Complete\"\n    }\n    else if( payamount<actalamount)\n    {\n      var changeStatus=\"Partial\"\n    }\n\n    if(payamount>actalamount)\n    {\n      this.notificationService.warn(\"Excess amount is not acceptable\")\n    }\n    else{\n    \n      \n      var d = new Date(paymentDetails['paydate']),\n  month = '' + (d.getMonth() + 1),\n  day = '' + d.getDate(),\n  year = d.getFullYear();\n\nif (month.length < 2) month = '0' + month;\nif (day.length < 2) day = '0' + day;\n\nthis.newdate= [year, month, day].join('-');\n\n    this.checked.paymentDetails(paymentDetails[\"paytype\"],paymentDetails[\"payrefno\"],this.newdate,paymentDetails[\"payamount\"],paymentDetails[\"remarks\"],changeStatus,this.currentUser['fullname']).subscribe(res=>{\n      \n      this.notificationService.success('! Submitted successfully');\n      this.dialogRef.close(\"closed successfully\");\n      \n    },\n    error=>{\n      this.notificationService.warn('!Failed to Submit the Details');\n      this.dialogRef.close(\"failed to close\");\n     })\n    }\n  }\n    \n}","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-sm-6 alert alert-success\" style=\"margin-left:90px;\">\n        <p> Bills and Payments </p>\n    </div>\n</div>\n\n<!-- Flex Layout -->\n<div class=\"container-fluid\" >\n    <div class=\"row\">\n    <div class=\"col-sm-3 border-setup-first\">\n        <div class=\"row \">\n                <div class=\"col\">\n                    <div class=\"alert alert-info\" role=\"alert\">\n                        <strong> Please Select</strong>\n                    </div>\n                </div>\n            </div>\n        <form [formGroup]=\"paymentForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <mat-form-field appearance=\"outline\" >\n                    <mat-label>Year</mat-label>\n                    <mat-select formControlName=\"year\" placeholder=\"year\">\n                    <mat-option \n                    *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-6\">\n                <mat-form-field appearance=\"outline\" >\n                    <mat-label>WeekNo</mat-label>\n                    <mat-select formControlName=\"weekno\" (selectionChange)=\"weekChange($event)\" placeholder=\"weekno\">\n                    <mat-option \n                    *ngFor=\"let weekno of weeknos\" [value]=\"weekno\">{{weekno}}</mat-option>\n                    </mat-select>\n                </mat-form-field>  \n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Start Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker4\"  formControlName=\"weekStartDate\" [(ngModel)]=\"startDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker4></mat-datepicker>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-6\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>End Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker5\"  formControlName=\"weekEndDate\" [(ngModel)]=\"endDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker5></mat-datepicker>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Status</mat-label>\n                    <mat-select formControlName=\"status\" >\n                    <mat-option \n                            *ngFor=\"let stat of status\" [value]=\"stat\">{{stat}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Pay or Receive</mat-label>\n                    <mat-select formControlName=\"payorreceive\" >\n                    <mat-option \n                            *ngFor=\"let pr of payorrecieve\" [value]=\"pr\">{{pr}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <button mat-raised-button color=\"primary\" type=\"submit\">show</button>\n            </div>\n        </div>\n        </form>\n    </div>\n    <!-- Second Column -->\n    <div class=\"col-sm-8 border-setup-second\">\n        <div class=\"row\">\n            <div class=\"col\">\n               <div [ngClass]=\"{'hide':showFooter=='off'}\">\n                <mat-table class=\"mat-elevation-z8\" [dataSource]=\"listData\" matSort>\n                    \n                     <!-- First Column Entity Name -->\n                    <ng-container matColumnDef=\"select\">\n                    <mat-header-cell *matHeaderCellDef>\n\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                    <mat-checkbox (click)=\"onSelect(element)\"\n                                    (change)=\"$event ? selection.toggle(element) : null;visibility($event)\"\n                                    [checked]=\"selection.isSelected(element)\" [disabled]=\"paymentForm.value['status'] =='Complete'\" [ngClass]=\"{'crossicon':paymentForm.value['status'] =='Complete'}\">\n                    </mat-checkbox>\n                    </mat-cell>\n                    </ng-container>\n                    <!--Second column\n                    <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{element.id}}</mat-cell>\n                    </ng-container>-->\n\n                    <ng-container matColumnDef=\"Entity\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Entity</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{element.Entity}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Letter_refno\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Letter_refno</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{element.Letter_refno}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Revision_no\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Revision_No</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{element.Revision_no}}</mat-cell>\n                    </ng-container>\n                    <!-- Second Column DevAddtional -->\n                    <ng-container matColumnDef=\"DevFinal\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>DevFinal</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{element.DevFinal|currency:\"&#8377;\"}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Outstandings\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Outstanding_amount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{element.Outstandings|currency:\"&#8377;\"}}</mat-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"PayableorReceivable\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>PayableorReceivable</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{element.PayableorReceivable}}</mat-cell>\n                    </ng-container>\n\n                    <!--pop up model -->\n                    \n                    <!-- close model-->\n                    <!-- Initial Loading -->\n                    <ng-container matColumnDef=\"loading\">\n                    <mat-footer-cell *matFooterCellDef colspan=\"6\">\n                        Loading data...\n                    </mat-footer-cell>\n                    </ng-container>\n                    <!-- No data in Database-->\n                    <ng-container matColumnDef=\"nodata\">\n                    <mat-footer-cell *matFooterCellDef colspan=\"6\">\n                        No data...\n                    </mat-footer-cell>\n                    </ng-container>\n\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\" [ngClass]=\"{headerColor:'true'}\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                    <mat-footer-row *matFooterRowDef=\"['loading']\"  [ngClass]=\"{'hide':listData!=null}\"></mat-footer-row>\n                    <mat-footer-row *matFooterRowDef=\"['nodata']\" [ngClass]=\"{'hide':!(listData!=null && listData.data.length == 0)}\"></mat-footer-row>\n                </mat-table>\n                </div>\n            </div>\n        </div><br>\n        <div class=\"row\">\n            <div class=\"col\">\n                <button class=\"pull-right\" mat-raised-button color=\"primary\" [disabled]=\"paymentButton\" [ngClass]=\"{'hide':!(listData!=null)}\" (click)=\"openDialog()\">Enter Payment Details</button>\n            </div>\n            <!-- onChecked();openModal('enter-details')\" -->\n            \n        </div>\n        \n    </div>\n    </div>\n</div>\n<!--\n<jw-modal id=\"enter-details\">\n    <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('enter-details');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n                        <br><hr>\n                        <div style=\"height:280px;\">\n                        \n                            <div class=\"row\">\n                                <div class=\"col-md-3\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-label>Payment Type</mat-label>\n                                        <mat-select  [(ngModel)]=\"paymenttype\">\n                                            <mat-option *ngFor=\"let pay of paytype\" [value]=\"pay\">{{pay}}</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-label>Payment Ref.No. </mat-label>\n                                        <input matInput placeholder=\"Payment Ref.No.\" [(ngModel)]=\"paymentref\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-label>Payment Date </mat-label>\n                                        <input matInput [matDatepicker]=\"picker\" placeholder=\"Payment Date\" [(ngModel)]=\"paymentdate\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker></mat-datepicker>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-label>Payment Amount </mat-label>\n                                        <input #num1 type=\"number\" value=\"{{init.first}}\" (input)=\"0\" matInput placeholder=\"Payment Amount\" [(ngModel)]=\"paymentamount\">\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        <form [formGroup]=\"checked.selectedRow\">\n                            <div class=\"form-row\">\n                                <table class=\"table table-bordered\">\n                                    <thead>\n                                        <tr>\n                                        <th scope=\"col\">Letter_refno</th>\n                                        <th scope=\"col\">Revision_no</th>\n                                        <th scope=\"col\">DevFinal(Rs)</th>\n                                        <th scope=\"col\">Outstanding_Amount(Rs)</th>\n                                        <th scope=\"col\">Due Amount(Rs)</th>\n                                        <th scope=\"col\">PayableorReceivable</th>\n                                        <th scope=\"col\">Remarks</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                        <td scope=\"row\">{{checked.selectedRow.value['Letter_refno']}}</td>\n                                        <td scope=\"row\">{{checked.selectedRow.value['Revision_no']}}</td>\n                                        <th scope=\"row\">{{checked.selectedRow.value['DevFinal']|currency:\"&#8377;\"}}</th>\n                                        <td>{{checked.selectedRow.value['Outstandings']|currency:\"&#8377;\"}}</td>\n                                        <td>{{checked.selectedRow.value['Outstandings']-num1.valueAsNumber|currency:\"&#8377;\"}} </td>\n                                        <td scope=\"row\">{{checked.selectedRow.value['PayableorReceivable']}}</td>\n                                        <td scope=\"row\"><input type=\"text\" formControlName=\"remarks\"></td>\n                                        </tr>\n                                    </tbody>\n                                </table> \n                            </div>\n                            <button class=\"pull-right\" mat-raised-button color=\"primary\" type=\"submit\">save changes & proceed</button>                                                   \n                        </form>\n                        \n    </div>\n</jw-modal> -->\n<br>\n<div style=\"margin-left:5%;margin-right:5%;\" *ngIf=\"showsplitcomp\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Split Payment Details</mat-card-title>\n        </mat-card-header>\n        <table class=\"table\">\n        <thead class=\"thead-light\">\n            <tr>\n            <th scope=\"col\">Sl.No</th>\n            <th scope=\"col\">Entity Name</th>\n            <th scope=\"col\">Letter_refno</th>\n            <th scope=\"col\">Revision No</th>\n            <th scope=\"col\">Previous Due</th>\n            <th scope=\"col\">Total Due</th>\n            </tr>\n        </thead>\n        <tbody *ngFor=\"let value of splitvalues;let z=index;\">\n            <tr>\n                <td>{{z+1}}</td>\n                <td>{{value.Entity_name}}</td>\n                <td>{{value.Letter_refno}}{{value.Due_Letter_refno}}</td>\n                <td>{{value.Revision_no}}{{value.Due_Revision_no}}</td>\n                <td>{{value.Pre_payorreceive|currency:\"&#8377;\"}}</td>\n                <td>{{value.Net_payorreceive|currency:\"&#8377;\"}}</td>\n            </tr>\n        </tbody>\n        </table>\n    </mat-card>\n</div>","<form [formGroup]=\"paymentDetails\">\r\n<div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Payment Type</mat-label>\r\n            <mat-select  [(ngModel)]=\"paymenttype\" formControlName=\"paytype\">\r\n                <mat-option *ngFor=\"let pay of paytype\" [value]=\"pay\">{{pay}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Payment Ref.No. </mat-label>\r\n            <input matInput formControlName=\"payrefno\" placeholder=\"Payment Ref.No.\" [(ngModel)]=\"paymentref\">\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Payment Date </mat-label>\r\n            <input matInput formControlName=\"paydate\" [matDatepicker]=\"picker\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Payment Amount </mat-label>\r\n            <input #num1 type=\"number\" formControlName=\"payamount\" value=\"{{init.first}}\" (input)=\"0\" matInput placeholder=\"Payment Amount\" [(ngModel)]=\"paymentamount\">\r\n        </mat-form-field>\r\n    </div>\r\n</div>\r\n\r\n\r\n    <div class=\"form-row\">\r\n    <table class=\"table table-bordered\">\r\n        <thead>\r\n            <tr>\r\n            <th scope=\"col\">Letter_refno</th>\r\n            <th scope=\"col\">Revision_no</th>\r\n            <th scope=\"col\">DevFinal(Rs)</th>\r\n            <th scope=\"col\">Outstanding_Amount(Rs)</th>\r\n            <th scope=\"col\">Due Amount(Rs)</th>\r\n            <th scope=\"col\">PayableorReceivable</th>\r\n            <th scope=\"col\">Remarks</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n            <td scope=\"row\">{{data.check[\"Letter_refno\"]}}</td>\r\n            <td scope=\"row\">{{data.check[\"Revision_no\"]}}</td>\r\n            <th scope=\"row\">{{data.check[\"DevFinal\"]}}</th>\r\n            <td>{{data.check[\"Outstandings\"]|currency:\"&#8377;\"}}</td>\r\n            <td>{{data.check[\"Outstandings\"]-num1.valueAsNumber|currency:\"&#8377;\"}} </td>\r\n            <td scope=\"row\">{{data.check[\"PayableorReceivable\"]}}</td>\r\n            <td scope=\"row\"><input matInput formControlName=\"remarks\" type=\"text\"></td>\r\n            </tr>\r\n        </tbody>\r\n    </table> \r\n    </div>\r\n    <button class=\"pull-right\" mat-raised-button (click)=\"onSaveChanges(paymentDetails.value)\"  color=\"primary\" type=\"submit\" cdkFocusInitial>save changes & proceed</button>                                                   \r\n</form>\r\n                        \r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { BillData, ViewPaymentsModel } from '../shared/generated_bill.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class PaymentDetailsService {\n\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n\n  constructor(private http:HttpClient) { }\n\n  selectedRow:FormGroup=new FormGroup({\n    'id':new FormControl(null),\n    'Letter_refno':new FormControl(null),\n    'Revision_no':new FormControl(null),\n    'DevFinal':new FormControl(null),\n    'Outstandings':new FormControl(null),\n    'PayableorReceivable':new FormControl(null),\n    'remarks':new FormControl(null)\n\n  })\n\n  selectedViewPayment:FormGroup=new FormGroup({\n    'id':new FormControl(null),\n    'Pay_type':new FormControl(null),\n    'Pay_refno':new FormControl(null),\n    'Pay_date':new FormControl(null),\n    'Pay_amount':new FormControl(null),\n    'Srldc_payamount':new FormControl(null),\n    'Remarks':new FormControl(null),\n    'reject_remarks':new FormControl(null)\n\n  })\n\n  fetchConfigDetails(payment:BillData1){\n   \n    return this.http.post('http://127.0.0.1:8000/file/fetchConfigured',{payment:payment,username:this.currentUser.userName}) \n  }\n\n  populateForm(row:BillData){\n    \n    this.selectedRow.patchValue(row);\n    \n  }\n\n  populateViewForm(row:ViewPaymentsModel){\n    \n    this.selectedViewPayment.patchValue(row);\n    \n    // console.log(\"selected check box\",this.selectedViewPayment);\n    \n  }\n  previousPayments(element)\n  {\n    return this.http.post('http://127.0.0.1:8000/file/previousPayments',element)\n  }\n  paymentDetails(paymenttype:string,paymentref:string,paymentdate:string,paymentamount:Number,remarks:string,status:String,username:string){\n\n    return this.http.post('http://127.0.0.1:8000/file/paymentDetails',{paymenttype,paymentref,paymentdate,paymentamount,remarks,status,username,bottomrow:this.selectedRow.value}) \n  }\n  viewPayments(viewData:FormData){\n    \n    return this.http.post('http://127.0.0.1:8000/file/viewpayments',{data:viewData,username:this.currentUser.userName})\n  }\n\n  splitPayments(billdata)\n  {\n    return this.http.post('http://127.0.0.1:8000/file/splitpayments',billdata);\n  }\n  approvePayment(id,paydate){\n    return this.http.post('http://127.0.0.1:8000/file/approvepayments',{id:id,date:paydate});\n  }\n\n  rejectPayment(id,remarks){\n    return this.http.post('http://127.0.0.1:8000/file/rejectpayments',{id:id,remarks:remarks});\n  }\n\n  Disbursements(disburseWeek:FormGroup)\n  {\n    return this.http.post('http://127.0.0.1:8000/file/disbursements',disburseWeek);\n  }\n}\n\nexport interface BillData1{\n  yearno:string,\n  weekno:string\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { PaymentDetailsService } from '../payment-details.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ViewPaymentsModel } from '../../shared/generated_bill.model';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ModalService } from 'src/app/_modal';\nimport { NotificationService } from 'src/app/registration/notification.service';\nimport { BigModalService } from 'src/app/_bigmodal';\nimport { DateListService } from 'src/app/configure/date-list.service';\n\n\n@Component({\n  selector: 'app-pending-payments',\n  templateUrl: './pending-payments.component.html',\n  styleUrls: ['./pending-payments.component.css']\n})\nexport class PendingPaymentsComponent implements OnInit {\n\n  years=['2017-18','2018-19','2019-20','2020-21']\n  weeknos=[1,2,3,4,5,6,7,8,9]\n  status=[\"Created\",\"Approved\",\"Rejected\"]\n  \n  listData: MatTableDataSource<ViewPaymentsModel>;\n  selection = new SelectionModel<ViewPaymentsModel>(false);\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  error=null;\n  displayedColumns=[\"select\",\"Pay Type\",\"Pay refno\",\"Paid_by\",\"Paid_for\",\"DevFinal\",\"Pay_date\",\"Pay_amount\",\"actions\"]\n  payorrecieve=[\"Payable\",\"Receivable\"]\n  selectedCheckbox:ViewPaymentsModel;\n  paymentButton:Boolean=true;\n  previousPayments=[];\n  remarks:string;\n  startDate:Date;\n  endDate:Date;\n  index:any;\n  constructor(private fb:FormBuilder,private vs:PaymentDetailsService,public checked1:PaymentDetailsService,private modalService: ModalService,\n    private notificationService:NotificationService,private modalService1:BigModalService,private date:DateListService) { }\n\n  viewpayments=this.fb.group({\n    'year':['2020-21',Validators.required],\n    'weekno':[null,Validators.required],\n    'weekStartDate':[null,Validators.required],\n    'weekEndDate':[null,Validators.required],\n    'payorreceive':[\"Payable\",Validators.required],\n    'status':[\"Created\",Validators.required]\n  })\n  \n\n  ngOnInit(): void {\n  }\n\n  onViewPayments(){\n    this.vs.viewPayments(this.viewpayments.value).subscribe(viewres=>{\n      this.listData = new MatTableDataSource(viewres[0]['viewpayments']);\n     \n      this.listData.sort=this.sort;\n      this.listData.paginator=this.paginator;\n  \n    });\n  }\n  onSelect(element){\n    this.selectedCheckbox=element;\n    console.log(this.selectedCheckbox);\n  }\n  visibility(event){\n    console.log(\"checking happened\",event['checked']);\n    this.paymentButton=!event['checked'];\n  }\n\n  weekChange(event)\n  {\n    this.startDate=this.date.date_list[0][0];\n    this.endDate=this.date.date_list[0][1];\n  }\n  onView(element,index){\n      this.index=index;\n      this.checked1.populateViewForm(element);\n      this.previousPayments=[];\n      this.vs.previousPayments(element).subscribe(res=>\n        {\n          for(var key in res)\n          {\n            this.previousPayments.push(res[key]);\n          }\n        })\n\n    }\n\n    openModal(id:string) {\n    this.modalService.open(id);\n    }\n\n    openModal1(id:string) {\n    this.modalService1.open(id);\n    }\n    \n    \n    closeModal(id:string) {\n    this.modalService.close(id);\n    }\n\n    closeModal1(id:string) {\n    this.modalService1.close(id);\n    }\n\n    onSaveChanges()\n    {\n      console.log(this.checked1.selectedViewPayment.value);\n      \n        this.listData.filteredData[this.index]['Pay_date']=this.checked1.selectedViewPayment.value['Pay_date']\n      \n      \n      // this.checked1.selectedViewPayment.patchValue({Pay_date:this.checked1.selectedViewPayment.value['Pay_date']})\n      this.modalService.close('view-details');\n    }\n\n    onApprove(){\n      // \n      if(this.selectedCheckbox.id)\n      { \n      this.checked1.approvePayment(this.selectedCheckbox.id,this.listData.filteredData[this.index]['Pay_date']).subscribe(res=>{\n        this.notificationService.success('! Approved successfully');\n        this.onViewPayments();\n        this.closeModal1('approve-modal');\n      },error=>{\n        this.notificationService.warn(\"First Please View the Payment Details\");\n        this.error.next(error.message);\n    })\n    }\n    else{\n      this.notificationService.warn(\"Not Allowed to Save!\")\n    }\n    }\n    onReject(){\n      if(this.selectedCheckbox.id)\n      {\n      this.checked1.rejectPayment(this.selectedCheckbox.id,this.remarks).subscribe(res=>{\n        this.notificationService.warn('! Rejected successfully');\n        this.onViewPayments();\n        this.closeModal1('reject-modal');\n      },error=>{\n        this.error.next(error.message);\n    })\n    }\n    else{\n      this.notificationService.warn(\"You are not allowed !!\")\n    }\n  } \n  \n}\n","<div>\r\n    <app-header></app-header>\r\n</div>\r\n<br>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-6 alert alert-success\" style=\"margin-left:90px;\">\r\n        <strong> View Payments </strong>\r\n    </div>\r\n</div>\r\n<!-- Side Row-->\r\n<div class=\"container-fluid\" >\r\n    <div class=\"row\">\r\n    <div class=\"col-sm-3 border-setup-first\">\r\n        <div class=\"row \">\r\n            <div class=\"col\">\r\n                <div class=\"alert alert-info\" role=\"alert\">\r\n                    <strong> Please Select</strong>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <form [formGroup]=\"viewpayments\" (ngSubmit)=\"onViewPayments()\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field appearance=\"outline\" >\r\n                    <mat-label>Year</mat-label>\r\n                    <mat-select formControlName=\"year\" placeholder=\"year\">\r\n                    <mat-option \r\n                    *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-sm-2\"></div>\r\n            <div class=\"col-sm-6\">\r\n                <mat-form-field appearance=\"outline\" >\r\n                    <mat-label>WeekNo</mat-label>\r\n                    <mat-select formControlName=\"weekno\" (selectionChange)=\"weekChange($event)\" placeholder=\"weekno\">\r\n                    <mat-option \r\n                    *ngFor=\"let weekno of weeknos\" [value]=\"weekno\">{{weekno}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>  \r\n            </div>   \r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Start Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker4\"  formControlName=\"weekStartDate\" [(ngModel)]=\"startDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker4></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-sm-2\"></div>\r\n            <div class=\"col-sm-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>End Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker5\"  formControlName=\"weekEndDate\" [(ngModel)]=\"endDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker5></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field appearance=\"outline\" >\r\n                    <mat-label>Status</mat-label>\r\n                    <mat-select formControlName=\"status\">\r\n                    <mat-option \r\n                    *ngFor=\"let stat of status\" [value]=\"stat\">{{stat}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>  \r\n            </div>\r\n            <div class=\"col-sm-2\"></div>\r\n            <div class=\"col-sm-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Pay or Receive</mat-label>\r\n                    <mat-select formControlName=\"payorreceive\" >\r\n                    <mat-option \r\n                            *ngFor=\"let pr of payorrecieve\" [value]=\"pr\">{{pr}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6\">\r\n                <button mat-raised-button color=\"primary\" type=\"submit\">show</button>\r\n            </div>\r\n        </div>\r\n        </form>\r\n    </div>\r\n    <!-- Second Column table column -->\r\n    <div class=\"col-sm-8 border-setup-second\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n               <div>\r\n                <mat-table class=\"mat-elevation-z8\" [dataSource]=\"listData\" matSort>\r\n                    \r\n                    <!-- First Column Entity Name -->\r\n                    <ng-container matColumnDef=\"select\">\r\n                    <mat-header-cell *matHeaderCellDef>\r\n\r\n                    </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">\r\n                    <mat-checkbox (click)=\"onSelect(element)\"\r\n                                    (change)=\"$event ? selection.toggle(element) : null;visibility($event)\"\r\n                                    [checked]=\"selection.isSelected(element)\"\r\n                                    [disabled]=\"viewpayments.value['status']!='Created'\"\r\n                                    [ngClass]=\"{'crossicon':viewpayments.value['status']!='Created'}\">\r\n                    </mat-checkbox>\r\n                    </mat-cell>\r\n                    </ng-container> \r\n                    \r\n                    <ng-container matColumnDef=\"Pay Type\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Payment Type</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">{{element.Pay_type}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Pay refno\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Payment Refno</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">{{element.Pay_refno}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Pay_date\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Pay Date</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">{{element.Pay_date|date: 'dd/MM/yyyy'}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Paid_by\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Paid By</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">{{element.Paid_by}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Paid_for\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Paid For</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">{{element.Paid_for}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Pay_amount\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Paid Amount</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">{{element.Pay_amount|currency:\"&#8377;\"}}</mat-cell>\r\n                    </ng-container>\r\n            <!-- Second Column DevAddtional -->\r\n                    <ng-container matColumnDef=\"DevFinal\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>DevFinal</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element\">{{element.Dev_final|currency:\"&#8377;\"}}</mat-cell>\r\n                    </ng-container>\r\n                    \r\n                    \r\n\r\n                    <ng-container matColumnDef=\"actions\">\r\n                    <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let element;let i = index\">\r\n                    <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"onView(element,i);openModal('view-details')\">View/Edit</button>\r\n                    </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <!--pop up model -->\r\n                    <jw-modal id=\"view-details\">\r\n                        <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('view-details');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\r\n                        <br><hr>\r\n                    <div style=\"height:520px;\">\r\n                        <form [formGroup]=\"checked1.selectedViewPayment\" (ngSubmit)=\"onSaveChanges()\">\r\n                            <div class=\"form-row\">\r\n                                <table class=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th scope=\"col\">Payment Type</th>\r\n                                        <th scope=\"col\">Pay Reference No</th>\r\n                                        <th scope=\"col\">Payment Date</th>\r\n                                        <th scope=\"col\">Payment Amount</th>\r\n                                        <th scope=\"col\">Remarks</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                        <td scope=\"row\">{{checked1.selectedViewPayment.value['Pay_type']}}</td>\r\n                                        <td scope=\"row\">{{checked1.selectedViewPayment.value['Pay_refno']}}</td>\r\n                                        <td>\r\n                                            <input type=\"date\" formControlName=\"Pay_date\" [disabled]=\"viewpayments.value['status']!='Created'\">                 <!--\r\n                                            <mat-form-field appearance=\"outline\">\r\n                                                <input matInput [matDatepicker]=\"picker\" formControlName=\"Pay_date\" [disabled]=\"viewpayments.value['status']!='Created'\">\r\n                                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                                <mat-datepicker #picker></mat-datepicker>\r\n                                            </mat-form-field> -->\r\n                                        </td>\r\n                                        <td scope=\"row\" *ngIf=\"viewpayments.value['payorreceive']=='Receivable'\">{{checked1.selectedViewPayment.value['Pay_amount']|currency:\"&#8377;\"}}</td>\r\n                                        <td scope=\"row\" *ngIf=\"viewpayments.value['payorreceive']=='Payable'\">{{checked1.selectedViewPayment.value['Pay_amount']|currency:\"&#8377;\"}}</td>\r\n                                        <td scope=\"row\">{{checked1.selectedViewPayment.value['Remarks']}}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <button class=\"pull-right\" *ngIf=\"viewpayments.value['status'] =='Created'\" mat-raised-button color=\"primary\"  type=\"submit\">save changes & proceed</button> \r\n                            </div>\r\n                        </form>\r\n                        <div class=\"col-sm-6 alert alert-danger\" role=\"alert\">Previous Payment Details </div>\r\n                            <div class=\"form-row\">\r\n                                <table class=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Pay Reference No</th>\r\n                                            <th scope=\"col\">Payment Date</th>\r\n                                            <th scope=\"col\">Payment Amount</th>\r\n                                            <th scope=\"col\">Deviation Final</th>\r\n                                            <th scope=\"col\">Due Amount</th>\r\n                                            <th scope=\"col\">Application Status</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let prev of previousPayments;\">\r\n                                            <td>{{prev['Pay_type']}}</td>\r\n                                            <td>{{prev['Pay_refno']}}</td>\r\n                                            <td>{{prev['Pay_date']}}</td>\r\n                                            <td>{{prev['Pay_amount']|currency:\"&#8377;\"}}</td>\r\n                                            <td>{{prev['Dev_final']|currency:\"&#8377;\"}}</td>\r\n                                            <td>{{prev['Due_amount']|currency:\"&#8377;\"}}</td>\r\n                                            <td [ngClass]=\"{'red':prev['Status']=='Rejected'}\">{{prev['Status']}}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table> \r\n                            </div>\r\n                            \r\n                            \r\n                            <div class=\"col-sm-8 alert alert-danger\" *ngIf=\"viewpayments.value['status']=='Rejected'\">Rejected because of  :{{checked1.selectedViewPayment.value['reject_remarks']}}</div> \r\n                            </div> \r\n                 \r\n                    </jw-modal>\r\n\r\n                    \r\n\r\n                    <!-- close model-->\r\n                    <!-- Initial Loading -->\r\n                    <ng-container matColumnDef=\"loading\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n                        Loading data...\r\n                    </mat-footer-cell>\r\n                    </ng-container>\r\n                    <!-- No data in Database-->\r\n                    <ng-container matColumnDef=\"nodata\">\r\n                    <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n                        No data...\r\n                    </mat-footer-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\" [ngClass]=\"{headerColor:'true'}\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                    <mat-footer-row *matFooterRowDef=\"['loading']\"  [ngClass]=\"{'hide':listData!=null}\"></mat-footer-row>\r\n                    <mat-footer-row *matFooterRowDef=\"['nodata']\" [ngClass]=\"{'hide':!(listData!=null && listData.data.length == 0)}\"></mat-footer-row>\r\n                </mat-table>\r\n                </div>\r\n            </div>\r\n        </div><br>\r\n        <!-- || viewpayments.value['status']!='Rejected'\"  [disabled]=\"paymentButton\" -->\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <button class=\"pull-right\" *ngIf=\"viewpayments.value['status']=='Created'\"  mat-raised-button color=\"warn\" [ngClass]=\"{'hide':!(listData!=null)}\" (click)=\"openModal1('reject-modal')\">Reject</button>\r\n                <button class=\"pull-right\"  *ngIf=\"viewpayments.value['status']=='Created'\" mat-raised-button color=\"primary\" [ngClass]=\"{'hide':!(listData!=null)}\" (click)=\"openModal1('approve-modal')\">Approve</button>\r\n            </div>\r\n        </div> \r\n        <jp-modal id=\"approve-modal\" style=\"width:250px;\">\r\n            <h3>Are you sure want to Approve the Payment</h3><hr>\r\n            <hr>\r\n            <button mat-raised-button color=\"primary\" (click)=\"onApprove()\">Yes</button>|\r\n            <button mat-raised-button color=\"warn\" (click)=\"closeModal1('approve-modal');\">No</button>     \r\n        </jp-modal>\r\n        <jp-modal id=\"reject-modal\" style=\"width:250px;\">\r\n            <h3>Are you sure want to Reject the Payment</h3><hr>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                  <label>Remarks</label>\r\n                </div>\r\n                <div class=\"form-group col-md-9\">\r\n                  <textarea type=\"text\" class=\"form-control\" [(ngModel)]=\"remarks\"></textarea>  \r\n                </div>\r\n            </div>\r\n            <button mat-raised-button color=\"primary\" (click)=\"onReject()\">Yes</button>|\r\n            <button mat-raised-button color=\"warn\" (click)=\"closeModal1('reject-modal');\">No</button>     \r\n        </jp-modal>   \r\n    </div>\r\n\r\n        </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, Inject, ElementRef } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { DateListService } from 'src/app/configure/date-list.service';\nimport { PaymentDetailsService } from '../payment-details.service';\nimport { NotificationService } from 'src/app/registration/notification.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { DisburseData } from 'src/app/shared/generated_bill.model';\nimport { from } from 'rxjs';\nimport { MatDialog,MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { DOCUMENT } from '@angular/common'; \nimport * as XLSX from 'xlsx'; \nimport { ModalService } from '../../_modal';\n\n@Component({\n  selector: 'app-weekly-disbursements',\n  templateUrl: './weekly-disbursements.component.html',\n  styleUrls: ['./weekly-disbursements.component.css']\n})\nexport class WeeklyDisbursementsComponent implements OnInit {\n\n  years=['2017-18','2018-19','2019-20','2020-21']\n  weeknos=[1,2,3,4,5,6,7,8,9]\n  status=[\"Notified\",\"Partial\",\"Complete\"]\n  paytype=[\"RTGS\",\"DD\",\"NEFT\",\"Others\"]\n  payorrecieve=[\"Payable\",\"Receivable\"]\n  startDate:Date;\n  endDate:Date;\n  listData: MatTableDataSource<DisburseData>;\n  listData1: MatTableDataSource<DisburseData>;\n  prevdueinpool:number;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort1: MatSort;\n  @ViewChild(MatPaginator) paginator1: MatPaginator;\n  displayedColumns: string[] = ['Week_No','Entity','Deviation_Final','Disbursement_Date','Payment_date','Payment_amount','Outstandings'];\n\n  displayedColumns1: string[] = ['Week_No','Entity','BillDate','Deviation_Final'];\n\n  showFooter='off';\n  istableexists:boolean=false;\n  constructor(private fb:FormBuilder,private date:DateListService,private disburse:PaymentDetailsService,private notification:NotificationService,public dialog: MatDialog) { }\n\n  Disbursements=this.fb.group({\n    'year':['2020-21',Validators.required],\n    'weekno':[null,Validators.required],\n    'weekStartDate':[null,Validators.required],\n    'weekEndDate':[null,Validators.required],\n  })\n  \n  ngOnInit(): void {\n  }\n\n  weekChange(event)\n  {\n    this.startDate=this.date.date_list[0][0];\n    this.endDate=this.date.date_list[0][1];\n  }\n\n  onSubmit()\n  {\n    if(this.Disbursements.valid)\n    {\n      this.disburse.Disbursements(this.Disbursements.value).subscribe(res=>\n        {\n        \n\n          this.listData = new MatTableDataSource(res[0]['disburse_pay']);\n          this.listData.sort=this.sort;\n          this.listData.paginator=this.paginator;\n          this.showFooter='on';\n\n          this.listData1 = new MatTableDataSource(res[1]['disburse_receive']);\n          this.listData1.sort=this.sort1;\n          this.listData1.paginator=this.paginator1;\n          \n          for(var val in res[2]['total_inpool'])\n          {\n            this.prevdueinpool=res[2]['total_inpool'][val]['dueinpool']\n            \n          }\n\n          this.istableexists=true;\n          \n        });\n    }\n    else{\n      this.notification.warn(\"Please Choose Required Fields\");\n    }\n  }\n  doDisbursement()\n  {\n    var to_pool=this.listData['filteredData'].reduce((accm,curr) =>accm + +curr.DevFinal - +curr.Outstandings,0);\n    var from_pool=this.listData1['filteredData'].reduce((accum, curr) => accum + +curr.DevFinal,0);\n\n    \n    if(to_pool > from_pool)\n    {\n      \n      this.openDialog();\n      \n    }\n    else\n    {\n      alert(\"Do the pro rata basis yes/no\")\n    }\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogContentExampleDialog,{\n     \n      height:'500px',\n      width:'70%',\n      data: {disburse:this.Disbursements.value,paiddetails:this.listData['filteredData'],receivedetails:this.listData1['filteredData'],\n      prevdueinpool:this.prevdueinpool}\n    });\n    \n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n    \n  public calculateDevTotal() {\n    return this.listData['filteredData'].reduce((accum, curr) => accum + +curr.DevFinal,0);\n    \n  }\n  public calculateTotPaid() {\n    return this.listData['filteredData'].reduce((accm,curr) => accm + +curr.DevFinal - +curr.Outstandings,0);\n    \n  }\n  public calculateOutTotal() {\n    return this.listData['filteredData'].reduce((accum, curr) => accum + +curr.Outstandings,0);\n    \n  }\n  public calculateDevTotal1() {\n    return this.listData1['filteredData'].reduce((accum, curr) => accum + +curr.DevFinal,0);\n    \n  }\n}\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'disburse-withoutprorata.html',\n})\nexport class DialogContentExampleDialog implements OnInit {\n  listData:any=[];\n  totaldev:Number;\n  totaldisbursed:number=0;\n  @ViewChild('distable', { static: false }) distable: ElementRef;\n  constructor(\n    public dialogRef: MatDialogRef<DialogContentExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private http:HttpClient,\n    private notification:NotificationService,\n    public dialog:MatDialog) {}\n  \n  total_paidamount=this.data.paiddetails.reduce((accum, curr) => accum + +curr.DevFinal,0)\n  total_tobereceived=this.data.receivedetails.reduce((accum, curr) => accum + +curr.DevFinal,0);\n  fileName= 'ExcelSheet.xlsx'; \n  ngOnInit(){\n    \n  }\n  public calculateDevTotal() {\n      // return this.data.paiddetails.reduce((accum, curr) => accum + +curr.DevFinal,0);\n      return this.total_paidamount;\n    }\n  public calculateAmountPaid() {\n    return this.data.paiddetails.reduce((accm,curr) => accm + +curr.DevFinal - +curr.Outstandings,0);\n\n  }\n  public calculateOutTotal() {\n    return this.data.paiddetails.reduce((accum, curr) => accum + +curr.Outstandings,0);\n    \n  }\n  public calculateDevTotal1() {\n    // return this.data.receivedetails.reduce((accum, curr) => accum + +curr.DevFinal,0);\n    return this.total_tobereceived;\n    \n  }\n  public calculateDisburseAmount(index:string) {\n    var paid_amount=this.data.paiddetails.reduce((accm,curr) => accm + +curr.DevFinal - +curr.Outstandings,0);\n    var disburse=this.data.receivedetails.reduce((accum, curr) => accum + +curr.DevFinal,0);\n    if(paid_amount>disburse){\n      \n      return this.data.receivedetails[index]['DevFinal'];\n      \n    }\n    else{\n  \n    return (this.data.receivedetails[index]['DevFinal']/this.data.receivedetails.reduce((accum, curr) => accum + +curr.DevFinal,0))*this.data.paiddetails.reduce((accm,curr) => +curr.DevFinal - +curr.Outstandings,0);\n  \n    }\n  }\n  public calculateDueToPool(index:string) {\n    var paid_amount=this.data.paiddetails.reduce((accm,curr) =>accm + +curr.DevFinal - +curr.Outstandings,0);\n    var disburse=this.data.receivedetails.reduce((accum, curr) => accum + +curr.DevFinal,0);\n    if(paid_amount>disburse){\n      \n      return 0;\n    }\n    else{\n      var entity_disburse=this.data.receivedetails[index]['DevFinal']/this.data.receivedetails.reduce((accum, curr) => accum + +curr.DevFinal,0)*this.data.paiddetails.reduce((accm,curr) => accm+ +curr.DevFinal - +curr.Outstandings,0)\n      return this.data.receivedetails[index]['DevFinal']-entity_disburse;\n    }\n\n  }\n  public calculateTotDisbursementAmount() {\n    var paid_amount=this.data.paiddetails.reduce((accm,curr) =>accm + +curr.DevFinal - +curr.Outstandings,0);\n    var disburse=this.data.receivedetails.reduce((accum, curr) => accum + +curr.DevFinal,0);\n\n    if(paid_amount>disburse){\n      \n      return disburse;\n      \n    }\n    else {\n      for(const key in this.data.receivedetails)\n      {\n       var entity_amt= this.data.receivedetails[key]['DevFinal']\n       var cumulative_amt=(entity_amt/disburse)*paid_amount\n       this.totaldisbursed=this.totaldisbursed+cumulative_amt;\n      }\n      return this.totaldisbursed;\n    }\n  }\n  getCurrentDate(){\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n\n    return dd +'-'+mm+'-'+yyyy;\n  }\n  ProceedDisbursement() {\n    this.http.post('http://127.0.0.1:8000/file/finaldisbursements',this.data).subscribe(res=>{\n      this.notification.success(\"Successfully Done the Disbursement!\");\n      this.dialogRef.close();\n    })\n  }\n\n  CreateExcel() {\n    const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(this.distable.nativeElement);\n  \n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    XLSX.writeFile(wb, this.fileName);\n  }\n\n  openConfirmationDialog()\n  {\n    const dialogRef1=this.dialog.open(ConfirmationDialog,{\n      height:'150px',\n      data:this.data\n    });\n\n    dialogRef1.afterClosed().subscribe(result => {\n      if(result =='closed')\n      {\n        console.log(\"No action\");\n        \n      }\n      else{\n        this.notification.success(\"Successfully Done the Disbursement!\");\n        this.dialogRef.close();\n      }\n      \n    });\n  }\n\n  \n\n}\n\n@Component({\n  template:`\n  <h1 mat-dialog-title>Are you sure want to Proceed</h1>\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" style=\"margin-left:5px;\" (click)=\"ProceedDisbursement()\">Yes</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"'closed'\" style=\"margin-left:5px;\">Close</button>\n  </div>\n  `\n})\nexport class ConfirmationDialog {\n\n  constructor(private http:HttpClient,@Inject(MAT_DIALOG_DATA) public data: any,\n  public dialogRef: MatDialogRef<ConfirmationDialog>){}\n  ProceedDisbursement() {\n    \n    this.http.post('http://127.0.0.1:8000/file/finaldisbursements',this.data).subscribe(res=>{\n      \n      this.dialogRef.close();\n    })\n  }\n}","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-sm-6 alert alert-success\" style=\"margin-left:90px;\">\n        <p>Weekly Disbursements</p>\n    </div>\n</div>\n\n<div class=\"container-fluid\" >\n    <div class=\"row\">\n    <div class=\"col-sm-3 border-setup-first\">\n        <div class=\"row \">\n                <div class=\"col\">\n                    <div class=\"alert alert-info\" role=\"alert\">\n                        <strong> Please Select</strong>\n                    </div>\n                </div>\n            </div>\n        <form [formGroup]=\"Disbursements\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <mat-form-field appearance=\"outline\" >\n                    <mat-label>Year</mat-label>\n                    <mat-select formControlName=\"year\" placeholder=\"year\">\n                    <mat-option \n                    *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-6\">\n                <mat-form-field appearance=\"outline\" >\n                    <mat-label>WeekNo</mat-label>\n                    <mat-select formControlName=\"weekno\" (selectionChange)=\"weekChange($event)\" placeholder=\"weekno\">\n                    <mat-option \n                    *ngFor=\"let weekno of weeknos\" [value]=\"weekno\">{{weekno}}</mat-option>\n                    </mat-select>\n                </mat-form-field>  \n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Start Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker4\"  formControlName=\"weekStartDate\" [(ngModel)]=\"startDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker4></mat-datepicker>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-6\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>End Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker5\"  formControlName=\"weekEndDate\" [(ngModel)]=\"endDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker5></mat-datepicker>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <button mat-raised-button color=\"primary\" type=\"submit\">show</button>\n            </div>\n        </div>\n        </form>\n    </div>\n    <!--Second Column ---->\n    \n    <div class=\"col-sm-8 border-setup-second\" *ngIf=\"istableexists\">\n        <div class=\"alert alert-warning\">Details of Amount Paid to UI Account</div>\n        <div class=\"row\">\n            <div class=\"col\">\n               <div [ngClass]=\"{'hide':showFooter=='off'}\">\n                <mat-table class=\"mat-elevation-z8\" [dataSource]=\"listData\" matSort>\n                    \n                    \n                    <ng-container matColumnDef=\"Week_No\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Week No</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">{{element.Week_no}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef></mat-footer-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Entity\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Constituent Name</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">{{element.Entity}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef><b>Total:</b></mat-footer-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Deviation_Final\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Deviation Final</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">{{element.DevFinal|currency:\"&#8377;\"}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef><b>{{calculateDevTotal()|currency:\"&#8377;\"}}</b></mat-footer-cell>\n                    </ng-container>\n                    <!-- Second Column DevAddtional -->\n                    <ng-container matColumnDef=\"Disbursement_Date\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Bill Date</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">{{element.Disbursement_date|date: 'dd-MM-yyyy'}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef></mat-footer-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Payment_date\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Payment Due Date</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">{{element.Payment_date|date: 'dd-MM-yyyy'}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef></mat-footer-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Payment_amount\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Paid Amount</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">{{element.DevFinal-element.Outstandings|currency:\"&#8377;\"}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef><b>{{calculateTotPaid()|currency:\"&#8377;\"}}</b></mat-footer-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Outstandings\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Due to be paid to pool</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\">{{element.Outstandings|currency:\"&#8377;\"}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef><b>{{ calculateOutTotal()|currency:\"&#8377;\"}}</b></mat-footer-cell>\n                    </ng-container>\n\n                    \n            \n                    <ng-container matColumnDef=\"loading\">\n                        <mat-footer-cell *matFooterCellDef colspan=\"6\">\n                            Loading data...\n                        </mat-footer-cell>\n                    </ng-container>\n                    \n                    <ng-container matColumnDef=\"nodata\">\n                        <mat-footer-cell *matFooterCellDef colspan=\"6\">\n                            No data...\n                        </mat-footer-cell>\n                    </ng-container>\n                    \n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\" [ngClass]=\"{headerColor:'true'}\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                    <mat-footer-row  *matFooterRowDef=\"['Week_No','Entity','Deviation_Final','Disbursement_Date','Payment_date','Payment_amount','Outstandings']\"></mat-footer-row>\n                    \n                    <mat-footer-row *matFooterRowDef=\"['loading']\"  [ngClass]=\"{'hide':listData!=null}\"></mat-footer-row>\n                    <mat-footer-row *matFooterRowDef=\"['nodata']\" [ngClass]=\"{'hide':!(listData!=null && listData.data.length == 0)}\"></mat-footer-row> \n                     \n                </mat-table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!----------- Second Receivable Column ------->\n    \n    \n    <div class=\"col-sm-8 border-setup-second\" *ngIf=\"istableexists\">\n    <br>\n    <div class=\"alert alert-warning\">Details of Amount To be Paid From UI Account</div>\n        <div class=\"row\">\n            <div class=\"col\">\n               <div [ngClass]=\"{'hide':showFooter=='off'}\">\n                <mat-table class=\"mat-elevation-z8\" [dataSource]=\"listData1\" matSort>\n                    \n                    \n                    <ng-container matColumnDef=\"Week_No\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Week No</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element1\">{{element1.Week_no}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef></mat-footer-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Entity\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Constituent Name</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element1\">{{element1.Entity}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef><b>Total:</b></mat-footer-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"BillDate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Bill Date</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element1\">{{element1.Disbursement_date}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef></mat-footer-cell>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"Deviation_Final\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Deviation Final</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element1\">{{element1.DevFinal|currency:\"&#8377;\"}}</mat-cell>\n                        <mat-footer-cell *matFooterCellDef><b>{{calculateDevTotal1()|currency:\"&#8377;\"}}</b></mat-footer-cell>\n                    </ng-container>\n            \n                    <ng-container matColumnDef=\"loading\">\n                        <mat-footer-cell *matFooterCellDef colspan=\"6\">\n                            Loading data...\n                        </mat-footer-cell>\n                    </ng-container>\n                    \n                    <ng-container matColumnDef=\"nodata\">\n                        <mat-footer-cell *matFooterCellDef colspan=\"6\">\n                            No data...\n                        </mat-footer-cell>\n                    </ng-container>\n                    \n                    <mat-header-row *matHeaderRowDef=\"displayedColumns1\" [ngClass]=\"{headerColor:'true'}\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns1;\"></mat-row>\n                    <mat-footer-row  *matFooterRowDef=\"['Week_No','Entity','Deviation_Final']\"></mat-footer-row>\n                    \n                    <mat-footer-row *matFooterRowDef=\"['loading']\"  [ngClass]=\"{'hide':listData1!=null}\"></mat-footer-row>\n                    <mat-footer-row *matFooterRowDef=\"['nodata']\" [ngClass]=\"{'hide':!(listData1!=null && listData1.data.length == 0)}\"></mat-footer-row> \n                     \n                </mat-table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-8 border-setup-second\" *ngIf=\"istableexists\">\n        <br>\n        <button mat-raised-button color=\"primary\" class=\"pull-right\" type=\"button\" (click)=\"doDisbursement()\">Do Disbursement</button>\n    </div>\n    \n    </div>\n</div>","<div class=\"alert alert-info\" role=\"alert\" style=\"text-align:center;\">\r\n    Receipt and disbursement details of Dev charges for week  {{data.disburse['weekno']}} ({{data.disburse['weekStartDate']|date:'dd.MM.yy'}}-{{data.disburse['weekEndDate']|date:'dd.MM.yy'}})\r\n</div>\r\n<!----------\r\n<div class=\"row\">\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n            Details of Payments to Deviation pool\r\n        </div>\r\n        <table class=\"table table-striped table-dark\" #paytable>\r\n        <thead class=\"thead-dark\">\r\n            <tr>\r\n                <h4 style=\"display:none;padding-left:200px;\">Power System Operation and Corporation </h4>\r\n            </tr>\r\n            <tr>\r\n                <h4 style=\"display:none;padding-left:100px;\">Southern Regional Load Despatch Center 29,Race Course Road Bangalore-560099</h4>\r\n            </tr><br>\r\n            <tr>\r\n            <th scope=\"col\"><b>Sl.No</b></th>\r\n            <th scope=\"col\">Week No</th>\r\n            <th scope=\"col\">Constituent Name</th>\r\n            <th scope=\"col\">Deviation Final</th>\r\n            <th scope=\"col\">Pay Due Date</th>\r\n            <th scope=\"col\">Amount Paid</th>\r\n            <th scope=\"col\">Due to Pool</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let val of data.paiddetails;let z=index;\">\r\n                <th scope=\"row\">{{z+1}}</th>\r\n                <td>{{val['Week_no']}}</td>\r\n                <td>{{val['Entity']}}</td>\r\n                <td>{{val['DevFinal']}}</td>\r\n                <td>{{val['Payment_date']}}</td>\r\n                <td>{{val['DevFinal']-val['Outstandings']}}</td>\r\n                <td>{{val['Outstandings']}}</td>\r\n            </tr>\r\n        </tbody>\r\n        <tfoot>\r\n        <tr>\r\n            <th></th>\r\n            <td></td>\r\n            <td><b>Total</b></td>\r\n            <td><b>{{calculateDevTotal()}}</b></td>\r\n            <td></td>\r\n            <td><b>{{calculateAmountPaid()}}</b></td>\r\n            <td><b>{{calculateOutTotal()}}</b></td>\r\n        </tr>\r\n        </tfoot>\r\n        </table>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n            Details of disbursements to be  made from Deviation pool\r\n        </div>\r\n        <table class=\"table\" id=\"receivetable\">\r\n            \r\n            <thead class=\"thead-dark\">\r\n                <tr>\r\n                <th scope=\"col\"><b>Constituent</b></th>\r\n                <th scope=\"col\" style=\"word-break:break-all;\">Dev Amount disbursible as per SRPC </th>\r\n                <th scope=\"col\" style=\"word-break:break-all;\">Dev Amonut already Disbursed</th>\r\n                <th scope=\"col\" style=\"word-break:break-all;\">Dev Amount to be disbursed </th>\r\n                <th scope=\"col\">Date of  disbursement </th>\r\n                <th scope=\"col\">Due to be disbursed from pool</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let val of data.receivedetails;let z=index;\">\r\n                <tr>\r\n                    <td >{{val['Entity']}}</td>\r\n                    <td>{{val['DevFinal']}}</td>\r\n                    <td>0</td>\r\n                    <td>{{calculateDisburseAmount(z)}}</td>\r\n                    <td>{{getCurrentDate()}}</td>\r\n                    <td>{{calculateDueToPool(z)}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n            <tr>\r\n                <td><b>Total</b></td>\r\n                <td><b>{{calculateDevTotal1()}}</b></td>\r\n                <td></td>\r\n                <td>{{calculateTotDisbursementAmount()}}</td>\r\n                <td></td>\r\n                <td></td>\r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n    </div>\r\n</div>\r\ngdhjfdgff-------------------->\r\n   \r\n    \r\n\r\n<!----- NEw Table ------>\r\n<div class=\"row\">\r\n    <div class=\"col\">\r\n        \r\n        <table class=\"table table-striped table-dark\" #distable>\r\n        <thead>\r\n        <tr>\r\n            <td  colspan=\"8\" style=\"text-align:center;font-family:verdana\" class=\"alert alert-success\" role=\"alert\"> Details of Payments to Deviation Pool </td>\r\n        </tr><br>\r\n        <tr>\r\n            <th><b>Sl.No</b></th>\r\n            <th>Week No</th>\r\n            <th>Constituent Name</th>\r\n            <th>Deviation Final</th>\r\n            <th>Pay Due Date</th>\r\n            <th>Amount Paid</th>\r\n            <th>Due to Pool</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let val of data.paiddetails;let z=index;\">\r\n                <td>{{z+1}}</td>\r\n                <td>{{val['Week_no']}}</td>\r\n                <td>{{val['Entity']}}</td>\r\n                <td>{{val['DevFinal']}}</td>\r\n                <td>{{val['Payment_date']}}</td>\r\n                <td>{{val['DevFinal']-val['Outstandings']}}</td>\r\n                <td>{{val['Outstandings']}}</td>\r\n        </tr>\r\n        </tbody>\r\n        \r\n        <tr>\r\n            <td></td>\r\n            <td></td>\r\n            <td><b>Total</b></td>\r\n            <td><b>{{calculateDevTotal()}}</b></td>\r\n            <td></td>\r\n            <td><b>{{calculateAmountPaid()}}</b></td>\r\n            <td><b>{{calculateOutTotal()}}</b></td>\r\n        </tr>\r\n\r\n        <br><br>\r\n        <thead>\r\n        <tr>\r\n            <td  colspan=\"8\" class=\"alert alert-success\" style=\"text-align:center;font-family:verdana\" role=\"alert\"> Details of Payments From Deviation Pool </td>\r\n        </tr><br>\r\n        <tr>\r\n            <th><b>Sl.No</b></th>\r\n            <th><b>Constituent</b></th>\r\n            <th style=\"word-wrap:break-word;\">Dev Amount disbursible as per SRPC </th>\r\n            <th style=\"word-wrap:break-word;\">Dev Amonut already Disbursed</th>\r\n            <th style=\"word-wrap:break-word;\">Dev Amount to be disbursed </th>\r\n            <th>Date of  disbursement </th>\r\n            <th>Due to be disbursed from pool</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let val of data.receivedetails;let z=index;\">\r\n               \r\n            <td >{{z+1}}</td>\r\n            <td >{{val['Entity']}}</td>\r\n            <td>{{val['DevFinal']}}</td>\r\n            <td>0</td>\r\n            <td>{{calculateDisburseAmount(z)}}</td>\r\n            <td>{{getCurrentDate()}}</td>\r\n            <td>{{calculateDueToPool(z)}}</td>\r\n        </tr>\r\n        </tbody>\r\n        <tr>\r\n            <td></td>\r\n            <td><b>Total</b></td>\r\n            <td><b>{{calculateDevTotal1()}}</b></td>\r\n            <td></td>\r\n            <td>{{calculateTotDisbursementAmount()}}</td>\r\n            <td></td>\r\n            <td></td>\r\n        </tr>\r\n        <br>\r\n        <tr>\r\n            <td colspan=\"3\" style=\"font-family:verdana\">Total Pool Amount in Previous Week :</td>\r\n            <td><strong>{{data.prevdueinpool|currency:\"&#8377;\"}}</strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"3\" style=\"font-family:verdana\"> Total Paid in this Week :</td>\r\n            <td><b>{{calculateAmountPaid()|currency:\"&#8377;\"}}</b> </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"3\" style=\"font-family:verdana\">Total Amount in the Pool : </td>\r\n            <td><b>{{data.prevdueinpool+ calculateAmountPaid() |currency:\"&#8377;\"}}</b></td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"3\" style=\"font-family:verdana\">Disbursed Amount : </td>\r\n            <td><b>{{calculateTotDisbursementAmount() |currency:\"&#8377;\"}}</b></td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"3\" style=\"font-family:verdana\">Balance After Disbursement :</td>\r\n            <td><b>{{data.prevdueinpool+ calculateAmountPaid() - calculateTotDisbursementAmount() |currency:\"&#8377;\"}}</b></td>\r\n        </tr>\r\n        \r\n        \r\n        </table>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n        <div class=\"col\">\r\n            <button mat-raised-button color=\"primary\" style=\"margin:5px;\" class=\"pull-right\" type=\"button\" (click)=\"CreateExcel()\">Create Excel</button>\r\n    \r\n            <button mat-raised-button color=\"primary\" style=\"margin:5px;\" class=\"pull-right\" type=\"button\" (click)=\"openConfirmationDialog()\"  >Proceed For Disbursement</button> \r\n        </div>\r\n</div>\r\n    \r\n<!--\r\n(click)=\"ProceedDisbursement()\"  -->","import { Injectable } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar'\nimport {MatSnackBarConfig} from '@angular/material/snack-bar/snack-bar-config';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  config: MatSnackBarConfig = {\n    duration: 4000,\n    horizontalPosition: 'right',\n    verticalPosition: 'top'\n  }\n\n\n  success(msg) {\n    this.config['panelClass'] = ['notification', 'success'];\n    this.snackBar.open(msg, '',this.config);\n  }\n\n  warn(msg) {\n    this.config['panelClass'] = ['notification', 'warn'];\n    this.snackBar.open(msg, '', this.config);\n    \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PostsService } from '../registration.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-register-popup',\n  templateUrl: './register-popup.component.html',\n  styleUrls: ['./register-popup.component.css']\n})\nexport class RegisterPopupComponent implements OnInit {\n\n  \n  \n  constructor(public popupUser:PostsService,\n    private dialogRef: MatDialogRef<PostsService>,\n    private posts:PostsService) { }\n  \n  ngOnInit(): void {\n\n   \n    this.popupUser;\n  }\n  onClose(){\n    this.dialogRef.close();\n  }\n  \n  onSubmit(){\n    console.log(\"Short Name fo rnne\",this.popupUser.popupForm.value);\n  }\n\n \n}\n","import { Component, OnInit, OnDestroy ,Input, ViewChild, ElementRef, Inject} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormBuilder, FormGroup, Validators, FormControl, FormGroupName,FormArray, AbstractControl} from '@angular/forms';\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\nimport { Post,ContactDetails} from'../shared/form-data.model';\nimport { HttpClient} from '@angular/common/http';\nimport { PostsService } from './registration.service';\nimport { Subscription } from 'rxjs';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { NONE_TYPE } from '@angular/compiler';\nimport { FileUploader, FileLikeObject } from 'ng2-file-upload';\nimport { concat } from  'rxjs';\nimport { ModalComponent } from '../_modal/modal.component';\nimport { ModalService } from '../_modal';\nimport { PopupDataService } from '../shared/popup-data.service';\nimport { NotificationService } from './notification.service';\nimport { MatDialog ,MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {showError: true}\n  }]\n})\nexport class RegistrationComponent implements OnInit,OnDestroy{\n  \n  regions:Array<string>=['North-Eastern','North','West','East','South'];\n  userCategory:Array<string>=['Generating Station','Seller','Buyer','Transmission Licensee',\n                              'Distribution Licensee','Trading Licensee','Power Exchange',\n                            'Battery Energy Storage system','QCA / Aggregators','Others'];\n  \n  fullname:string;\n  usercategory:string;\n  accountName:string='';accountNumber:Number;bankName:string='';\n  branchName:string='';ifscCode:string='';\n  \n  accountName2:string='';accountNumber2:Number;bankName2:string='';\n  branchName2:string='';ifscCode2:string='';\n  \n  accountName3:string='';accountNumber3:Number;bankName3:string='';\n  branchName3:string='';ifscCode3:string='';\n  \n  accountName4:string='';accountNumber4:Number;bankName4:string='';\n  branchName4:string='';ifscCode4:string='';\n  \n  accountName5:string='';accountNumber5:Number;bankName5:string='';\n  branchName5:string='';ifscCode5:string='';\n  \n  accountName6:string='';accountNumber6:Number;bankName6:string='';\n  branchName6:string='';ifscCode6:string='';\n  \n  error=null;\n  loadedPosts:Post[]=[];\n  fetchedResults=[];\n  fetchedRejected=[];\n  checked:boolean=false;\n  selectedFile:File=null;\n  eventChecked:boolean=false;\n  RRASselected:boolean=false;\n  AGCselected:boolean=false;\n  REACTIVEselected:boolean=false;\n  SCEDselected:boolean=false;\n  CONGESTIONselected:boolean=false;\n  status1:boolean=false;status2:boolean=false;status3:boolean=false;\n  status4:boolean=false;status5:boolean=false;status6:boolean=false;\n  status7:boolean=false;status8:boolean=false;status9:boolean=false;\n  isAuthenticated:boolean;\n  readOnlyStatus:boolean=false;\n  imageDBId:string;imageDBId2:string;imageDBId3:string;\n  imageDBId4:string;imageDBId5:string;imageDBId6:string;\n  imageDBId7:string;imageDBId8:string;imageDBId9:string;\n  show:boolean=false;show2:boolean=false;show3:boolean=false;\n  show4:boolean=false;show5:boolean=false;show6:boolean=false;\n  show7:boolean=false;show8:boolean=false;show9:boolean=false;\n  imageURLList:Array<string>[]=[];imageURLList2:Array<string>[]=[];imageURLList3:Array<string>[]=[];\n  imageURLList4:Array<string>[]=[];imageURLList5:Array<string>[]=[];imageURLList6:Array<string>[]=[];\n  imageURLList7:Array<string>[]=[];imageURLList8:Array<string>[]=[];imageURLList9:Array<string>[]=[];\n  \n  @ViewChild('myInput') myInputVariable: ElementRef;\n  @ViewChild('myInput2') myInputVariable2: ElementRef;\n  @ViewChild('myInput3') myInputVariable3: ElementRef;\n  @ViewChild('myInput4') myInputVariable4: ElementRef;\n  @ViewChild('myInput5') myInputVariable5: ElementRef;\n  @ViewChild('myInput6') myInputVariable6: ElementRef;\n  @ViewChild('myInput7') myInputVariable7: ElementRef;\n  @ViewChild('myInput8') myInputVariable8: ElementRef;\n  @ViewChild('myInput9') myInputVariable9: ElementRef;\n  private errorSub:Subscription;\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  public uploader: FileUploader = new FileUploader({});\n  public hasBaseDropZoneOver: boolean = false;\n\n\n  constructor(private router:Router,\n              private http:HttpClient,\n              public service:PostsService,\n              private postService:PostsService,public popupUser:PostsService,\n              private modalService:ModalService,\n              public jwmodalpopup:PopupDataService,\n              private notification:NotificationService,\n              public dialog: MatDialog) {}\n\n  ngOnInit() {\n  \n    var currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n\n    console.log(\"current user\",currentUser);\n    this.isAuthenticated=currentUser.isSuperUser;\n    this.fullname=currentUser.fullname;\n    this.usercategory=currentUser.usercategory;\n    \n\n    this.http.post('http://127.0.0.1:8000/rejectlist',currentUser.registration_id).subscribe(response=>{\n\n      for(const key in response)\n        { \n         \n          if(key==\"user_formdata\")\n          { \n            \n            this.postService.signupForm.patchValue(response[key])\n            this.fetchedResults.push(response[key]);\n          }\n        }\n        for(const key in response)\n        {\n          if(key ==\"readonly\")\n          {\n            \n            if(this.isAuthenticated){\n              this.readOnlyStatus=false\n            }\n            else if(response[key]){\n              \n              this.readOnlyStatus=true;\n            }\n            else{\n              this.readOnlyStatus=false\n            }\n          }\n        } \n        // for(const key in response){\n        //   console.log(\"for loop data\",response[key]['entityName']);\n        // }\n    },error=>{\n      console.log(\"Error occured\");\n    })\n    //To Handle the errors explicitly ,refer ErrorHandling Angular Course\n    this.errorSub=this.postService.error.subscribe(errorMessage =>{\n      this.error=errorMessage;\n    })\n    this.fetchPosts();\n    }\n\n    get f(){\n      return this.service.signupForm.controls;\n    }\nonSelectRRAS(event:MatCheckboxChange){\n\n      if(event.checked){\n          this.postService.signupForm.patchValue(this.fetchedResults[0])\n          this.accountName4=this.fetchedResults[0]['accountName4'];\n          this.bankName4=this.fetchedResults[0]['bankName4'];\n          this.branchName4=this.fetchedResults[0]['branchName4'];\n          this.ifscCode4=this.fetchedResults[0]['ifscCode4'];\n          this.RRASselected=true;\n      }\n      else{\n        this.RRASselected=false;\n      }\n    }\nonSelectAGC(event:MatCheckboxChange){\n  \n      if(event.checked){\n        this.accountName5=this.fetchedResults[0]['accountName5'];\n        this.bankName5=this.fetchedResults[0]['bankName5'];\n        this.branchName5=this.fetchedResults[0]['branchName5'];\n        this.ifscCode5=this.fetchedResults[0]['ifscCode5'];\n        this.AGCselected=true;\n      }\n      else{\n        this.AGCselected=false;\n      }\n    }\nonSelectREACTIVE(event:MatCheckboxChange){\n\n      if(event.checked){\n          this.accountName2=this.fetchedResults[0]['accountName2'];\n          this.bankName2=this.fetchedResults[0]['bankName2'];\n          this.branchName2=this.fetchedResults[0]['branchName2'];\n          this.ifscCode2=this.fetchedResults[0]['ifscCode2'];\n          this.REACTIVEselected=true;\n      }\n      else{\n        this.REACTIVEselected=false;\n      }\n    }\nonSelectSCED(event){\n      if(event.checked){\n        this.accountName6=this.fetchedResults[0]['accountName6'];\n        this.bankName6=this.fetchedResults[0]['bankName6'];\n        this.branchName6=this.fetchedResults[0]['branchName6'];\n        this.ifscCode6=this.fetchedResults[0]['ifscCode6'];\n        this.SCEDselected=true;\n      }\n      else{\n        this.SCEDselected=false;\n      }\n    }\nonSelectCONGESTION(event:MatCheckboxChange){\n      if(event.checked){\n        this.accountName3=this.fetchedResults[0]['accountName3'];\n        this.bankName3=this.fetchedResults[0]['bankName3'];\n        this.branchName3=this.fetchedResults[0]['branchName3'];\n        this.ifscCode3=this.fetchedResults[0]['ifscCode3'];\n        this.CONGESTIONselected=true;\n      }\n      else{\n        this.CONGESTIONselected=false;\n      }\n    }\n  \n  onChangeREACTIVE(event:MatCheckboxChange){\n  if(event.checked){\n    this.accountName2=this.accountName;\n    // this.accountNumber2=this.accountNumber;\n    this.bankName2=this.bankName;\n    this.branchName2=this.branchName;\n    this.ifscCode2=this.ifscCode;\n    this.eventChecked=!event.checked;\n  }\n  else{\n    this.accountName2='';\n    // this.accountNumber2=null;\n    this.bankName2='';\n    this.branchName2='';\n    this.ifscCode2='';\n    this.eventChecked=event.checked;\n  }\n }\n onChangeCONG(event:MatCheckboxChange){\n  if(event.checked){\n    this.accountName3=this.accountName;\n    // this.accountNumber3=this.accountNumber;\n    this.bankName3=this.bankName;\n    this.branchName3=this.branchName;\n    this.ifscCode3=this.ifscCode;\n  }\n  else{\n    this.accountName3='';\n    // this.accountNumber3=null;\n    this.bankName3='';\n    this.branchName3='';\n    this.ifscCode3='';\n  }\n }\n\n onChangeRRAS(event:MatCheckboxChange){\n  if(event.checked){\n    \n    this.accountName4=this.accountName;\n    // this.accountNumber4=this.accountNumber;\n    this.bankName4=this.bankName;\n    this.branchName4=this.branchName;\n    this.ifscCode4=this.ifscCode;\n  }\n  else{\n    this.accountName4='';\n    // this.accountNumber4=null;\n    this.bankName4='';\n    this.branchName4='';\n    this.ifscCode4='';\n  }\n }\n onChangeAGC(event:MatCheckboxChange){\n  if(event.checked){\n    this.accountName5=this.accountName;\n    // this.accountNumber5=this.accountNumber;\n    this.bankName5=this.bankName;\n    this.branchName5=this.branchName;\n    this.ifscCode5=this.ifscCode;\n  }\n  else{\n    this.accountName5='';\n    // this.accountNumber5=null;\n    this.bankName5='';\n    this.branchName5='';\n    this.ifscCode5='';\n  }\n }\n\n onChangeSCED(event:MatCheckboxChange){\n  if(event.checked){\n    this.accountName6=this.accountName;\n    // this.accountNumber6=this.accountNumber;\n    this.bankName6=this.bankName;\n    this.branchName6=this.branchName;\n    this.ifscCode6=this.ifscCode;\n  }\n  else{\n    this.accountName6='';\n    // this.accountNumber6=null;\n    this.bankName6='';\n    this.branchName6='';\n    this.ifscCode6='';\n  }\n }\n onFileSelected(event){\n   this.selectedFile=event.target.files[0];\n\n   var fd=new FormData()\n    fd.append('image',this.selectedFile);\n }\n\n  onSubmit(){\n    let postData:Post =this.service.signupForm.value;\n\n    var currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n\n      this.postService.onSendPosts(postData,currentUser.registration_id).subscribe(\n        responseData =>{\n          \n          this.router.navigate(['/registration/submitted']);\n        },error=>{\n            this.error.next(error.message);\n        }\n      );\n  }\n    onFileChange(event) {\n  \n      if (event.target.files.length > 0) {\n        const file = event.target.files[0];\n        this.postService.signupForm.patchValue({\n          image: file\n        });\n      }\n    }\n\n  private fetchPosts()\n  {\n   this.postService.onFetchPosts().subscribe(\n      posts=>{\n       this.loadedPosts=posts;\n      }       \n    );\n }\n fileOverBase(event):  void {\n  this.hasBaseDropZoneOver  =  event;\n}\ngetFiles(): FileLikeObject[] {\n  return this.uploader.queue.map((fileItem) => {\n    return fileItem.file;\n  });\n}\nupload1(dsm) {   \n  this.upload(dsm).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList.push(res[key][0]);\n            this.imageDBId=res[key][1];\n\n          }\n        this.show=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  );  \n}\nupload2(reactive) {   \n  this.upload(reactive).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList2=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList2.push(res[key][0]);\n            this.imageDBId2=res[key][1];\n\n          }\n        this.show2=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  );  \n  // });\n}\nupload3(congestion) {   \n  \n  this.upload(congestion).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList3=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList3.push(res[key][0]);\n            this.imageDBId3=res[key][1];\n\n          }\n        this.show3=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  ); \n}\nupload4(rras) {   \n  \n  this.upload(rras).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList4=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList4.push(res[key][0]);\n            this.imageDBId4=res[key][1];\n\n          }\n        this.show4=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  ); \n}\nupload5(agc) {   \n  \n  this.upload(agc).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList5=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList5.push(res[key][0]);\n            this.imageDBId5=res[key][1];\n\n          }\n        this.show5=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  ); \n}\nupload6(sced) {   \n  this.upload(sced).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList6=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList6.push(res[key][0]);\n            this.imageDBId6=res[key][1];\n\n          }\n        this.show6=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  ); \n}\nupload7(PAN) {   \n  this.upload(PAN).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList7=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList7.push(res[key][0]);\n            this.imageDBId7=res[key][1];\n\n          }\n        this.show7=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  ); \n}\nupload8(TAN) {   \n  this.upload(TAN).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList8=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList8.push(res[key][0]);\n            this.imageDBId8=res[key][1];\n\n          }\n        this.show8=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  ); \n}\nupload9(GSTIN) {   \n  this.upload(GSTIN).subscribe(\n    res=>{\n      this.uploader.clearQueue();\n      this.imageURLList9=[];\n          for(const key in res)\n          { \n            \n            this.imageURLList9.push(res[key][0]);\n            this.imageDBId9=res[key][1];\n\n          }\n        this.show9=true;\n    },\n    err => {  \n      console.log(err);\n    }\n  ); \n}\nupload(banktype:string){\n  let files = this.getFiles();\n  let requests = [];\n  \n  if(files[0]){\n    let extension=files[0].name\n    let formData = new FormData();\n    formData.append('file' , files[0].rawFile, this.currentUser.userName+'@'+banktype+extension);     \n    return this.http.post('http://127.0.0.1:8000/imageData',formData)  \n  }\n  else{\n    this.notification.warn(\"Please Choose File\");\n  }\n  }\n\n  Delete()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId).subscribe(res=>{\n          this.imageURLList=[];\n          this.uploader.clearQueue();\n          this.myInputVariable.nativeElement.value=\"\";\n          this.show=false;\n    })\n    \n  }\n  Delete2()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId2).subscribe(res=>{\n          this.imageURLList2=[];\n          this.uploader.clearQueue();\n          this.myInputVariable2.nativeElement.value=\"\";\n          this.show2=false;\n    })\n    \n  }\n  Delete3()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId3).subscribe(res=>{\n          this.imageURLList3=[];\n          this.uploader.clearQueue();\n          this.myInputVariable3.nativeElement.value=\"\";\n          this.show3=false;\n    })\n    \n  }\n  Delete4()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId4).subscribe(res=>{\n          this.imageURLList4=[];\n          this.uploader.clearQueue();\n          this.myInputVariable4.nativeElement.value=\"\";\n          this.show4=false;\n    })\n    \n  }\n  Delete5()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId5).subscribe(res=>{\n          this.imageURLList5=[];\n          this.uploader.clearQueue();\n          this.myInputVariable5.nativeElement.value=\"\";\n          this.show5=false;\n    })\n    \n  }\n  Delete6()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId6).subscribe(res=>{\n          this.imageURLList6=[];\n          this.uploader.clearQueue();\n          this.myInputVariable6.nativeElement.value=\"\";\n          this.show6=false;\n    })\n    \n  }\n  Delete7()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId7).subscribe(res=>{\n          this.imageURLList7=[];\n          this.uploader.clearQueue();\n          this.myInputVariable7.nativeElement.value=\"\";\n          this.show7=false;\n    })\n    \n  }\n  Delete8()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId8).subscribe(res=>{\n          this.imageURLList8=[];\n          this.uploader.clearQueue();\n          this.myInputVariable8.nativeElement.value=\"\";\n          this.show8=false;\n    })\n    \n  }\n  Delete9()\n  {\n    this.http.post('http://127.0.0.1:8000/deletefile',this.imageDBId9).subscribe(res=>{\n          this.imageURLList9=[];\n          this.uploader.clearQueue();\n          this.myInputVariable9.nativeElement.value=\"\";\n          this.show9=false;\n    })\n    \n  }\nopenModal(id: string) {\n  \n  this.popupUser.popupForm.patchValue(this.popupUser.signupForm.value);\n  console.log(this.popupUser.signupForm.value)\n  this.modalService.open(id);\n}\n\nopenFormDialog(){\n\n  const dialogRef = this.dialog.open(FormDialog, {\n    width: '750px',\n    autoFocus: false,\n    maxHeight: '90vh',\n    data: {formdata:this.popupUser.signupForm.value}\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n    \n  });\n}\n\n\ncloseModal(id: string) {\n  this.modalService.close(id);\n}\n\nngOnDestroy(){\n\n  //Unsubscribe error subscription ,it is optional\n  this.errorSub.unsubscribe();\n}\n\n}                            \n                            \n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'form-data.html',\n})\nexport class FormDialog implements OnInit{\n\n  error=null;\n  constructor(\n    public dialogRef: MatDialogRef<FormDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public popupUser:PostsService,\n    public jwmodalpopup:PopupDataService,\n    public service:PostsService,\n    private postService:PostsService,\n    private router:Router,) {}\n\n  ngOnInit(){\n    console.log(this.data);\n    \n  }\n  onSubmit(){\n    let postData:Post =this.service.signupForm.value;\n    console.log(postData);\n    \n    var currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n\n      this.postService.onSendPosts(postData,currentUser.registration_id).subscribe(\n        responseData =>{\n          this.dialogRef.close();\n          this.router.navigate(['/registration/submitted']);\n        },error=>{\n            this.error.next(error.message);\n        }\n      );\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n}             \n","<div>\n<app-header></app-header>\n</div><br>\n<div class=\"container\">\n  <form [formGroup]=\"service.signupForm\">\n  <mat-card class=\"example-card\">\n  <mat-horizontal-stepper linear labelPosition=\"bottom\" #stepper>\n    <mat-step  errorMessage=\"Entity Details required.\">\n    <div>\n      <ng-template matStepLabel>Entity Details</ng-template>\n      <h3 style=\"font-weight:bold\"> Entity Details </h3>\n      <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <mat-form-field *ngIf=\"!isAuthenticated\" appearance=\"outline\" style=\"width:250px;\">\n          \n              <mat-label>Name of Entity</mat-label>\n              <input matInput placeholder=\"Entity Name\" readonly [ngModel]=\"fullname\" formControlName=\"entityName\"[ngClass]=\"{'crossicon':service.signupForm.value['entityName']!='Null'} \">\n               \n            </mat-form-field>\n            <mat-form-field *ngIf=\"isAuthenticated\" appearance=\"outline\" style=\"width:250px;\">\n          \n              <mat-label>Name of Entity</mat-label>\n              <input matInput placeholder=\"Entity Name\" formControlName=\"entityName\">\n               \n            </mat-form-field>\n          </div>\n          <div class=\"col-sm-6\">\n\n            <mat-form-field appearance=\"outline\" style=\"width:350px;\">\n            <mat-label>Registered Address<span class=\"givered\">*</span></mat-label>\n\n            <textarea matInput placeholder=\"Reg Address\" [readOnly]=\"readOnlyStatus\" formControlName=\"regAddress\"></textarea>\n            </mat-form-field>\n          </div>\n      </div>\n    <h3 style=\"font-weight:bold\">Regional Details </h3>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Region</mat-label>\n              <mat-select formControlName=\"region\">\n                  <mat-option *ngFor=\"let region of regions\" [value]=\"region\">{{region}}</mat-option>\n              </mat-select> \n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-6\">\n            <mat-form-field *ngIf=\"!isAuthenticated\" appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>User Category</mat-label>\n              <input matInput  [ngModel]=\"usercategory\" readonly formControlName=\"userCategory\">\n            \n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"isAuthenticated\" appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>User Category</mat-label>\n              <mat-select formControlName=\"userCategory\">\n                  <mat-option *ngFor=\"let user of userCategory\" [value]=\"user\">{{user}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <p><span class=\"givered\">*</span> Fields are required </p>\n    <div>\n      <button mat-raised-button color=\"primary\"  matStepperNext type=\"button\">Next</button>\n    </div>\n  </div>\n  </mat-step>\n  <!-- Second Mat Step -->\n  <mat-step  errorMessage=\"Contact details required.\">\n    <div>\n      <ng-template matStepLabel>Contact Person Details</ng-template>\n      <h3 style=\"font-weight:bold\">Contact Person Details</h3>\n    \n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Person Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Person Name\" [readOnly]=\"readOnlyStatus\" formControlName=\"contactName\" name=\"contactName\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n            <mat-label>Designation<span class=\"givered\">*</span></mat-label>\n              <input matInput placeholder=\"Designation\" [readOnly]=\"readOnlyStatus\" formControlName=\"designation\" name=\"designation\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Telephone No.<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Telephone No\" [readOnly]=\"readOnlyStatus\" formControlName=\"telephone\" name=\"telephone\">\n          </mat-form-field>\n        </div>                  \n      </div>\n      <!-- Second Row -->       \n       <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Person Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Person Name\" [readOnly]=\"readOnlyStatus\" formControlName=\"contactName2\" name=\"contactName2\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n            <mat-label>Designation<span class=\"givered\">*</span></mat-label>\n              <input matInput placeholder=\"Designation\" [readOnly]=\"readOnlyStatus\" formControlName=\"designation2\" name=\"designation2\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Telephone No.<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Telephone No\" [readOnly]=\"readOnlyStatus\" formControlName=\"telephone2\" name=\"telephone2\">\n          </mat-form-field>\n        </div>                  \n      </div>\n      <!-- Third ROw -->\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Person Name</mat-label>\n                <input matInput placeholder=\"Person Name\" [readOnly]=\"readOnlyStatus\" formControlName=\"contactName3\" name=\"contactName3\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n            <mat-label>Designation</mat-label>\n              <input matInput placeholder=\"Designation\" [readOnly]=\"readOnlyStatus\" formControlName=\"designation3\" name=\"designation3\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Telephone No.</mat-label>\n                <input matInput placeholder=\"Telephone No\" [readOnly]=\"readOnlyStatus\" formControlName=\"telephone3\" name=\"telephone3\">\n          </mat-form-field>\n        </div>                  \n      </div>     \n      <p><span class=\"givered\">*</span> Fields are required </p>\n      <div class=\"row\">\n        <div class=\"col-xs-1\">\n          <button mat-raised-button color=\"primary\"  matStepperPrevious type=\"button\">Back</button> \n        </div>\n        <div class=\"col-xs-1\">\n          <button mat-raised-button color=\"primary\"  matStepperNext type=\"button\">Next</button>\n        </div>\n      </div>\n  </div>\n  </mat-step>\n  <mat-step  errorMessage=\"Bank details required.\">\n  <ng-template matStepLabel>Bank Details</ng-template>\n    <div>\n    <!-- Primary Bank Details -->\n    <mat-card-header>\n        <div class=\"col-sm-3\">\n           <strong>Select Applicable Accounts:</strong>\n        </div>\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onSelectRRAS($event)\">RRAS</mat-checkbox>\n        </div>\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onSelectAGC($event)\">AGC</mat-checkbox>\n        </div>\n        <div class=\"col-sm-2\">\n          <mat-checkbox  (change)=\"onSelectREACTIVE($event)\">REACTIVE</mat-checkbox>\n        </div>\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onSelectSCED($event)\">SCED</mat-checkbox>\n        </div>\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onSelectCONGESTION($event)\">CONGESTION</mat-checkbox>\n        </div>\n    </mat-card-header> \n    <hr style=\"border:2px solid red;\">\n    <!--DSM Bank Details -->\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <h3 style=\"font-weight:bold;\"> Bank Details DSM:</h3>\n        </div>\n        <!--\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onChangeALL($event)\">All</mat-checkbox>\n        </div> -->\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Account Name\" [(ngModel)]=\"accountName\" formControlName=\"accountName\" [readOnly]=\"readOnlyStatus\" name=\"accountName\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Number<span class=\"givered\">*</span></mat-label>\n                <input class=\"dots\" matInput placeholder=\"Account Number\" formControlName=\"confirmaccNumber\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Confirm Account Number<span class=\"givered\">*</span></mat-label>\n                <input  matInput placeholder=\"Confirm Number\" formControlName=\"accountNumber\">\n            </mat-form-field>\n            <mat-error *ngIf=\"f.confirmaccNumber.value != f.accountNumber.value && f.confirmaccNumber.touched\">Account Number is not matching</mat-error>\n             \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Bank Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Bank Name\" [readOnly]=\"readOnlyStatus\" [(ngModel)]=\"bankName\" formControlName=\"bankName\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Branch Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Branch Name\" [readOnly]=\"readOnlyStatus\" [(ngModel)]=\"branchName\" formControlName=\"branchName\" name=\"branchName\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>IFSC Code<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"IFSC Code\" [readOnly]=\"readOnlyStatus\" [(ngModel)]=\"ifscCode\" formControlName=\"ifscCode\" style=\"text-transform:uppercase\">\n            </mat-form-field>\n        </div>\n      </div>\n      <!-- File Upload -->\n      <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-4\">\n          <input type=\"file\" #myInput placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\" accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n        </div>\n        <div class=\"col-sm-4\">\n          <button (click)=\"upload1('dsm')\" type=\"button\">Upload file<span class=\"givered\">*</span></button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show\">\n          <span class=\"material-icons\" (click)=\"Delete()\">delete</span>\n        </div>\n      </div> \n      <p> Note: Only .jpeg  .jpg  .png .pdf are allowed</p>\n      <hr style=\"border:2px solid red;\">\n  <!-- Second Bank Details ------------------------- -->\n  <div *ngIf=\"RRASselected\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <h4 style=\"font-weight:bold;\"> Bank Details For RRAS:</h4>\n        </div>\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onChangeRRAS($event)\">Same as DSM</mat-checkbox>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Name</mat-label>\n                <input matInput placeholder=\"Account Name\" [(ngModel)]=\"accountName4\" formControlName=\"accountName4\" name=\"accountName4\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Number</mat-label>\n                <input class=\"dots\" matInput placeholder=\"Account Number\" formControlName=\"confirmaccNumber4\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Confirm Account Number</mat-label>\n                <input matInput  placeholder=\"Confirm Number\" formControlName=\"accountNumber4\">\n            </mat-form-field>\n            <mat-error *ngIf=\"f.confirmaccNumber4.value != f.accountNumber4.value && f.confirmaccNumber4.touched\">Account Number is not matching</mat-error>\n            \n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Bank Name</mat-label>\n                <input matInput placeholder=\"Bank Name\"  [(ngModel)]=\"bankName4\" formControlName=\"bankName4\" name=\"bankName4\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Branch Name</mat-label>\n                <input matInput placeholder=\"Branch Name\" [(ngModel)]=\"branchName4\" formControlName=\"branchName4\" name=\"branchName4\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>IFSC Code</mat-label>\n                <input matInput placeholder=\"IFSC Code\" [(ngModel)]=\"ifscCode4\" formControlName=\"ifscCode4\" style=\"text-transform:uppercase\">\n            </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" id=\"fileChoosen\">\n          <div class=\"col-sm-4\">\n            <input type=\"file\" #myInput4 placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\"  accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n          </div>\n          <div class=\"col-sm-4\">\n            <button (click)=\"upload4('rras')\" type=\"button\">Upload file</button>\n          </div>\n          <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList4\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show4\">\n          <span class=\"material-icons\" (click)=\"Delete4()\">delete</span>\n        </div>\n      </div>                         \n      <p> Note: Only .jpeg  .jpg  .png .pdf are allowed</p>\n      <hr style=\"border:2px solid red;\">\n  </div>\n      \n<!--THird Bank Details --------------------------------------------------->\n<div *ngIf=\"AGCselected\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <h4 style=\"font-weight:bold;\"> Bank Details For AGC:</h4>\n        </div>\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onChangeAGC($event)\">Same as DSM</mat-checkbox>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Name</mat-label>\n                <input matInput placeholder=\"Account Name\" [(ngModel)]=\"accountName5\" formControlName=\"accountName5\" name=\"accountName5\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Number</mat-label>\n                <input class=\"dots\" matInput placeholder=\"Account Number\"  formControlName=\"confirmaccNumber5\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Confirm Account Number</mat-label>\n                <input matInput  placeholder=\"Confirm Number\" formControlName=\"accountNumber5\">\n            </mat-form-field>\n            <mat-error *ngIf=\"f.confirmaccNumber5.value != f.accountNumber5.value && f.confirmaccNumber5.touched\">Account Number is not matching</mat-error>   \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Bank Name</mat-label>\n                <input matInput placeholder=\"Bank Name\"  [(ngModel)]=\"bankName5\" formControlName=\"bankName5\" name=\"bankName5\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Branch Name</mat-label>\n                <input matInput placeholder=\"Branch Name\" [(ngModel)]=\"branchName5\" formControlName=\"branchName5\" name=\"branchName5\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>IFSC Code</mat-label>\n                <input matInput placeholder=\"IFSC Code\" [(ngModel)]=\"ifscCode5\" formControlName=\"ifscCode5\" style=\"text-transform:uppercase\">\n            </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-4\">\n          <input type=\"file\" #myInput5 placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\"  accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n        </div>\n        <div class=\"col-sm-4\">\n          <button (click)=\"upload5('agc')\" type=\"button\">Upload file</button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList5\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show5\">\n          <span class=\"material-icons\" (click)=\"Delete5()\">delete</span>\n        </div>\n      </div>                         \n      <p> Note: Only .jpeg  .jpg  .png .pdf are allowed</p>\n    <hr style=\"border:2px solid red;\">\n</div>\n  <!-- Fourth Bank Details --------------->\n<div *ngIf=\"REACTIVEselected\">\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <h4 style=\"font-weight:bold;\">Bank Details For REACTIVE:</h4>\n        </div>\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onChangeREACTIVE($event)\">Same as DSM</mat-checkbox>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\"  style=\"width:250px;\">\n              <mat-label>Account Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Account Name\" [(ngModel)]=\"accountName2\" formControlName=\"accountName2\" name=\"accountName2\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Number<span class=\"givered\">*</span></mat-label>\n                <input class=\"dots\" matInput placeholder=\"Account Number\" formControlName=\"confirmaccNumber2\" >\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Confirm Account Number<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Confirm Number\" formControlName=\"accountNumber2\" >\n            </mat-form-field>\n            <mat-error *ngIf=\"f.confirmaccNumber2.value != f.accountNumber2.value && f.confirmaccNumber2.touched\">Account Number is not matching</mat-error>  \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Bank Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Bank Name\" [(ngModel)]=\"bankName2\" formControlName=\"bankName2\" name=\"bankName2\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Branch Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Branch Name\" [(ngModel)]=\"branchName2\" formControlName=\"branchName2\" name=\"branchName2\">\n            </mat-form-field>\n        </div> \n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>IFSC Code<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"IFSC Code\" [(ngModel)]=\"ifscCode2\" formControlName=\"ifscCode2\" style=\"text-transform:uppercase\">\n            </mat-form-field>\n        </div>        \n      </div>\n      <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-4\">\n          <input type=\"file\"  #myInput2 placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\"  accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n        </div>\n        <div class=\"col-sm-4\">\n          <button (click)=\"upload2('reactive')\" type=\"button\">Upload file</button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList2\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show2\">\n          <span class=\"material-icons\" (click)=\"Delete2()\">delete</span>\n        </div>\n      </div>\n      <p> Note: Only .jpeg  .jpg  .png .pdf are allowed</p>\n      <hr style=\"border:2px solid red;\">\n</div>\n  <!-- Fifth Bank Details ------------------>\n<div *ngIf=\"SCEDselected\">\n      <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <h4 style=\"font-weight:bold;\"> Bank Details For SCED:</h4>\n          </div>\n          <div class=\"col-sm-1\">\n            <mat-checkbox  (change)=\"onChangeSCED($event)\">Same as DSM</mat-checkbox>\n          </div>\n      </div>\n      <div class=\"row\">\n          <div class=\"col-sm-4\">\n              <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n                <mat-label>Account Name<span class=\"givered\">*</span></mat-label>\n                  <input matInput placeholder=\"Account Name\" [(ngModel)]=\"accountName6\" formControlName=\"accountName6\" name=\"accountName6\">\n              </mat-form-field>\n          </div>\n          <div class=\"col-sm-4\">\n              <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n                <mat-label>Account Number<span class=\"givered\">*</span></mat-label>\n                  <input class=\"dots\" matInput placeholder=\"Account Number\" formControlName=\"confirmaccNumber6\" >\n            </mat-form-field>\n          </div>\n          <div class=\"col-sm-4\">\n              <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n                <mat-label>Confirm Account Number<span class=\"givered\">*</span></mat-label>\n                  <input matInput  placeholder=\"Confirm Number\" formControlName=\"accountNumber6\">\n              </mat-form-field>\n              <mat-error *ngIf=\"f.confirmaccNumber6.value != f.accountNumber6.value && f.confirmaccNumber6.touched\">Account Number is not matching</mat-error>    \n          </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Bank Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Bank Name\"  [(ngModel)]=\"bankName6\" formControlName=\"bankName6\" name=\"bankName6\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Branch Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Branch Name\" [(ngModel)]=\"branchName6\" formControlName=\"branchName6\" name=\"branchName6\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>IFSC Code<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"IFSC Code\" [(ngModel)]=\"ifscCode6\" formControlName=\"ifscCode6\" style=\"text-transform:uppercase\">\n            </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-4\">\n          <input type=\"file\" #myInput6 placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\"  accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n        </div>\n        <div class=\"col-sm-4\">\n          <button (click)=\"upload6('sced')\" type=\"button\">Upload file</button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList6\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show6\">\n          <span class=\"material-icons\" (click)=\"Delete6()\">delete</span>\n        </div>\n      </div>                         \n      <p> Note: Only .jpeg  .jpg  .png .pdf are allowed</p>\n      <hr style=\"border:2px solid red;\">\n  </div>\n  <!---Sixth Bank Details ------------------------------- -->\n<div *ngIf=\"CONGESTIONselected\">\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <h4 style=\"font-weight:bold;\"> Bank Details For CONGESTION:</h4>\n        </div>\n        <div class=\"col-sm-1\">\n          <mat-checkbox  (change)=\"onChangeCONG($event)\">Same as DSM</mat-checkbox>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Account Name\" [(ngModel)]=\"accountName3\" formControlName=\"accountName3\" name=\"accountName3\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Account Number<span class=\"givered\">*</span></mat-label>\n                <input class=\"dots\" matInput placeholder=\"Account Number\" formControlName=\"confirmaccNumber3\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Confirm Account Number<span class=\"givered\">*</span></mat-label>\n                <input matInput  placeholder=\"Confirm Number\" formControlName=\"accountNumber3\">\n            </mat-form-field>\n            <mat-error *ngIf=\"f.confirmaccNumber3.value != f.accountNumber3.value && f.confirmaccNumber3.touched\">Account Number is not matching</mat-error> \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Bank Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Bank Name\"  [(ngModel)]=\"bankName3\" formControlName=\"bankName3\" name=\"bankName3\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>Branch Name<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"Branch Name\" [(ngModel)]=\"branchName3\" formControlName=\"branchName3\" name=\"branchName3\">\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-3\">\n            <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>IFSC Code<span class=\"givered\">*</span></mat-label>\n                <input matInput placeholder=\"IFSC Code\" [(ngModel)]=\"ifscCode3\" formControlName=\"ifscCode3\" style=\"text-transform:uppercase\">\n            </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-4\">\n          <input type=\"file\" #myInput3 placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\"  accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n        </div>\n        <div class=\"col-sm-4\">\n          <button (click)=\"upload3('congestion')\" type=\"button\">Upload file</button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList3\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show3\">\n          <span class=\"material-icons\" (click)=\"Delete3()\">delete</span>\n        </div>\n      </div>                         \n      <p> Note: Only .jpeg  .jpg  .png .pdf are allowed</p>\n      <hr style=\"border:2px solid red;\">\n  </div>\n      <p style=\"color:red;\">Note:Check whether Confirm account number entered for all or not </p> \n      <div>\n        <button mat-raised-button color=\"primary\" matStepperPrevious type=\"button\">Back</button>\n        <button mat-raised-button color=\"primary\" matStepperNext  class=\"pull-right\" type=\"button\">Next</button>\n      </div>\n  </div>\n  </mat-step>\n  <!--TAX DETAILS -------->\n  <mat-step  errorMessage=\"TAX details required.\">\n    <div>\n      <ng-template matStepLabel>TAX Details</ng-template>\n      <h3 style=\"font-weight:bold\">TAX Details</h3>\n    \n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>PAN Number<span class=\"givered\">*</span></mat-label>\n                <input matInput [readOnly]=\"readOnlyStatus\" style=\"text-transform:uppercase\" formControlName=\"pannumber\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n            <mat-label>TAN Number<span class=\"givered\">*</span></mat-label>\n              <input matInput [readOnly]=\"readOnlyStatus\" style=\"text-transform:uppercase\" formControlName=\"tannumber\">\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-4\">\n          <mat-form-field appearance=\"outline\" style=\"width:250px;\">\n              <mat-label>GSTIN Number<span class=\"givered\">*</span></mat-label>\n                <input matInput [readOnly]=\"readOnlyStatus\" style=\"text-transform:uppercase\" formControlName=\"gstinnumber\">\n          </mat-form-field>\n        </div>                  \n      </div>\n      <!--File Upload -->\n      <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-3\">\n          <b>Upload PAN :</b>\n        </div>\n        <div class=\"col-sm-3\">\n          <input type=\"file\" #myInput7 placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\" accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n        </div>\n        <div class=\"col-sm-2\">\n          <button (click)=\"upload7('PAN')\" type=\"button\">Upload file<span class=\"givered\">*</span></button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList7\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show7\">\n          <span class=\"material-icons\" (click)=\"Delete7()\">delete</span>\n        </div>\n      </div><hr>\n      <!--TAN UPLOAD -->\n      <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-3\">\n          <b> Upload TAN :</b>\n        </div>\n        <div class=\"col-sm-3\">\n          <input type=\"file\" #myInput8 placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\" accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n        </div>\n        <div class=\"col-sm-2\">\n          <button (click)=\"upload8('TAN')\" type=\"button\">Upload file<span class=\"givered\">*</span></button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList8\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show8\">\n          <span class=\"material-icons\" (click)=\"Delete8()\">delete</span>\n        </div>\n      </div><hr>\n      <!--GSTIN Upload -->\n      <div class=\"row\" id=\"fileChoosen\">\n        <div class=\"col-sm-3\">\n        <b>  Upload GSTIN Proof :</b>\n        </div>\n        <div class=\"col-sm-3\">\n          <input type=\"file\" #myInput9 placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\" accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n        </div>\n        <div class=\"col-sm-2\">\n          <button (click)=\"upload9('GSTIN')\" type=\"button\">Upload file<span class=\"givered\">*</span></button>\n        </div>\n        <div class=\"col-sm-2\">\n          <div *ngFor=\"let url of imageURLList9\">\n              <a [attr.href]=\"'//'+ url\" target=\"_blank\">View File</a>\n          </div>\n        </div>\n        <div class=\"col-sm-2\" *ngIf=\"show9\">\n          <span class=\"material-icons\" (click)=\"Delete9()\">delete</span>\n        </div>\n      </div><br>\n      <p><span class=\"givered\">*</span> Fields are required </p>\n      <div>\n          <button mat-raised-button color=\"primary\"  matStepperPrevious type=\"button\">Back</button> \n          <button mat-raised-button color=\"primary\" (click)=\"openFormDialog()\"   type=\"button\" class=\"pull-right\">Save&Proceed</button>\n      </div>\n  </div>\n  <!-- (click)=\"openModal('edit-modal')\"  -->\n  </mat-step>\n</mat-horizontal-stepper>\n</mat-card>\n</form>\n</div>\n\n<jw-modal id=\"edit-modal\">\n    <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('edit-modal');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    <br>\n      <div style=\"height:1800px;\">\n          <form [formGroup]=\"popupUser.popupForm\" (ngSubmit)=\"onSubmit()\">\n          <hr style=\"border:2px solid green;\">\n          <!--First Section -->\n          <h3><strong>Entity Details:</strong> </h3>\n          \n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.entityDetails;let z=index;\">\n                <div class=\"col-sm-1\">\n                </div>\n                <div class=\"col-sm-4\">\n                    <label> {{jwmodalpopup.entityName[z]}} </label>\n                </div>\n                <div class=\"col-sm-1\">\n                  :\n                </div>\n                <div class=\"col-sm-6\">\n                    {{popupUser.popupForm.value[val]}}\n                </div>\n            </div>\n            <hr>\n            <h3><strong>Contact Details:</strong> </h3>\n          \n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.contactDetails;let z=index;\">\n                <div class=\"col-sm-1\">\n                </div>\n                <div class=\"col-sm-4\">\n                    <label> {{jwmodalpopup.contactName[z]}} </label>\n                </div>\n                <div class=\"col-sm-1\">\n                  :\n                </div>\n                <div class=\"col-sm-6\">\n                    {{popupUser.popupForm.value[val]}}\n                </div>\n            </div>\n            <hr>\n            <h3><strong>Bank  Details:</strong> </h3>\n          \n            <div *ngFor=\"let val of jwmodalpopup.bankDetails;let z=index;\">\n                <div *ngIf=\"popupUser.popupForm.value[val]\">\n                <div class=\"row\">\n                    <div class=\"col-sm-1\">\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <label> {{jwmodalpopup.bankName[z]}} </label>\n                    </div>\n                    <div class=\"col-sm-1\">\n                    :\n                    </div>\n                    <div class=\"col-sm-6\">\n                        {{popupUser.popupForm.value[val]}}\n                    </div>\n                </div>\n                </div>\n            </div>\n            <hr>\n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.taxDetails;let z=index;\">\n                <div class=\"col-sm-1\">\n                </div>\n                <div class=\"col-sm-4\">\n                    <label> {{jwmodalpopup.taxName[z]}} </label>\n                </div>\n                <div class=\"col-sm-1\">\n                  :\n                </div>\n                <div class=\"col-sm-6\">\n                    {{popupUser.popupForm.value[val]|uppercase}}\n                </div>\n            </div>\n            <br>\n            <button class=\"pull-right\" [disabled]=\"readOnlyStatus\" mat-raised-button color=\"primary\">Final Submit</button>                                                    \n            \n            </form>\n            \n      </div>   \n</jw-modal>\n","<form (ngSubmit)=\"onSubmit()\">\r\n          <hr style=\"border:2px solid green;\">\r\n          <!--First Section -->\r\n          <h3><strong>Entity Details:</strong> </h3>\r\n\r\n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.entityDetails;let z=index;\">\r\n                <div class=\"col-sm-1\">\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                   <label> {{jwmodalpopup.entityName[z]}} </label>\r\n                </div>\r\n                <div class=\"col-sm-1\">\r\n                  :\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    {{data.formdata[val]}}\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <h3><strong>Contact Details:</strong> </h3>\r\n          \r\n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.contactDetails;let z=index;\">\r\n                <div class=\"col-sm-1\">\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <label> {{jwmodalpopup.contactName[z]}} </label>\r\n                </div>\r\n                <div class=\"col-sm-1\">\r\n                  :\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    {{data.formdata[val]}}\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <h3><strong>Bank  Details:</strong> </h3>\r\n          \r\n            <div *ngFor=\"let val of jwmodalpopup.bankDetails;let z=index;\">\r\n                <div *ngIf=\"data.formdata[val]\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-1\">\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <label> {{jwmodalpopup.bankName[z]}} </label>\r\n                    </div>\r\n                    <div class=\"col-sm-1\">\r\n                    :\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        {{data.formdata[val]}}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <h3><strong>TAX  Details:</strong> </h3>\r\n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.taxDetails;let z=index;\">\r\n                <div class=\"col-sm-1\">\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <label> {{jwmodalpopup.taxName[z]}} </label>\r\n                </div>\r\n                <div class=\"col-sm-1\">\r\n                  :\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    {{data.formdata[val]|uppercase}}\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <button class=\"pull-right\"  mat-raised-button color=\"primary\">Final Submit</button>                                                    \r\n            \r\n            </form>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Post,ContactDetails, DeviationCharges } from '../shared/form-data.model';\r\nimport { FormGroup, FormControl, Validators, FormArray, FormGroupName, FormBuilder } from \"@angular/forms\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport { ConfirmedValidator, ConfirmedValidator1 } from '../shared/validator';\r\n\r\n@Injectable({providedIn:'root'})\r\n\r\nexport class PostsService {\r\n    error=new Subject<string>();\r\n    randomNumber:Number;\r\n    constructor(private http:HttpClient,private fb:FormBuilder){}\r\n\r\n \r\n  // Form Builder \r\n  //order of accounts in DSM(1),RRAS(4),AGC(5),REACTIVE(2),SCED(6)\r\n signupForm=this.fb.group({\r\n    'entityName':[null],\r\n    'regAddress':[null,[Validators.required]],\r\n    'region':['South',[Validators.required]],\r\n    'userCategory':[null],\r\n    'contactName':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\r\n    'designation':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\r\n    'telephone':[null,[Validators.required,Validators.pattern(\"^[0-9]*$\")]],\r\n    'contactName2':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\r\n    'designation2':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\r\n    'telephone2':[null,[Validators.required,Validators.pattern(\"^[0-9]*$\")]],\r\n    'contactName3':[null],\r\n    'designation3':[null],\r\n    'telephone3':[null],\r\n\r\n    'accountName':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\r\n    'accountNumber':[\"\",[Validators.required,Validators.pattern(\"^[0-9]*$\")]],\r\n    'confirmaccNumber':[\"\"],\r\n    'bankName':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\r\n    'branchName':[null,[Validators.required,Validators.pattern('^[a-zA-Z ]*$')]],\r\n    'ifscCode':[null,[Validators.required]],\r\n    // 'image': new FormControl(null, [Validators.required]),\r\n\r\n    'accountName2':[null],\r\n    'accountNumber2':[\"\"],\r\n    'confirmaccNumber2':[\"\"],\r\n    'bankName2':[null],\r\n    'branchName2':[null],\r\n    'ifscCode2':[null],\r\n\r\n    'accountName3':[null],\r\n    'accountNumber3':[\"\"],\r\n    'confirmaccNumber3':[\"\"],\r\n    'bankName3':[null],\r\n    'branchName3':[null],\r\n    'ifscCode3':[null],\r\n\r\n    'accountName4':[null],\r\n    'accountNumber4':[\"\"],\r\n    'confirmaccNumber4':[\"\"],\r\n    'bankName4':[null],\r\n    'branchName4':[null],\r\n    'ifscCode4':[null],\r\n\r\n    'accountName5':[null],\r\n    'accountNumber5':[\"\"],\r\n    'confirmaccNumber5':[\"\"],\r\n    'bankName5':[null],\r\n    'branchName5':[null],\r\n    'ifscCode5':[null],\r\n\r\n    'accountName6':[null],\r\n    'accountNumber6':[\"\"],\r\n    'confirmaccNumber6':[\"\"],\r\n    'bankName6':[null],\r\n    'branchName6':[null],\r\n    'ifscCode6':[null],\r\n    'pannumber':[null,Validators.required],\r\n    'tannumber':[null,Validators.required],\r\n    'gstinnumber':[null,Validators.required]\r\n },\r\n { \r\n  // validator: ConfirmedValidator('accountNumber', 'confirmaccNumber','accountNumber2', 'confirmaccNumber2',\r\n  // 'accountNumber3', 'confirmaccNumber3'),\r\n  validator:[ConfirmedValidator1('accountNumber','confirmaccNumber'),\r\n              ConfirmedValidator1('accountNumber2','confirmaccNumber2'),\r\n              ConfirmedValidator1('accountNumber3','confirmaccNumber3'),\r\n              ConfirmedValidator1('accountNumber4','confirmaccNumber4'),\r\n              ConfirmedValidator1('accountNumber5','confirmaccNumber5'),\r\n              ConfirmedValidator1('accountNumber6','confirmaccNumber6')]\r\n \r\n}\r\n );\r\n\r\n\r\n\r\n  popupForm:FormGroup=new FormGroup({\r\n    'entityName':new FormControl(null),\r\n    'regAddress':new FormControl(null),\r\n    'region':new FormControl('South'),\r\n    'userCategory':new FormControl(null),\r\n    'contactName':new FormControl(null),\r\n    'designation':new FormControl(null),\r\n    'telephone':new FormControl(null),\r\n    'contactName2':new FormControl(null),\r\n    'designation2':new FormControl(null),\r\n    'telephone2':new FormControl(null),\r\n    'contactName3':new FormControl(null),\r\n    'designation3':new FormControl(null),\r\n    'telephone3':new FormControl(null),\r\n    'accountName':new FormControl(null),\r\n    'accountNumber':new FormControl(null),\r\n    'bankName':new FormControl(null),\r\n    'branchName':new FormControl(null),\r\n    'ifscCode':new FormControl(null),\r\n\r\n    'accountName2':new FormControl(null),\r\n    'accountNumber2':new FormControl(null),\r\n    'bankName2':new FormControl(null),\r\n    'branchName2':new FormControl(null),\r\n    'ifscCode2':new FormControl(null),\r\n\r\n    'accountName3':new FormControl(null),\r\n    'accountNumber3':new FormControl(null),\r\n    'bankName3':new FormControl(null),\r\n    'branchName3':new FormControl(null),\r\n    'ifscCode3':new FormControl(null),\r\n\r\n    'accountName4':new FormControl(null),\r\n    'accountNumber4':new FormControl(null),\r\n    'bankName4':new FormControl(null),\r\n    'branchName4':new FormControl(null),\r\n    'ifscCode4':new FormControl(null),\r\n\r\n    'accountName5':new FormControl(null),\r\n    'accountNumber5':new FormControl(null),\r\n    'bankName5':new FormControl(null),\r\n    'branchName5':new FormControl(null),\r\n    'ifscCode5':new FormControl(null),\r\n\r\n    'accountName6':new FormControl(null),\r\n    'accountNumber6':new FormControl(null),\r\n    'bankName6':new FormControl(null),\r\n    'branchName6':new FormControl(null),\r\n    'ifscCode6':new FormControl(null),\r\n\r\n    'pannumber':new FormControl(null),\r\n    'tannumber':new FormControl(null),\r\n    'gstinnumber':new FormControl(null),\r\n    'validfrom':new FormControl(null),\r\n    'validtill':new FormControl(null),\r\n    'remarks':new FormControl(\"Check all details\"),\r\n    'adminremarks':new FormControl(null),\r\n    'shortName':new FormControl(null),\r\n    'id':new FormControl(null)\r\n\r\n  });\r\n\r\n\r\n  \r\n    onSendPosts(postData:Post,reg_id)\r\n    {  \r\n      this.randomNumber=Math.floor(Math.random() * 10000)+1;\r\n      \r\n      return  this.http.post('http://127.0.0.1:8000/formData',{postData,regid:reg_id,random:this.randomNumber},{headers: {'Content-Type': 'multipart/form-data; charset=utf-8'}})\r\n      \r\n    }\r\n      \r\n   \r\n   \r\n    onFetchPosts(){\r\n\r\n     return this.http.get<Post[]>(\"http://127.0.0.1:8000/fetchData\")\r\n      //  return this.http.get<Post[]>('https://angular-guide-b27a7.firebaseio.com/Registration.json',\r\n      //  {\r\n      //      headers:new HttpHeaders({'Custom-Header':'Fetching User Posts'})\r\n      //      //It is Optional Header\r\n      //  })\r\n        .pipe(\r\n          map(responseData => {\r\n            const postsArray:Post[]=[];\r\n            for (const key in responseData) {\r\n              if (responseData.hasOwnProperty(key)) {\r\n                \r\n                postsArray.push({ ...responseData[key], id: responseData[key]['id'] });\r\n                \r\n              }\r\n            }\r\n            return postsArray;\r\n          }),\r\n          catchError(errorRes =>{\r\n              //Send to analytics server ,it is optional\r\n              return throwError(errorRes);\r\n          })\r\n        )\r\n    }\r\n\r\n  \r\n    populateForm(viewContent) {\r\n       console.log(\"popup content\",viewContent);\r\n        // this.popupForm.patchValue(_.omit(viewContent,'id'));\r\n        this.popupForm.patchValue(viewContent);\r\n        console.log(this.popupForm.value);\r\n      }\r\n    approveForm(key,remarks:string) {\r\n      \r\n      return this.http.post('http://127.0.0.1:8000/approvedForm',{data:{Rowid:key,adminremarks:remarks}});\r\n      }\r\n\r\n    deleteUser(rowId,remarks:string){\r\n      \r\n      return this.http.post('http://127.0.0.1:8000/rejectedForm',{rowId,remarks_column:remarks});\r\n      }\r\n    configurationData(formData,fileContents){\r\n      \r\n        return  this.http.post<DeviationCharges[]>('http://127.0.0.1:8000/file/storeConfigured',\r\n        {formData:formData,\r\n        fileData:fileContents})\r\n        .pipe(\r\n          map(responseData => {\r\n          \r\n            const configuredData:DeviationCharges[]=[];\r\n            for (const key in responseData) {\r\n              if (responseData.hasOwnProperty(key)) {\r\n                \r\n                configuredData.push({ ...responseData[key]});\r\n                console.log(\"configurted one\",configuredData);\r\n                \r\n              }\r\n            }\r\n            return configuredData;\r\n          }),\r\n          catchError(errorRes =>{\r\n              //Send to analytics server ,it is optional\r\n              return throwError(errorRes);\r\n          })\r\n        )\r\n      }\r\n    showFile(jsonData){\r\n    \r\n      return this.http.post('http://127.0.0.1:8000/file/showFile',jsonData).pipe(\r\n        map(res=>{\r\n          const configuredData1:DeviationCharges[]=[];\r\n            for (const key in res) {\r\n              if (res.hasOwnProperty(key)) {\r\n                \r\n                configuredData1.push({ ...res[key]});\r\n                console.log(\"Pop Up Data\",configuredData1);\r\n                \r\n              }\r\n            }\r\n            return configuredData1;\r\n        }),\r\n        catchError(errorRes =>{\r\n          //Send to analytics server ,it is optional\r\n          return throwError(errorRes);\r\n      })\r\n    ) \r\n    }\r\n    validateFile(jsonData){\r\n    \r\n      return this.http.post('http://127.0.0.1:8000/file/validateJson',jsonData).pipe(\r\n        map(res=>{\r\n          var non_users:Array<string>=[];\r\n          console.log(res);\r\n          for(const key in res){\r\n              non_users.push(res[key]);\r\n          }\r\n          return non_users\r\n          // const configuredData1:DeviationCharges[]=[];\r\n          //   for (const key in res) {\r\n          //     if (res.hasOwnProperty(key)) {\r\n                \r\n          //       configuredData1.push({ ...res[key]});\r\n          //       console.log(\"Pop Up Data\",configuredData1);\r\n                \r\n          //     }\r\n          //   }\r\n          //   return configuredData1;\r\n        }),\r\n        catchError(errorRes =>{\r\n          //Send to analytics server ,it is optional\r\n          return throwError(errorRes);\r\n      })\r\n    ) \r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ChatMessage } from '../shared/chat-message.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatServiceService {\n\n  chatMessage: ChatMessage;\n  chatMessages:any;\n  feed:Array<string>[]=[];\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  constructor(private http:HttpClient,private router:Router) {\n    if(!this.currentUser)\n    {\n      this.router.navigate(['/auth']);\n    }\n   }\n\n  sendMessage(msg: string) {\n\n   \n    this.http.post('http://127.0.0.1:8000/file/chatMessages',{message: msg,\n      sender:this.currentUser['userName'],short_name: this.currentUser.shortName}).subscribe(res=>{\n        console.log(\"success\",res);\n      })\n    \n  }\n  getUsers()\n  {\n    return this.http.get('http://127.0.0.1:8000/file/chatUsers')\n  }\n\n  getMessages(sender:string,receiver:string){\n    return this.http.post('http://127.0.0.1:8000/file/getMessages',{sender:sender,receiver:receiver})\n  }\n\n  \n  \n}\n","import { Injectable} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n\n  \n  constructor(private http:HttpClient) { }\n\n  \n}\n","import { NgModule } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule} from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatTooltipModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatSnackBarModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n\r\n   \r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatTooltipModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatSnackBarModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  \r\n  ],\r\n  declarations: []\r\n})\r\nexport class MaterialModule {}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PopupDataService {\n\n  entityDetails=['entityName','regAddress','region','userCategory']\n  contactDetails=['contactName','designation','telephone','contactName2','designation2','telephone2',\n  'contactName3','designation3','telephone3',]\n  bankDetails=['accountName','accountNumber','bankName','branchName','ifscCode',\n  'accountName2','accountNumber2','bankName2','branchName2','ifscCode2',\n  'accountName3','accountNumber3','bankName3','branchName3','ifscCode3',\n  'accountName4','accountNumber4','bankName4','branchName4','ifscCode4',\n  'accountName5','accountNumber5','bankName5','branchName5','ifscCode5',\n  'accountName6','accountNumber6','bankName6','branchName6','ifscCode6']\n\n  entityName=['Entity Name','Reg.Address','Region','User Category']\n  contactName=['Contact Name','Designation','Telephone','Contact Name2','Designation2','Telephone2',\n  'Contact Name3','Designation3','Telephone3']\n\n  bankName=['DSM Account Name','DSM Account Number','Bank Name','Branch Name','IFSC Code',\n  'REACTIVE Account Name','REACTIVE Account Number','Bank Name','Branch Name','IFSC Code',\n  'CONGESTION Account Name','CONGESTION Account Number','Bank Name','Branch Name','IFSC Code',\n  'RRAS Account Name','RRAS Account Number','Bank Name','Branch Name','IFSC Code',\n  'AGC Account Name','AGC Account Number','Bank Name','Branch Name','IFSC Code',\n  'SCED Account Name','SCED Account Number','Bank Name','Branch Name','IFSC Code']\n\n  taxDetails=['pannumber','tannumber','gstinnumber']\n  taxName=['PAN Number','TAN Number','GSTIN Number']\n\n  validityName=['Valid From','Valid Till']\n  validityDetails=['validfrom','validtill']\n  constructor() { }\n\n  ngOnInit(){\n\n  }\n}\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string,\r\n                                controlName2: string, matchingControlName2: string ,\r\n                                controlName3: string, matchingControlName3: string)\r\n                                {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        const control2 = formGroup.controls[controlName2];\r\n        const matchingControl2 = formGroup.controls[matchingControlName2];\r\n        const control3 = formGroup.controls[controlName3];\r\n        const matchingControl3 = formGroup.controls[matchingControlName3];\r\n\r\n        if ((matchingControl.errors && !matchingControl.errors.confirmedValidator)&&\r\n        (matchingControl2.errors && !matchingControl2.errors.confirmedValidator)&&\r\n        (matchingControl3.errors && !matchingControl3.errors.confirmedValidator)) {\r\n            \r\n            return;\r\n        }\r\n        if ((control.value !== matchingControl.value)&&\r\n        (control2.value !== matchingControl2.value) &&\r\n        (control3.value !== matchingControl3.value)) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n\r\nexport function ConfirmedValidator1(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PostsService } from 'src/app/registration/registration.service';\nimport { ModalService } from 'src/app/_modal';\nimport { PopupDataService } from 'src/app/shared/popup-data.service';\n\n@Component({\n  selector: 'app-all-users',\n  templateUrl: './all-users.component.html',\n  styleUrls: ['./all-users.component.css']\n})\nexport class AllUsersComponent implements OnInit {\n\n  allUsersList=[];\n  imageURLList:Array<string>[]=[];\n  emptyList:boolean=true;\n  constructor(private http:HttpClient,public popupUser:PostsService,private modalService:ModalService,\n    public jwmodalpopup:PopupDataService) { }\n\n  ngOnInit() {\n\n    this.http.get('http://127.0.0.1:8000/get-all-users').subscribe(res=>\n    {\n      \n      for(const key in res)\n      {\n        \n        this.allUsersList.push(res[key]);\n      }\n    },\n    error=>{\n      console.log(\"error occured\",error);\n    })\n  }\n\n  openModal(id: string,ref:string) {\n    \n    this.popupUser.popupForm.patchValue(this.allUsersList[ref]);\n    this.modalService.open(id);\n  }\n\n  openModal1(id: string,ref:string) {\n    this.http.post('http://127.0.0.1:8000/getimageurls',this.allUsersList[ref]['register_id']).subscribe(res=>{\n    \n        this.imageURLList=[];\n          for(const key in res)\n          {\n            this.imageURLList.push(res[key]);\n\n          }\n          if(this.imageURLList.length > 1)\n          {\n            this.emptyList=false;\n          }\n          console.log(this.imageURLList.length);\n        });\n\n       \n        \n    this.modalService.open(id);\n    \n  }\n  \n  \n  closeModal(id: string) {\n    this.modalService.close(id);\n  }\n  \n}\n","<div>\n<app-header></app-header>\n</div>\n<br>\n<div class=\"container\">\n    <mat-card >\n        <table class=\"table\">\n            <thead class=\"thead-light\">\n                <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Full Name</th>\n                <th scope=\"col\">User Category</th>\n                <th scope=\"col\">Register Id</th>\n                <th scope=\"col\">Actions</th>\n                <th scope=\"col\">Docs</th>\n                </tr>\n            </thead>\n            <tbody *ngFor=\"let user of allUsersList;let z=index;\">\n                <tr>\n                <td>{{z+1}}</td>\n                <td>{{user.entityName}}</td>\n                <td>{{user.userCategory}}</td>\n                <td>{{user.register_id}}</td>\n                <td><button mat-raised-button color=\"primary\" (click)=\"openModal('view-modal',z)\" type=\"button\">View</button></td>\n                <td><button mat-raised-button color=\"primary\" (click)=\"openModal1('docs-modal',z)\" type=\"button\">Docs</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </mat-card>\n</div>\n<jw-modal id=\"view-modal\">\n    <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('view-modal');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    <br>\n      <div style=\"height:1580px;\">\n          <form [formGroup]=\"popupUser.popupForm\">\n          <hr style=\"border:2px solid green;\">\n          <!--First Section -->\n          <h3><strong>Entity Details:</strong> </h3>\n          \n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.entityDetails;let z=index;\">\n                <div class=\"col-sm-1\">\n                </div>\n                <div class=\"col-sm-4\">\n                   <label> {{jwmodalpopup.entityName[z]}} </label>\n                   \n                </div>\n                <div class=\"col-sm-1\">\n                  :\n                </div>\n                <div class=\"col-sm-6\">\n                    {{popupUser.popupForm.value[val]}}\n                </div>\n            </div>\n            <hr>\n            <h3><strong>Contact Details:</strong> </h3>\n          \n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.contactDetails;let z=index;\">\n                <div class=\"col-sm-1\">\n                </div>\n                <div class=\"col-sm-4\">\n                    <label> {{jwmodalpopup.contactName[z]}} </label>\n                </div>\n                <div class=\"col-sm-1\">\n                  :\n                </div>\n                <div class=\"col-sm-6\">\n                    {{popupUser.popupForm.value[val]}}\n                </div>\n            </div>\n            <hr>\n            <h3><strong>Bank  Details:</strong> </h3>\n          \n            <div *ngFor=\"let val of jwmodalpopup.bankDetails;let z=index;\">\n                <div *ngIf=\"popupUser.popupForm.value[val]\">\n                <div class=\"row\">\n                    <div class=\"col-sm-1\">\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <label> {{jwmodalpopup.bankName[z]}} </label>\n                    </div>\n                    <div class=\"col-sm-1\">\n                    :\n                    </div>\n                    <div class=\"col-sm-6\">\n                        {{popupUser.popupForm.value[val]}}\n                    </div>\n                </div>\n                </div>\n            </div>\n            <hr>\n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.taxDetails;let z=index;\">\n                <div class=\"col-sm-1\">\n                </div>\n                <div class=\"col-sm-4\">\n                    <label> {{jwmodalpopup.taxName[z]}} </label>\n                </div>\n                <div class=\"col-sm-1\">\n                  :\n                </div>\n                <div class=\"col-sm-6\">\n                    {{popupUser.popupForm.value[val]|uppercase}}\n                </div>\n            </div>\n            <hr>\n            <div class=\"row\" *ngFor=\"let val of jwmodalpopup.validityDetails;let z=index;\">\n                <div class=\"col-sm-1\">\n                </div>\n                <div class=\"col-sm-4\">\n                    <label> {{jwmodalpopup.validityName[z]}} </label>\n                </div>\n                <div class=\"col-sm-1\">\n                  :\n                </div>\n                <div class=\"col-sm-6\">\n                    {{popupUser.popupForm.value[val]|date:'dd-MM-yyyy'}}\n                </div>\n            </div>\n            </form>\n        </div>\n</jw-modal>\n\n<!--Docs Popup --->\n<jw-modal id=\"docs-modal\" style=\"width:50px;\">\n    <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('docs-modal');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n    <br>\n      <div style=\"height:200px;\">\n          <div class=\"form-row\">\n                <div class=\"form-group\">\n                  <label>Attachments </label><br>\n                    <div *ngFor=\"let url of imageURLList;let i = index\">\n                      <a [attr.href]=\"'//'+ url\" target=\"_blank\">{{url}}</a>\n                    </div>\n                    <p *ngIf=\"emptyList\"> No attachments found </p>\n                </div>\n              </div>\n        </div>\n</jw-modal>\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { PostsService } from '../registration/registration.service';\nimport { Post } from '../shared/form-data.model';\nimport {MatDialog,MatDialogConfig, MatDialogRef} from '@angular/material/dialog';\nimport { RegistrationComponent } from '../registration/registration.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatPaginatorModule, MatPaginator} from '@angular/material/paginator';\nimport {MatSortModule, MatSort} from '@angular/material/sort';\nimport { RegisterPopupComponent } from '../registration/register-popup/register-popup.component';\nimport { Subject, throwError } from 'rxjs';\nimport { NotificationService } from '../registration/notification.service';\nimport { ModalService } from '../_modal';\nimport { BigModalService } from '../_bigmodal';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { FileLikeObject, FileUploader } from 'ng2-file-upload';\n@Component({\n  selector: 'app-super-user',\n  templateUrl: './super-user.component.html',\n  styleUrls: ['./super-user.component.css']\n \n})\nexport class SuperUserComponent implements OnInit {\n  \n  allowHeader=true;\n  loadedPosts:Post[]=[];\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  listData: MatTableDataSource<Post>;\n  error=new Subject<string>();\n  shortName:string;\n  searchKey:string;\n  imageURLList:Array<string>[]=[];\n  emptyList:boolean=false;\n  selectedRow:string;\n  isFinance:boolean=false;\n  financeRemarks:string;\n  status:boolean=false;\n  status1:boolean=false;\n  isreadOnly:boolean=false;\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  displayedColumns: string[] = ['entityName','userCategory','applicationNo','accountNo','branchName','actions'];\n  public uploader: FileUploader = new FileUploader({});\n  public hasBaseDropZoneOver: boolean = false;\n  constructor(private posts:PostsService,public dialog:MatDialog,\n        private crudData:PostsService,\n        private notificationService:NotificationService,\n        private modalService: ModalService,\n        private modalService1: BigModalService,\n        public popupUser:PostsService,\n        private http:HttpClient) { \n \n  }\n \n  approvaldocs:FormGroup=new FormGroup({\n    'pannumber':new FormControl(null,Validators.required),\n    'gstinnumber':new FormControl(null,Validators.required)\n  })\n\n  ngOnInit(): void {\n    this.popupUser;\n\n    \n    this.posts.onFetchPosts().subscribe(\n      posts=>{\n            console.log('After Mapping',posts);\n            this.listData = new MatTableDataSource(posts);\n            \n            this.listData.sort=this.sort;\n            this.listData.paginator=this.paginator;\n            this.loadedPosts=posts;\n       \n      }\n    );\n\n    if(this.currentUser.usertype == 'Finance'){\n      this.isFinance=true;\n      this.isreadOnly=false;\n    }\n    else{\n      this.isreadOnly=true;\n    }\n  }\n// Filter Contents \n  onSearchClear() {\n    this.searchKey = \"\";\n    this.applyFilter();\n  }\n\n  applyFilter() {\n    this.listData.filter = this.searchKey.trim().toLowerCase();\n  }\n  onSubmit(){\n    this.allowHeader=false;\n    \n  }\n  \n  \n  onOpen(){\n    \n    // console.log(this.loadedPosts[+indexEl]);\n    // this.dialog.open(RegistrationComponent)\n  }\n\n  onEdit(row){\n    \n    this.crudData.populateForm(row);\n    this.selectedRow=row.id;\n    this.http.post('http://127.0.0.1:8000/getimageurls',row.register_id).subscribe(res=>{\n    \n      this.imageURLList=[];\n      for(const key in res){\n         \n        this.imageURLList.push(res[key]);\n          }\n        });\n\n        if(this.imageURLList.length<1){\n          this.emptyList=true;\n        }\n        console.log(\"response\",this.imageURLList);\n  \n  }\n\n  checkDetails(status:string){\n\n    this.http.post('http://127.0.0.1:8000/financeVerification',{rowid:this.selectedRow,status:status,remarks:this.popupUser.popupForm.value['remarks']}).subscribe(res=>{\n      \n      this.modalService.close('edit-modal');\n      if(status =='approve'){\n        this.notificationService.success(\"Approved Successfully\");\n      }\n      else if(status =='reject'){\n        this.notificationService.warn(\"Rejected Successfully\");\n      }\n      \n    },error=>{\n      \n      this.notificationService.warn(\"Error Occured\");\n    })\n  }\n\n  \n  fileOverBase(event):  void {\n    this.hasBaseDropZoneOver  =  event;\n  }\n  getFiles(): FileLikeObject[] {\n    return this.uploader.queue.map((fileItem) => {\n      return fileItem.file;\n    });\n  }\n  upload(id:string){\n\n    let files = this.getFiles();\n    let requests = [];\n    // files.forEach((file) => {\n      let extension=files[0].name\n      let formData = new FormData();\n      formData.append('file' , files[0].rawFile, this.selectedRow+'@'+id+extension);\n         \n      return this.http.post('http://127.0.0.1:8000/imageData',formData).subscribe(res=>{\n        this.status=true;\n      },error=>{\n        this.notificationService.warn(\"Not Uploaded\")\n      }) \n  }\n\n  upload1(id:string){\n\n    let files = this.getFiles();\n    let requests = [];\n    // files.forEach((file) => {\n      let extension=files[0].name\n      let formData = new FormData();\n      formData.append('file' , files[0].rawFile, this.selectedRow+'@'+id+extension);\n         \n      return this.http.post('http://127.0.0.1:8000/imageData',formData).subscribe(res=>{\n        this.status1=true;\n      },error=>{\n        this.notificationService.warn(\"Not Uploaded\")\n      }) \n  }\n  onApprove(){\n    \n    this.crudData.approveForm(this.selectedRow,this.popupUser.popupForm.value['adminremarks']).subscribe(\n      responseData =>{\n        console.log(\"Approved Response\",responseData);\n        this.posts.onFetchPosts().subscribe(\n          posts=>{\n            this.listData = new MatTableDataSource(posts);\n            this.listData.sort=this.sort;\n            this.listData.paginator=this.paginator;\n            this.loadedPosts=posts;\n            this.notificationService.success('! Approved successfully');\n          }\n        );\n        \n      }\n    );\n    \n    \n  }\n  \n  onDelete(){\n    \n   \n   this.crudData.deleteUser(this.selectedRow,this.popupUser.popupForm.value['adminremarks']).subscribe(\n    responseData =>{\n      this.posts.onFetchPosts().subscribe(\n        posts=>{\n          this.listData = new MatTableDataSource(posts);\n          this.listData.sort=this.sort;\n          this.listData.paginator=this.paginator;\n          this.loadedPosts=posts;\n          this.notificationService.warn('! Rejected successfully');\n        }\n      );\n      \n    },error=>{\n        this.error.next(error.message);\n    }\n  );\n  \n  }\n  \n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n  f1(url:string){\n\n    const link = document.createElement('a');\n    link.setAttribute('target', '_blank');\n    link.setAttribute('attr.href', url);\n   \n    link.setAttribute('download', `cheque.jpeg`);\n    document.body.appendChild(link);\n    \n    link.click();\n    console.log(link);\n    link.remove();\n   \n  }\n  \nopenModal1(id: string) {\n    this.modalService1.open(id);\n}\n\ncloseModal(id: string) {\n    this.modalService.close(id);\n}\n\ncloseModal1(id: string) {\n    this.modalService1.close(id);\n}\n  \n}\n"," <div>\n<app-header></app-header>\n</div>\n<br>\n<br>\n<!-- Filter Contents  -->\n<div class=\"search-div\">\n  <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\n    <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\n    <button mat-button matSuffix mat-icon-button aria-label=\"Clear\"*ngIf=\"searchKey\"  (click)=\"onSearchClear()\">\n    <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n  \n</div>\n<div class=\"mat-elevation-z8\">\n  <mat-table [dataSource]=\"listData\" matSort>\n    <!-- First Column Entity Name -->\n    <ng-container matColumnDef=\"entityName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Entity Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.entityName}}</mat-cell>\n    </ng-container>\n     <!-- Second Column user Category -->\n    <ng-container matColumnDef=\"userCategory\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>User Category</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.userCategory}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"applicationNo\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Application No</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.id}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"accountNo\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Account No</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.accountNumber}}</mat-cell>\n    </ng-container>\n\n     <ng-container matColumnDef=\"branchName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Branch Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.branchName}}</mat-cell>\n    </ng-container>\n    <!-- View Component Operations -->\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n    <!----------------- Starting of modal form-88**************************************** -->\n          <jw-modal id=\"edit-modal\">\n            <button class=\"btn-dialog-close pull-right\"  mat-stroked-button (click)=\"closeModal('edit-modal');\" tabIndex=\"-1\"><mat-icon>clear</mat-icon></button>\n            <br>\n          <div style=\"height:1550px;\">\n           <form [formGroup]=\"popupUser.popupForm\" >\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label> Entity Name </label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"entityName\" readOnly>\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label> Reg Address </label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"regAddress\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                    <label> Region</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"region\" readOnly>\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label> User Category</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"userCategory\" readOnly>\n                </div>\n              </div>\n            <!-- Contact Person Details -->\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                    <label> Contact Name </label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"contactName\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Designation</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"designation\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Telephone</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"telephone\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                      <label> Contact Name 2</label>\n                      <input type=\"text\" class=\"form-control\" formControlName=\"contactName2\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Designation 2</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"designation2\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label> Telephone 2</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"telephone2\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                    <label> Contact Name 3</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"contactName3\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> Designation 3</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"designation3\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> Telephone 3</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"telephone3\" readOnly>\n                </div>\n              </div>\n            <!-- Bank Details -->\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label> Account Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountName\" readOnly>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <label> Account Number</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountNumber\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                  <label> Bank Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"bankName\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> Branch Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"branchName\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> IFSC CODE</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"ifscCode\" readOnly>\n                </div>\n              </div>\n            <!--RRASBank Details -->\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label> RRAS Account Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountName2\" readOnly>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <label>RRAS Account Number</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountNumber2\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                  <label> Bank Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"bankName2\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> Branch Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"branchName2\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> IFSC CODE</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"ifscCode2\" readOnly>\n                </div>\n              </div>\n            <!-- Congestion Bank Details-->\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label>Congestion Account Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountName3\" readOnly>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <label>Congestion Account Number</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountNumber3\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                  <label> Bank Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"bankName3\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> Branch Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"branchName3\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> IFSC CODE</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"ifscCode3\" readOnly>\n                </div>\n              </div> \n          <!-- RRAS Bank Details -->\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label>RRAS Account Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountName4\" readOnly>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <label>RRAS Account Number</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountNumber4\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                  <label> Bank Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"bankName4\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> Branch Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"branchName4\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> IFSC CODE</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"ifscCode4\" readOnly>\n                </div>\n              </div> \n          <!-- AGC Bank Details -->\n          <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label>AGC Account Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountName5\" readOnly>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <label>AGC Account Number</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountNumber5\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                  <label> Bank Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"bankName5\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> Branch Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"branchName5\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> IFSC CODE</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"ifscCode5\" readOnly>\n                </div>\n              </div> \n          <!-- SCED Bank Details -->\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label>SCED Account Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountName6\" readOnly>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <label>SCED Account Number</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"accountNumber6\" readOnly>\n                </div>\n              </div>\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                  <label> Bank Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"bankName6\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> Branch Name</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"branchName6\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label> IFSC CODE</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"ifscCode6\" readOnly>\n                </div>\n              </div> \n            <!-- end of bank details -->\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-4\">\n                  <label>PAN Number</label>\n                  <input type=\"text\" class=\"form-control\" style=\"text-transform:uppercase\" formControlName=\"pannumber\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label>TAN Number</label>\n                  <input type=\"text\" class=\"form-control\" style=\"text-transform:uppercase\" formControlName=\"tannumber\" readOnly>\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label>GSTIN Number</label>\n                  <input type=\"text\" class=\"form-control\" style=\"text-transform:uppercase\" formControlName=\"gstinnumber\" readOnly>\n                </div>\n            </div>\n        \n            <!-- end of PAN  TAN GSTIN Details --->\n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label>Finance Remarks</label>\n                  <textarea type=\"text\" class=\"form-control\" [readOnly]=\"isreadOnly\" formControlName=\"remarks\"></textarea>  \n                </div>\n                <div class=\"form-group col-md-6\" *ngIf=\"!isFinance\">\n                  <label>Remarks</label>\n                  <textarea type=\"text\" class=\"form-control\" formControlName=\"adminremarks\"></textarea>  \n                </div>\n              </div>  \n              <div class=\"form-row\">\n                <div class=\"form-group col-md-6\">\n                  <label>Attachments </label>\n                    <div *ngFor=\"let url of imageURLList;let i = index\">\n                      <a [attr.href]=\"'//'+ url\" target=\"_blank\">{{url}}</a>\n                     <!-- <button (click)=\"f1(url)\">{{url}}</button> -->\n                    </div>\n                    <p *ngIf=\"!emptyList\"> No attachments found </p>\n                </div>\n              </div>                                                     \n            </form>\n            <button  class=\"pull-right\" *ngIf=\"isFinance\" mat-raised-button color=\"warn\" (click)=\"checkDetails('reject')\">Not Approve</button>\n            \n            <button class=\"pull-right\" *ngIf=\"isFinance\" mat-raised-button color=\"primary\" (click)=\"checkDetails('approve')\">Approve</button>\n\n            <button  class=\"pull-right\" *ngIf=\"!isFinance\" mat-raised-button color=\"warn\" color=\"warn\"  (click)=\"openModal1('custom-modal-2')\">Reject</button>\n            \n            <button class=\"pull-right\" *ngIf=\"!isFinance\" mat-raised-button color=\"primary\" (click)=\"openModal1('custom-modal-1')\">Approve</button>\n            </div>\n          <!-- Approve Modal Component-->\n            <jp-modal id=\"custom-modal-1\" style=\"width:250px;\">\n                \n                <h1>Are you sure want to Approve the form</h1><hr>\n                <button mat-raised-button color=\"primary\" (click)=\" onApprove()\">Yes</button>|\n                <button mat-raised-button color=\"warn\" (click)=\"closeModal1('custom-modal-1');\">No</button>\n                \n                  \n            </jp-modal>\n           \n          <!-- end of Approve-->\n          <!--Reject Modal Component -->\n            <jp-modal id=\"custom-modal-2\">\n                <h1>Are you sure want to Reject the form</h1><hr>\n                <button mat-raised-button color=\"primary\" (click)=\"onDelete()\">Yes</button>|\n                <button mat-raised-button color=\"warn\" (click)=\"closeModal1('custom-modal-2');\">No</button>\n            </jp-modal>\n          <!-- end of Reject Modal -->\n            \n        </jw-modal>\n          <!-- end of approve modal form -->\n         <!--Closing -->\n        <button mat-raised-button (click)=\"onEdit(row);openModal('edit-modal')\">View</button>|\n        </mat-cell>\n    </ng-container>\n    <!-- Initial Loading -->\n    <ng-container matColumnDef=\"loading\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        Loading data...\n      </mat-footer-cell>\n    </ng-container>\n    <!-- No data in Firebase-->\n    <ng-container matColumnDef=\"nodata\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        No data...\n      </mat-footer-cell>\n    </ng-container>\n\n  \n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':listData!=null}\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"['nodata']\" [ngClass]=\"{'hide':!(listData!=null && listData.data.length == 0)}\"></mat-footer-row>\n    </mat-table>\n     <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!--\n<ul class=\"list-group\" *ngIf=\"loadedPosts.length >= 1\">\n<li class=\"list-group-item\" *ngFor=\"let post of loadedPosts\">\n<h3> {{post.entityName}}</h3>\n<h3> {{post.region}}</h3>\n</li>\n</ul>\n\n<mat-grid-list [cols]=\"6\" rowHeight=\"350px\" >\n    <mat-grid-tile colspan=\"2\" *ngFor=\"let post of loadedPosts\" >\n    <mat-card *ngIf=\"allowHeader\">\n        <mat-card-header >\n            <mat-card-title>{{post.entityName}}</mat-card-title>\n            <mat-card-subtitle> {{post.region}} </mat-card-subtitle>\n        </mat-card-header>\n        <hr>\n        <mat-card-content>\n            <p> {{post.regAddress}} </p>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button color=\"primary\" (click)=\"onOpen()\" >View</button>\n            <button mat-button color=\"primary\" (click)=\"onSubmit()\">Destroy</button>\n        </mat-card-actions>\n    </mat-card>\n    </mat-grid-tile>\n</mat-grid-list>\n  \n-->\n<!-- Another POP UP MODAL -->\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ConfirmedValidator1 } from 'src/app/shared/validator';\nimport { FileUploader, FileLikeObject } from 'ng2-file-upload';\nimport { HttpClient } from '@angular/common/http';\nimport { UsercreationService } from '../usercreation.service';\nimport { NotificationService } from 'src/app/registration/notification.service';\nimport { ConfirmedValidator } from '../userdetails/userdetails.validator';\n\n@Component({\n  selector: 'app-mo-bankdetails',\n  templateUrl: './mo-bankdetails.component.html',\n  styleUrls: ['./mo-bankdetails.component.css']\n})\nexport class MoBankdetailsComponent implements OnInit {\n\n  status:boolean=false;\n  constructor(private fb1:FormBuilder,private http:HttpClient,private userservice:UsercreationService,private notification:NotificationService) { }\n\n  public uploader: FileUploader = new FileUploader({});\n  public hasBaseDropZoneOver: boolean = false;\n  currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n  bankdetails=this.fb1.group({\n    'accountname':new FormControl(null,Validators.required),\n    'bankname':new FormControl(null,Validators.required),\n    'accountnumber':new FormControl(null,Validators.required),\n    'confirmaccnumber':new FormControl(null,Validators.required),\n    'branchname':new FormControl(null,Validators.required),\n    'ifsccode':new FormControl(null,Validators.required),\n    'validfrom':new FormControl(null,Validators.required),\n    'validtill':new FormControl(null,Validators.required)\n  },\n  { \n    validator: ConfirmedValidator('accountnumber', 'confirmaccnumber')\n  }\n  )\n\n\n  get f(){\n    return this.bankdetails.controls;\n  }\n  \n  fileOverBase(event):  void {\n    this.hasBaseDropZoneOver  =  event;\n  }\n  getFiles(): FileLikeObject[] {\n    return this.uploader.queue.map((fileItem) => {\n      return fileItem.file;\n    });\n  }\n  ngOnInit(): void {\n  }\n\n  onAddDetails(){\n  \n    this.userservice.addBankDetails(this.bankdetails.value).subscribe(res=>{\n      console.log(res);\n      this.notification.success(\"Added Successfully\");\n      this.bankdetails.reset();\n\n    },error=>{\n      this.notification.warn(\"Failed to add details\");\n      console.log(\"error occured\",error);\n    });\n\n  }\n  upload(bankcheque){\n    let files = this.getFiles();\n    // let requests = [];\n    // // files.forEach((file) => {\n    let extension=files[0].name\n    console.log(files);\n    let formData = new FormData();\n    formData.append('file' , files[0].rawFile,this.currentUser.userName+'@'+bankcheque+extension);\n\n    this.http.post('http://127.0.0.1:8000/imageData',formData).subscribe(\n      res=>{\n        this.status=true;\n        this.uploader.clearQueue();\n      },\n      err => {  \n        console.log(err);\n      }\n    );   \n\n\n  }\n}\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"container\">\n    <form [formGroup]=\"bankdetails\" (ngSubmit)=\"onAddDetails()\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n                <div mat-card-avatar><span class=\"material-icons\">\n                person_add_alt_1\n                    </span>\n                </div>\n                <mat-card-title>SRLDC Pool Account Bank Details</mat-card-title>\n            </mat-card-header>\n            <hr>\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                <span class=\"material-icons\">\n                    person\n                </span>\n                <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                    <mat-label>Account Name</mat-label>\n                    <input matInput  placeholder=\"Entity Name\" value=\"\" formControlName=\"accountname\">\n                </mat-form-field>\n                </div>\n                <div class=\"col-sm-6\">\n            \n                <span class=\"material-icons\">\n                    announcement\n                </span>\n                <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                    <mat-label>Bank Name</mat-label>\n                    <input matInput  style=\"text-transform:uppercase\" formControlName=\"bankname\" placeholder=\"Ex. SBI\" value=\"\">\n                </mat-form-field>\n                </div>\n            </div>\n            <!-- Alias 1 & 2 -->\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                        <mat-label>Account Number</mat-label>\n                        <input matInput  placeholder=\"Short Name\" value=\"\" formControlName=\"confirmaccnumber\">\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.accountnumber.touched && f.accountnumber.invalid\">\n                        <p *ngIf=\"f.accountnumber.errors.required\">Account Number is required.</p>\n                    \n                    </mat-error>\n                </div>\n                <div class=\"col-sm-6\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                        <mat-label>Confirm Account Number</mat-label>\n                        <input matInput  placeholder=\"Short Name\" value=\"\" formControlName=\"accountnumber\">\n                    </mat-form-field>\n                    <mat-error *ngIf=\"f.confirmaccnumber.touched && f.confirmaccnumber.invalid\">\n                        <p *ngIf=\"f.confirmaccnumber.errors.required\">Confirm Acc Number is required.</p>\n                        <p *ngIf=\"f.confirmaccnumber.errors.confirmedValidator\">Account Number and Confirm Account Number Must Match</p>\n                    </mat-error>\n                </div>\n            </div>\n            <!-- Alias 3 -->\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                        <mat-label>Branch Name</mat-label>\n                        <input matInput placeholder=\"Branch Name\" formControlName=\"branchname\"  value=\"\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-6\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                        <mat-label>IFSC Code</mat-label>\n                        <input matInput style=\"text-transform:uppercase\" formControlName=\"ifsccode\"  placeholder=\"Short Name\" value=\"\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <span class=\"material-icons\">\n                        date_range\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                        <mat-label>Valid From </mat-label>\n                        <input matInput [matDatepicker]=\"picker1\"  placeholder=\"MM/DD/YYYY\" formControlName=\"validfrom\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker1></mat-datepicker>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-sm-6\">\n                    <span class=\"material-icons\">\n                        date_range\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                        <mat-label>Valid Till </mat-label>\n                        <input matInput [matDatepicker]=\"picker\" placeholder=\"MM/DD/YYYY\" formControlName=\"validtill\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <p style=\"padding-left:15px;\">Note: Please Choose the File of any Proof of Bank Account </p>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <input type=\"file\"  placeholder=\"Upload Proof of bank account\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\"  accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n                </div>\n                <div class=\"col-sm-4\">\n                    <button (click)=\"upload('bankcheque')\" type=\"button\">Upload file</button>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span *ngIf=\"status\" class=\"material-icons givecolor\">\n                    check_circle_outline\n                    </span>\n                </div>\n            </div> \n            <br>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\"  type=\"submit\" [disabled]=\"!bankdetails.valid\">Add Details</button>\n            </mat-card-actions>\n        </mat-card>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { UsercreationService } from './usercreation.service';\nimport { NotificationService } from '../registration/notification.service';\nimport { FileUploader, FileLikeObject } from 'ng2-file-upload';\n\n@Component({\n  selector: 'app-usercreation',\n  templateUrl: './usercreation.component.html',\n  styleUrls: ['./usercreation.component.css']\n})\nexport class UsercreationComponent implements OnInit {\n\n  status1:boolean=false;\n  userCategory:Array<string>=['Generating Station','Seller','Buyer','Transmission Licensee',\n                              'Distribution Licensee','Trading Licensee','Power Exchange',\n                            'Battery Energy Storage system','QCA / Aggregators','Others'];\n\n  userPrivileges:Array<string>=['General Member','Finance']\n  constructor(private fb:FormBuilder,private http:HttpClient,\n    private newuser:UsercreationService,\n    private notificationService:NotificationService) { }\n  \n  public uploader: FileUploader = new FileUploader({});\n  public hasBaseDropZoneOver: boolean = false;\n  ngOnInit(): void {\n  }\n  userCreation=this.fb.group({\n    'fullname':[null,Validators.required],\n    'dateofregistration':[null,Validators.required],\n    'shortname':[null,Validators.required],\n    'userCategory':[null,Validators.required],\n    'userPrivileges':['General Member',Validators.required],\n    'mobileno':[null,Validators.required],\n    'entityname':[null,Validators.required],\n    'fncid':[null,Validators.required],\n    'email':[\"test@test.com\",Validators.required],\n    'alias1':[null,Validators.required],\n    'alias2':[null,Validators.required],\n    'alias3':[null,Validators.required],\n    'alias4':[null],\n  })\n\n  fileOverBase(event):  void {\n    this.hasBaseDropZoneOver  =  event;\n  }\n  getFiles(): FileLikeObject[] {\n    return this.uploader.queue.map((fileItem) => {\n      return fileItem.file;\n    });\n  }\n  upload() {   \n    \n    // var token = currentUser.token; // your token\n  // console.log(currentUser.shortName);\n  let files = this.getFiles();\n  let requests = [];\n  console.log(\"selected files\",files[0]);\n  // files.forEach((file) => {\n    let formData = new FormData();\n    let extension=files[0].name\n    console.log(\"extension file\",this.userCreation.value['fncid']+extension);\n    formData.append('file',files[0].rawFile,this.userCreation.value['fncid']+'@'+extension);\n    \n    if(!this.userCreation.value['shortname']){\n      this.notificationService.warn(\"Please enter Registration id of entity\")\n    }\n    else{\n      this.http.post('http://127.0.0.1:8000/registerformimage',formData).subscribe(\n      res=>{\n        console.log(\"respond from image view\")\n        this.status1=true;\n        this.uploader.clearQueue();\n      },\n      err => {  \n        console.log(err);\n      }\n    ); \n    }\n        \n  \n}\n  onSubmit(){\n  \n    this.newuser.createUser(this.userCreation.value).subscribe(res=>{\n      this.notificationService.success('! User Created Succefully');\n      this.userCreation.reset();\n    },error=>{\n      console.log(\"error occured\",error.message);\n      this.userCreation.reset();\n      this.notificationService.warn('! Error has occured while creating user');\n      this.notificationService.warn('! Please check whether user already exists or not');\n      \n    })\n   }\n  \n}\n\n\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<div class=\"container\">\n    <form [formGroup]=\"userCreation\" (ngSubmit)=\"onSubmit()\">\n        <mat-card class=\"example-card\">\n            <mat-card-header>\n                <div mat-card-avatar><span class=\"material-icons\">\n                person_add_alt_1\n                    </span>\n                </div>\n                <mat-card-title>New User</mat-card-title>\n            </mat-card-header>\n            <hr>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Fees and Charges Registration ID <span class=\"red\">*</span></mat-label>\n                        <input matInput formControlName=\"fncid\" style=\"text-transform:uppercase\" placeholder=\"Ex. SRAPG1N\" value=\"\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        input\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Full Name of the Entity<span class=\"red\">*</span></mat-label>\n                        <input matInput formControlName=\"fullname\" placeholder=\"Full Name\" value=\"\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        date_range\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Date of Registration<span class=\"red\">*</span></mat-label>\n                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"dateofregistration\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker1></mat-datepicker>\n                    </mat-form-field>\n                </div>\n            </div>\n            <!-- Second Row -->\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        input\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Short Name<span class=\"red\">*</span></mat-label>\n                        <input matInput formControlName=\"shortname\" placeholder=\"Short Name\" value=\"\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        arrow_drop_down_circle\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>User Category<span class=\"red\">*</span></mat-label>\n                        <mat-select formControlName=\"userCategory\">\n                        <mat-option \n                            *ngFor=\"let user of userCategory\" [value]=\"user\"\n                        >{{user}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                \n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        person\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>User Name<span class=\"red\">*</span></mat-label>\n                        <input matInput formControlName=\"entityname\" placeholder=\"Entity Name/User Name\" value=\"\">\n                    </mat-form-field>\n                </div>\n                \n            </div>\n            <!-- 3rd Row-->\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Alias Name 1<span class=\"red\">*</span></mat-label>\n                        <input matInput formControlName=\"alias1\" placeholder=\"Short Name\" value=\"\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Alias Name 2<span class=\"red\">*</span></mat-label>\n                        <input matInput formControlName=\"alias2\" placeholder=\"Short Name\" value=\"\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Alias Name 3<span class=\"red\">*</span></mat-label>\n                        <input matInput formControlName=\"alias3\" placeholder=\"Short Name\" value=\"\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <!-- Alias 3 -->\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        announcement\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Alias Name 4</mat-label>\n                        <input matInput formControlName=\"alias4\" placeholder=\"Short Name\" value=\"\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        email\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Email Id<span class=\"red\">*</span></mat-label>\n                        <input matInput formControlName=\"email\" placeholder=\"Email id\" value=\"\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        dialer_sip\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>Mobile No.<span class=\"red\">*</span></mat-label>\n                            <input matInput placeholder=\"Ex: 954365XXXX\" formControlName=\"mobileno\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <span class=\"material-icons\">\n                        arrow_drop_down_circle\n                    </span>\n                    <mat-form-field appearance=\"outline\" style=\"width:250px;margin-left:10px;\">\n                        <mat-label>User type<span class=\"red\">*</span></mat-label>\n                        <mat-select formControlName=\"userPrivileges\">\n                        <mat-option \n                            *ngFor=\"let type of userPrivileges\" [value]=\"type\"\n                        >{{type}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <hr>\n            <div class=\"row\" id=\"fileChoosen\">\n                <div class=\"col-sm-4\">\n                    <input type=\"file\"  placeholder=\"choose file\" ng2FileSelect [uploader]=\"uploader\" enctype=\"multipart/form-data\" accept=\"application/pdf,image/jpg,image/jpeg,image/png\" />\n                </div>\n                <div class=\"col-sm-4\">\n                    <button (click)=\"upload()\" type=\"button\">Upload file</button>\n                </div>\n                <div class=\"col-sm-4\">\n                    <span *ngIf=\"status1\" class=\"material-icons colortoIcon\">\n                        check_circle_outline\n                    </span>\n                </div>\n            </div>\n            <hr>\n            <p> <b>Note: </b> Only .jpeg  .jpg  .png .pdf are allowed. File should be <mark>proof of any bank account </mark></p>\n            <hr>\n            <mat-card-content>\n                <p>\n                Note1:<mark>Defalut password is <strong>\"password1\"</strong></mark> <br>\n                Note2: Id means Fees and Charges Id<br>\n                        Alias Name 2 with reference to Scheduling Name &\n                        Alias Name 3 with reference to SRPC Name &<br>\n                        If possible  assign Alias Name 4. \n                </p>\n            </mat-card-content>\n\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" [disabled]=\"!userCreation.valid\">Create</button>\n            </mat-card-actions>\n        </mat-card>\n    </form>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsercreationService {\n\n  constructor(private http:HttpClient) { }\n\n  createUser(formdata){\n    return this.http.post('http://127.0.0.1:8000/createuser',formdata)\n  }\n\n  addBankDetails(bankdetails:FormGroup){\n    return this.http.post('http://127.0.0.1:8000/bankdetails',bankdetails)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from 'src/app/registration/notification.service';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ConfirmedValidator } from './userdetails.validator';\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n\n  usernamelist:Array<string>=[];\n  selected:string;\n  errormessage:string;\n  matselected:boolean=false;\n  constructor(private http:HttpClient,private notificationService:NotificationService,\n              private fb:FormBuilder) { }\n\n  changePassword=this.fb.group({\n    'selecteduser':new FormControl(null,Validators.required),\n    'password':new FormControl(null,[Validators.required]),\n    'confirm_password':new FormControl(null,Validators.required)\n  },{ \n    validator: ConfirmedValidator('password', 'confirm_password')\n  })\n\n  get f(){\n    return this.changePassword.controls;\n  }\n   \n  ngOnInit(): void {\n    this.http.get('http://127.0.0.1:8000/getusers').subscribe(usernames=>{\n      console.log(\"succesfully fetched users\",usernames);\n      \n            for (const key in usernames) {\n              this.usernamelist.push(usernames[key]);\n                \n            }\n            return this.usernamelist;\n        \n    },error=>{\n      this.errormessage=error;\n      this.notificationService.warn(\"Error Occured,Please close the window and try again\")\n    })\n  }\n  choosen(event){\n    if(event.value){\n      this.matselected=true;\n      console.log(this.matselected);\n    }\n\n  }\n  selecteduser(){\n  \n    this.http.post('http://127.0.0.1:8000/logindetails',this.changePassword.value).subscribe(res=>{\n\n      this.notificationService.success(\"Password Changed Successfully\");\n      this.changePassword.reset();\n      // console.log(\"succesfully downloaded\",res['content']);\n      // var fileText=res['content'];\n      // var fileName = this.selected+\".txt\"\n      // // this.saveTextAsFile(fileText, fileName);\n    \n    },error=>{\n      this.notificationService.warn(\"Error Occured,Try again later\");\n    })\n  }\n  saveTextAsFile(data,filename){\n\n    if(!data) {\n        console.error('Console.save: No data')\n        return;\n    }\n\n    if(!filename) filename = 'console.json'\n\n    var blob = new Blob([data], {type: 'text/plain'}),\n        e    = document.createEvent('MouseEvents'),\n        a    = document.createElement('a')\n// FOR IE:\n\n    if (window.navigator && window.navigator.msSaveOrOpenBlob)\n      {\n        window.navigator.msSaveOrOpenBlob(blob, filename);\n      }\n    else\n      {\n        var e = document.createEvent('MouseEvents'),\n            a = document.createElement('a');\n\n        a.download = filename;\n        a.href = window.URL.createObjectURL(blob);\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\n        e.initEvent('click', true, false);\n        a.dispatchEvent(e);\n      }\n    }\n\n\n\n}\n","<div>\n    <app-header></app-header>\n</div>\n<br>\n<!-- Here in password(line no 25) used confirm_password validator and vice versa -->\n<div class=\"container\">\n        <mat-card class=\"example-card\">\n        <form [formGroup]=\"changePassword\" (ngSubmit)=\"selecteduser()\">\n        <mat-card-content>\n            <span class=\"material-icons\">\n                account_circle\n            </span>\n            <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                <mat-label>user name</mat-label>\n                <mat-select formControlName=\"selecteduser\">\n                    <mat-option *ngFor=\"let user of usernamelist\" [value]=\"user\">{{user}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <br>\n            <span class=\"material-icons\">\n                privacy_tip\n            </span>\n            <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                <mat-label>Password</mat-label>\n                    <input matInput placeholder=\"Password\" formControlName=\"confirm_password\" type=\"password\">\n                \n            </mat-form-field>\n            \n            <br>\n            <!-- if any error -->\n            <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.password.errors.required\">Password is required.</div>\n            </div>\n            <br>\n            <span class=\"material-icons\">    \n                privacy_tip\n            </span>\n            <mat-form-field appearance=\"outline\" style=\"width:237px;margin-left:10px;\">\n                <mat-label>Confirm Password</mat-label>\n                    <input matInput placeholder=\"Confirm Password\" formControlName=\"password\" type=\"password\">\n            </mat-form-field>\n            <br>\n            <div *ngIf=\"f.confirm_password.touched && f.confirm_password.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.confirm_password.errors.required\">Password is required.</div>\n                <div *ngIf=\"f.confirm_password.errors.confirmedValidator\">Password and Confirm Password must be match.</div>\n            </div>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-raised-button color=\"accent\" class=\"pull-right\" type=\"submit\" [disabled]=\"!changePassword.valid\">Change Password</button>\n        </mat-card-actions>\n        <br>\n    </form>\n    <p *ngIf=\"errormessage\" style=\"color:red;\">Error Occured While Fetching the users</p>\n    </mat-card>\n</div>","import { FormGroup } from '@angular/forms';\r\n    \r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .then(ref => {\n    // Ensure Angular destroys itself on hot reloads.\n    if (window['ngRef']) {\n      window['ngRef'].destroy();\n    }\n    window['ngRef'] = ref;\n\n    // Otherwise, log the boot error\n  }).\n  catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}